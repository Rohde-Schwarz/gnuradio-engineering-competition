# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_dtv_swig', [dirname(__file__)])
        except ImportError:
            import _dtv_swig
            return _dtv_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_dtv_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _dtv_swig = swig_import_helper()
    del swig_import_helper
else:
    import _dtv_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
    """high_res_timer_now() -> gr::high_res_timer_type"""
    return _dtv_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
    """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
    return _dtv_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
    """high_res_timer_tps() -> gr::high_res_timer_type"""
    return _dtv_swig.high_res_timer_tps()

def high_res_timer_epoch():
    """high_res_timer_epoch() -> gr::high_res_timer_type"""
    return _dtv_swig.high_res_timer_epoch()
class atsc_deinterleaver(object):
    """Proxy of C++ gr::dtv::atsc_deinterleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_deinterleaver_sptr"""
        return _dtv_swig.atsc_deinterleaver_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_deinterleaver
    __del__ = lambda self: None
atsc_deinterleaver_swigregister = _dtv_swig.atsc_deinterleaver_swigregister
atsc_deinterleaver_swigregister(atsc_deinterleaver)

def atsc_deinterleaver_make():
    """atsc_deinterleaver_make() -> atsc_deinterleaver_sptr"""
    return _dtv_swig.atsc_deinterleaver_make()

class atsc_depad(object):
    """Proxy of C++ gr::dtv::atsc_depad class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_depad_sptr"""
        return _dtv_swig.atsc_depad_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_depad
    __del__ = lambda self: None
atsc_depad_swigregister = _dtv_swig.atsc_depad_swigregister
atsc_depad_swigregister(atsc_depad)

def atsc_depad_make():
    """atsc_depad_make() -> atsc_depad_sptr"""
    return _dtv_swig.atsc_depad_make()

class atsc_derandomizer(object):
    """Proxy of C++ gr::dtv::atsc_derandomizer class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_derandomizer_sptr"""
        return _dtv_swig.atsc_derandomizer_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_derandomizer
    __del__ = lambda self: None
atsc_derandomizer_swigregister = _dtv_swig.atsc_derandomizer_swigregister
atsc_derandomizer_swigregister(atsc_derandomizer)

def atsc_derandomizer_make():
    """atsc_derandomizer_make() -> atsc_derandomizer_sptr"""
    return _dtv_swig.atsc_derandomizer_make()

class atsc_equalizer(object):
    """Proxy of C++ gr::dtv::atsc_equalizer class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_equalizer_sptr"""
        return _dtv_swig.atsc_equalizer_make()

    make = staticmethod(make)

    def taps(self):
        """taps(atsc_equalizer self) -> pmt_vector_float"""
        return _dtv_swig.atsc_equalizer_taps(self)


    def data(self):
        """data(atsc_equalizer self) -> pmt_vector_float"""
        return _dtv_swig.atsc_equalizer_data(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_equalizer
    __del__ = lambda self: None
atsc_equalizer_swigregister = _dtv_swig.atsc_equalizer_swigregister
atsc_equalizer_swigregister(atsc_equalizer)

def atsc_equalizer_make():
    """atsc_equalizer_make() -> atsc_equalizer_sptr"""
    return _dtv_swig.atsc_equalizer_make()

class atsc_field_sync_mux(object):
    """Proxy of C++ gr::dtv::atsc_field_sync_mux class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_field_sync_mux_sptr"""
        return _dtv_swig.atsc_field_sync_mux_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_field_sync_mux
    __del__ = lambda self: None
atsc_field_sync_mux_swigregister = _dtv_swig.atsc_field_sync_mux_swigregister
atsc_field_sync_mux_swigregister(atsc_field_sync_mux)

def atsc_field_sync_mux_make():
    """atsc_field_sync_mux_make() -> atsc_field_sync_mux_sptr"""
    return _dtv_swig.atsc_field_sync_mux_make()

class atsc_fpll(object):
    """Proxy of C++ gr::dtv::atsc_fpll class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(rate):
        """make(float rate) -> atsc_fpll_sptr"""
        return _dtv_swig.atsc_fpll_make(rate)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_fpll
    __del__ = lambda self: None
atsc_fpll_swigregister = _dtv_swig.atsc_fpll_swigregister
atsc_fpll_swigregister(atsc_fpll)

def atsc_fpll_make(rate):
    """atsc_fpll_make(float rate) -> atsc_fpll_sptr"""
    return _dtv_swig.atsc_fpll_make(rate)

class atsc_fs_checker(object):
    """Proxy of C++ gr::dtv::atsc_fs_checker class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_fs_checker_sptr"""
        return _dtv_swig.atsc_fs_checker_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_fs_checker
    __del__ = lambda self: None
atsc_fs_checker_swigregister = _dtv_swig.atsc_fs_checker_swigregister
atsc_fs_checker_swigregister(atsc_fs_checker)

def atsc_fs_checker_make():
    """atsc_fs_checker_make() -> atsc_fs_checker_sptr"""
    return _dtv_swig.atsc_fs_checker_make()

class atsc_interleaver(object):
    """Proxy of C++ gr::dtv::atsc_interleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_interleaver_sptr"""
        return _dtv_swig.atsc_interleaver_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_interleaver
    __del__ = lambda self: None
atsc_interleaver_swigregister = _dtv_swig.atsc_interleaver_swigregister
atsc_interleaver_swigregister(atsc_interleaver)

def atsc_interleaver_make():
    """atsc_interleaver_make() -> atsc_interleaver_sptr"""
    return _dtv_swig.atsc_interleaver_make()

class atsc_pad(object):
    """Proxy of C++ gr::dtv::atsc_pad class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_pad_sptr"""
        return _dtv_swig.atsc_pad_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_pad
    __del__ = lambda self: None
atsc_pad_swigregister = _dtv_swig.atsc_pad_swigregister
atsc_pad_swigregister(atsc_pad)

def atsc_pad_make():
    """atsc_pad_make() -> atsc_pad_sptr"""
    return _dtv_swig.atsc_pad_make()

class atsc_randomizer(object):
    """Proxy of C++ gr::dtv::atsc_randomizer class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_randomizer_sptr"""
        return _dtv_swig.atsc_randomizer_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_randomizer
    __del__ = lambda self: None
atsc_randomizer_swigregister = _dtv_swig.atsc_randomizer_swigregister
atsc_randomizer_swigregister(atsc_randomizer)

def atsc_randomizer_make():
    """atsc_randomizer_make() -> atsc_randomizer_sptr"""
    return _dtv_swig.atsc_randomizer_make()

class atsc_rs_decoder(object):
    """Proxy of C++ gr::dtv::atsc_rs_decoder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def num_errors_corrected(self):
        """num_errors_corrected(atsc_rs_decoder self) -> int"""
        return _dtv_swig.atsc_rs_decoder_num_errors_corrected(self)


    def num_bad_packets(self):
        """num_bad_packets(atsc_rs_decoder self) -> int"""
        return _dtv_swig.atsc_rs_decoder_num_bad_packets(self)


    def num_packets(self):
        """num_packets(atsc_rs_decoder self) -> int"""
        return _dtv_swig.atsc_rs_decoder_num_packets(self)


    def make():
        """make() -> atsc_rs_decoder_sptr"""
        return _dtv_swig.atsc_rs_decoder_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_rs_decoder
    __del__ = lambda self: None
atsc_rs_decoder_swigregister = _dtv_swig.atsc_rs_decoder_swigregister
atsc_rs_decoder_swigregister(atsc_rs_decoder)

def atsc_rs_decoder_make():
    """atsc_rs_decoder_make() -> atsc_rs_decoder_sptr"""
    return _dtv_swig.atsc_rs_decoder_make()

class atsc_rs_encoder(object):
    """Proxy of C++ gr::dtv::atsc_rs_encoder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_rs_encoder_sptr"""
        return _dtv_swig.atsc_rs_encoder_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_rs_encoder
    __del__ = lambda self: None
atsc_rs_encoder_swigregister = _dtv_swig.atsc_rs_encoder_swigregister
atsc_rs_encoder_swigregister(atsc_rs_encoder)

def atsc_rs_encoder_make():
    """atsc_rs_encoder_make() -> atsc_rs_encoder_sptr"""
    return _dtv_swig.atsc_rs_encoder_make()

class atsc_sync(object):
    """Proxy of C++ gr::dtv::atsc_sync class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(rate):
        """make(float rate) -> atsc_sync_sptr"""
        return _dtv_swig.atsc_sync_make(rate)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_sync
    __del__ = lambda self: None
atsc_sync_swigregister = _dtv_swig.atsc_sync_swigregister
atsc_sync_swigregister(atsc_sync)

def atsc_sync_make(rate):
    """atsc_sync_make(float rate) -> atsc_sync_sptr"""
    return _dtv_swig.atsc_sync_make(rate)

class atsc_trellis_encoder(object):
    """Proxy of C++ gr::dtv::atsc_trellis_encoder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_trellis_encoder_sptr"""
        return _dtv_swig.atsc_trellis_encoder_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_atsc_trellis_encoder
    __del__ = lambda self: None
atsc_trellis_encoder_swigregister = _dtv_swig.atsc_trellis_encoder_swigregister
atsc_trellis_encoder_swigregister(atsc_trellis_encoder)

def atsc_trellis_encoder_make():
    """atsc_trellis_encoder_make() -> atsc_trellis_encoder_sptr"""
    return _dtv_swig.atsc_trellis_encoder_make()

class atsc_viterbi_decoder(object):
    """Proxy of C++ gr::dtv::atsc_viterbi_decoder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def make():
        """make() -> atsc_viterbi_decoder_sptr"""
        return _dtv_swig.atsc_viterbi_decoder_make()

    make = staticmethod(make)

    def decoder_metrics(self):
        """decoder_metrics(atsc_viterbi_decoder self) -> pmt_vector_float"""
        return _dtv_swig.atsc_viterbi_decoder_decoder_metrics(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_viterbi_decoder
    __del__ = lambda self: None
atsc_viterbi_decoder_swigregister = _dtv_swig.atsc_viterbi_decoder_swigregister
atsc_viterbi_decoder_swigregister(atsc_viterbi_decoder)

def atsc_viterbi_decoder_make():
    """atsc_viterbi_decoder_make() -> atsc_viterbi_decoder_sptr"""
    return _dtv_swig.atsc_viterbi_decoder_make()


_dtv_swig.STANDARD_DVBS2_swigconstant(_dtv_swig)
STANDARD_DVBS2 = _dtv_swig.STANDARD_DVBS2

_dtv_swig.STANDARD_DVBT2_swigconstant(_dtv_swig)
STANDARD_DVBT2 = _dtv_swig.STANDARD_DVBT2

_dtv_swig.C1_4_swigconstant(_dtv_swig)
C1_4 = _dtv_swig.C1_4

_dtv_swig.C1_3_swigconstant(_dtv_swig)
C1_3 = _dtv_swig.C1_3

_dtv_swig.C2_5_swigconstant(_dtv_swig)
C2_5 = _dtv_swig.C2_5

_dtv_swig.C1_2_swigconstant(_dtv_swig)
C1_2 = _dtv_swig.C1_2

_dtv_swig.C3_5_swigconstant(_dtv_swig)
C3_5 = _dtv_swig.C3_5

_dtv_swig.C2_3_swigconstant(_dtv_swig)
C2_3 = _dtv_swig.C2_3

_dtv_swig.C3_4_swigconstant(_dtv_swig)
C3_4 = _dtv_swig.C3_4

_dtv_swig.C4_5_swigconstant(_dtv_swig)
C4_5 = _dtv_swig.C4_5

_dtv_swig.C5_6_swigconstant(_dtv_swig)
C5_6 = _dtv_swig.C5_6

_dtv_swig.C7_8_swigconstant(_dtv_swig)
C7_8 = _dtv_swig.C7_8

_dtv_swig.C8_9_swigconstant(_dtv_swig)
C8_9 = _dtv_swig.C8_9

_dtv_swig.C9_10_swigconstant(_dtv_swig)
C9_10 = _dtv_swig.C9_10

_dtv_swig.C13_45_swigconstant(_dtv_swig)
C13_45 = _dtv_swig.C13_45

_dtv_swig.C9_20_swigconstant(_dtv_swig)
C9_20 = _dtv_swig.C9_20

_dtv_swig.C90_180_swigconstant(_dtv_swig)
C90_180 = _dtv_swig.C90_180

_dtv_swig.C96_180_swigconstant(_dtv_swig)
C96_180 = _dtv_swig.C96_180

_dtv_swig.C11_20_swigconstant(_dtv_swig)
C11_20 = _dtv_swig.C11_20

_dtv_swig.C100_180_swigconstant(_dtv_swig)
C100_180 = _dtv_swig.C100_180

_dtv_swig.C104_180_swigconstant(_dtv_swig)
C104_180 = _dtv_swig.C104_180

_dtv_swig.C26_45_swigconstant(_dtv_swig)
C26_45 = _dtv_swig.C26_45

_dtv_swig.C18_30_swigconstant(_dtv_swig)
C18_30 = _dtv_swig.C18_30

_dtv_swig.C28_45_swigconstant(_dtv_swig)
C28_45 = _dtv_swig.C28_45

_dtv_swig.C23_36_swigconstant(_dtv_swig)
C23_36 = _dtv_swig.C23_36

_dtv_swig.C116_180_swigconstant(_dtv_swig)
C116_180 = _dtv_swig.C116_180

_dtv_swig.C20_30_swigconstant(_dtv_swig)
C20_30 = _dtv_swig.C20_30

_dtv_swig.C124_180_swigconstant(_dtv_swig)
C124_180 = _dtv_swig.C124_180

_dtv_swig.C25_36_swigconstant(_dtv_swig)
C25_36 = _dtv_swig.C25_36

_dtv_swig.C128_180_swigconstant(_dtv_swig)
C128_180 = _dtv_swig.C128_180

_dtv_swig.C13_18_swigconstant(_dtv_swig)
C13_18 = _dtv_swig.C13_18

_dtv_swig.C132_180_swigconstant(_dtv_swig)
C132_180 = _dtv_swig.C132_180

_dtv_swig.C22_30_swigconstant(_dtv_swig)
C22_30 = _dtv_swig.C22_30

_dtv_swig.C135_180_swigconstant(_dtv_swig)
C135_180 = _dtv_swig.C135_180

_dtv_swig.C140_180_swigconstant(_dtv_swig)
C140_180 = _dtv_swig.C140_180

_dtv_swig.C7_9_swigconstant(_dtv_swig)
C7_9 = _dtv_swig.C7_9

_dtv_swig.C154_180_swigconstant(_dtv_swig)
C154_180 = _dtv_swig.C154_180

_dtv_swig.C11_45_swigconstant(_dtv_swig)
C11_45 = _dtv_swig.C11_45

_dtv_swig.C4_15_swigconstant(_dtv_swig)
C4_15 = _dtv_swig.C4_15

_dtv_swig.C14_45_swigconstant(_dtv_swig)
C14_45 = _dtv_swig.C14_45

_dtv_swig.C7_15_swigconstant(_dtv_swig)
C7_15 = _dtv_swig.C7_15

_dtv_swig.C8_15_swigconstant(_dtv_swig)
C8_15 = _dtv_swig.C8_15

_dtv_swig.C32_45_swigconstant(_dtv_swig)
C32_45 = _dtv_swig.C32_45

_dtv_swig.C2_9_VLSNR_swigconstant(_dtv_swig)
C2_9_VLSNR = _dtv_swig.C2_9_VLSNR

_dtv_swig.C1_5_MEDIUM_swigconstant(_dtv_swig)
C1_5_MEDIUM = _dtv_swig.C1_5_MEDIUM

_dtv_swig.C11_45_MEDIUM_swigconstant(_dtv_swig)
C11_45_MEDIUM = _dtv_swig.C11_45_MEDIUM

_dtv_swig.C1_3_MEDIUM_swigconstant(_dtv_swig)
C1_3_MEDIUM = _dtv_swig.C1_3_MEDIUM

_dtv_swig.C1_5_VLSNR_SF2_swigconstant(_dtv_swig)
C1_5_VLSNR_SF2 = _dtv_swig.C1_5_VLSNR_SF2

_dtv_swig.C11_45_VLSNR_SF2_swigconstant(_dtv_swig)
C11_45_VLSNR_SF2 = _dtv_swig.C11_45_VLSNR_SF2

_dtv_swig.C1_5_VLSNR_swigconstant(_dtv_swig)
C1_5_VLSNR = _dtv_swig.C1_5_VLSNR

_dtv_swig.C4_15_VLSNR_swigconstant(_dtv_swig)
C4_15_VLSNR = _dtv_swig.C4_15_VLSNR

_dtv_swig.C1_3_VLSNR_swigconstant(_dtv_swig)
C1_3_VLSNR = _dtv_swig.C1_3_VLSNR

_dtv_swig.C_OTHER_swigconstant(_dtv_swig)
C_OTHER = _dtv_swig.C_OTHER

_dtv_swig.FECFRAME_SHORT_swigconstant(_dtv_swig)
FECFRAME_SHORT = _dtv_swig.FECFRAME_SHORT

_dtv_swig.FECFRAME_NORMAL_swigconstant(_dtv_swig)
FECFRAME_NORMAL = _dtv_swig.FECFRAME_NORMAL

_dtv_swig.FECFRAME_MEDIUM_swigconstant(_dtv_swig)
FECFRAME_MEDIUM = _dtv_swig.FECFRAME_MEDIUM

_dtv_swig.MOD_QPSK_swigconstant(_dtv_swig)
MOD_QPSK = _dtv_swig.MOD_QPSK

_dtv_swig.MOD_16QAM_swigconstant(_dtv_swig)
MOD_16QAM = _dtv_swig.MOD_16QAM

_dtv_swig.MOD_64QAM_swigconstant(_dtv_swig)
MOD_64QAM = _dtv_swig.MOD_64QAM

_dtv_swig.MOD_256QAM_swigconstant(_dtv_swig)
MOD_256QAM = _dtv_swig.MOD_256QAM

_dtv_swig.MOD_8PSK_swigconstant(_dtv_swig)
MOD_8PSK = _dtv_swig.MOD_8PSK

_dtv_swig.MOD_8APSK_swigconstant(_dtv_swig)
MOD_8APSK = _dtv_swig.MOD_8APSK

_dtv_swig.MOD_16APSK_swigconstant(_dtv_swig)
MOD_16APSK = _dtv_swig.MOD_16APSK

_dtv_swig.MOD_8_8APSK_swigconstant(_dtv_swig)
MOD_8_8APSK = _dtv_swig.MOD_8_8APSK

_dtv_swig.MOD_32APSK_swigconstant(_dtv_swig)
MOD_32APSK = _dtv_swig.MOD_32APSK

_dtv_swig.MOD_4_12_16APSK_swigconstant(_dtv_swig)
MOD_4_12_16APSK = _dtv_swig.MOD_4_12_16APSK

_dtv_swig.MOD_4_8_4_16APSK_swigconstant(_dtv_swig)
MOD_4_8_4_16APSK = _dtv_swig.MOD_4_8_4_16APSK

_dtv_swig.MOD_64APSK_swigconstant(_dtv_swig)
MOD_64APSK = _dtv_swig.MOD_64APSK

_dtv_swig.MOD_8_16_20_20APSK_swigconstant(_dtv_swig)
MOD_8_16_20_20APSK = _dtv_swig.MOD_8_16_20_20APSK

_dtv_swig.MOD_4_12_20_28APSK_swigconstant(_dtv_swig)
MOD_4_12_20_28APSK = _dtv_swig.MOD_4_12_20_28APSK

_dtv_swig.MOD_128APSK_swigconstant(_dtv_swig)
MOD_128APSK = _dtv_swig.MOD_128APSK

_dtv_swig.MOD_256APSK_swigconstant(_dtv_swig)
MOD_256APSK = _dtv_swig.MOD_256APSK

_dtv_swig.MOD_BPSK_swigconstant(_dtv_swig)
MOD_BPSK = _dtv_swig.MOD_BPSK

_dtv_swig.MOD_BPSK_SF2_swigconstant(_dtv_swig)
MOD_BPSK_SF2 = _dtv_swig.MOD_BPSK_SF2

_dtv_swig.MOD_8VSB_swigconstant(_dtv_swig)
MOD_8VSB = _dtv_swig.MOD_8VSB

_dtv_swig.MOD_OTHER_swigconstant(_dtv_swig)
MOD_OTHER = _dtv_swig.MOD_OTHER

_dtv_swig.GI_1_32_swigconstant(_dtv_swig)
GI_1_32 = _dtv_swig.GI_1_32

_dtv_swig.GI_1_16_swigconstant(_dtv_swig)
GI_1_16 = _dtv_swig.GI_1_16

_dtv_swig.GI_1_8_swigconstant(_dtv_swig)
GI_1_8 = _dtv_swig.GI_1_8

_dtv_swig.GI_1_4_swigconstant(_dtv_swig)
GI_1_4 = _dtv_swig.GI_1_4

_dtv_swig.GI_1_128_swigconstant(_dtv_swig)
GI_1_128 = _dtv_swig.GI_1_128

_dtv_swig.GI_19_128_swigconstant(_dtv_swig)
GI_19_128 = _dtv_swig.GI_19_128

_dtv_swig.GI_19_256_swigconstant(_dtv_swig)
GI_19_256 = _dtv_swig.GI_19_256

_dtv_swig.NH_swigconstant(_dtv_swig)
NH = _dtv_swig.NH

_dtv_swig.ALPHA1_swigconstant(_dtv_swig)
ALPHA1 = _dtv_swig.ALPHA1

_dtv_swig.ALPHA2_swigconstant(_dtv_swig)
ALPHA2 = _dtv_swig.ALPHA2

_dtv_swig.ALPHA4_swigconstant(_dtv_swig)
ALPHA4 = _dtv_swig.ALPHA4

_dtv_swig.T2k_swigconstant(_dtv_swig)
T2k = _dtv_swig.T2k

_dtv_swig.T8k_swigconstant(_dtv_swig)
T8k = _dtv_swig.T8k

_dtv_swig.ROTATION_OFF_swigconstant(_dtv_swig)
ROTATION_OFF = _dtv_swig.ROTATION_OFF

_dtv_swig.ROTATION_ON_swigconstant(_dtv_swig)
ROTATION_ON = _dtv_swig.ROTATION_ON

_dtv_swig.STREAMTYPE_TS_swigconstant(_dtv_swig)
STREAMTYPE_TS = _dtv_swig.STREAMTYPE_TS

_dtv_swig.STREAMTYPE_GS_swigconstant(_dtv_swig)
STREAMTYPE_GS = _dtv_swig.STREAMTYPE_GS

_dtv_swig.STREAMTYPE_BOTH_swigconstant(_dtv_swig)
STREAMTYPE_BOTH = _dtv_swig.STREAMTYPE_BOTH

_dtv_swig.INPUTMODE_NORMAL_swigconstant(_dtv_swig)
INPUTMODE_NORMAL = _dtv_swig.INPUTMODE_NORMAL

_dtv_swig.INPUTMODE_HIEFF_swigconstant(_dtv_swig)
INPUTMODE_HIEFF = _dtv_swig.INPUTMODE_HIEFF

_dtv_swig.CARRIERS_NORMAL_swigconstant(_dtv_swig)
CARRIERS_NORMAL = _dtv_swig.CARRIERS_NORMAL

_dtv_swig.CARRIERS_EXTENDED_swigconstant(_dtv_swig)
CARRIERS_EXTENDED = _dtv_swig.CARRIERS_EXTENDED

_dtv_swig.PREAMBLE_T2_SISO_swigconstant(_dtv_swig)
PREAMBLE_T2_SISO = _dtv_swig.PREAMBLE_T2_SISO

_dtv_swig.PREAMBLE_T2_MISO_swigconstant(_dtv_swig)
PREAMBLE_T2_MISO = _dtv_swig.PREAMBLE_T2_MISO

_dtv_swig.PREAMBLE_NON_T2_swigconstant(_dtv_swig)
PREAMBLE_NON_T2 = _dtv_swig.PREAMBLE_NON_T2

_dtv_swig.PREAMBLE_T2_LITE_SISO_swigconstant(_dtv_swig)
PREAMBLE_T2_LITE_SISO = _dtv_swig.PREAMBLE_T2_LITE_SISO

_dtv_swig.PREAMBLE_T2_LITE_MISO_swigconstant(_dtv_swig)
PREAMBLE_T2_LITE_MISO = _dtv_swig.PREAMBLE_T2_LITE_MISO

_dtv_swig.FFTSIZE_2K_swigconstant(_dtv_swig)
FFTSIZE_2K = _dtv_swig.FFTSIZE_2K

_dtv_swig.FFTSIZE_8K_swigconstant(_dtv_swig)
FFTSIZE_8K = _dtv_swig.FFTSIZE_8K

_dtv_swig.FFTSIZE_4K_swigconstant(_dtv_swig)
FFTSIZE_4K = _dtv_swig.FFTSIZE_4K

_dtv_swig.FFTSIZE_1K_swigconstant(_dtv_swig)
FFTSIZE_1K = _dtv_swig.FFTSIZE_1K

_dtv_swig.FFTSIZE_16K_swigconstant(_dtv_swig)
FFTSIZE_16K = _dtv_swig.FFTSIZE_16K

_dtv_swig.FFTSIZE_32K_swigconstant(_dtv_swig)
FFTSIZE_32K = _dtv_swig.FFTSIZE_32K

_dtv_swig.FFTSIZE_8K_T2GI_swigconstant(_dtv_swig)
FFTSIZE_8K_T2GI = _dtv_swig.FFTSIZE_8K_T2GI

_dtv_swig.FFTSIZE_32K_T2GI_swigconstant(_dtv_swig)
FFTSIZE_32K_T2GI = _dtv_swig.FFTSIZE_32K_T2GI

_dtv_swig.FFTSIZE_16K_T2GI_swigconstant(_dtv_swig)
FFTSIZE_16K_T2GI = _dtv_swig.FFTSIZE_16K_T2GI

_dtv_swig.PAPR_OFF_swigconstant(_dtv_swig)
PAPR_OFF = _dtv_swig.PAPR_OFF

_dtv_swig.PAPR_ACE_swigconstant(_dtv_swig)
PAPR_ACE = _dtv_swig.PAPR_ACE

_dtv_swig.PAPR_TR_swigconstant(_dtv_swig)
PAPR_TR = _dtv_swig.PAPR_TR

_dtv_swig.PAPR_BOTH_swigconstant(_dtv_swig)
PAPR_BOTH = _dtv_swig.PAPR_BOTH

_dtv_swig.L1_MOD_BPSK_swigconstant(_dtv_swig)
L1_MOD_BPSK = _dtv_swig.L1_MOD_BPSK

_dtv_swig.L1_MOD_QPSK_swigconstant(_dtv_swig)
L1_MOD_QPSK = _dtv_swig.L1_MOD_QPSK

_dtv_swig.L1_MOD_16QAM_swigconstant(_dtv_swig)
L1_MOD_16QAM = _dtv_swig.L1_MOD_16QAM

_dtv_swig.L1_MOD_64QAM_swigconstant(_dtv_swig)
L1_MOD_64QAM = _dtv_swig.L1_MOD_64QAM

_dtv_swig.PILOT_PP1_swigconstant(_dtv_swig)
PILOT_PP1 = _dtv_swig.PILOT_PP1

_dtv_swig.PILOT_PP2_swigconstant(_dtv_swig)
PILOT_PP2 = _dtv_swig.PILOT_PP2

_dtv_swig.PILOT_PP3_swigconstant(_dtv_swig)
PILOT_PP3 = _dtv_swig.PILOT_PP3

_dtv_swig.PILOT_PP4_swigconstant(_dtv_swig)
PILOT_PP4 = _dtv_swig.PILOT_PP4

_dtv_swig.PILOT_PP5_swigconstant(_dtv_swig)
PILOT_PP5 = _dtv_swig.PILOT_PP5

_dtv_swig.PILOT_PP6_swigconstant(_dtv_swig)
PILOT_PP6 = _dtv_swig.PILOT_PP6

_dtv_swig.PILOT_PP7_swigconstant(_dtv_swig)
PILOT_PP7 = _dtv_swig.PILOT_PP7

_dtv_swig.PILOT_PP8_swigconstant(_dtv_swig)
PILOT_PP8 = _dtv_swig.PILOT_PP8

_dtv_swig.VERSION_111_swigconstant(_dtv_swig)
VERSION_111 = _dtv_swig.VERSION_111

_dtv_swig.VERSION_121_swigconstant(_dtv_swig)
VERSION_121 = _dtv_swig.VERSION_121

_dtv_swig.VERSION_131_swigconstant(_dtv_swig)
VERSION_131 = _dtv_swig.VERSION_131

_dtv_swig.RESERVED_OFF_swigconstant(_dtv_swig)
RESERVED_OFF = _dtv_swig.RESERVED_OFF

_dtv_swig.RESERVED_ON_swigconstant(_dtv_swig)
RESERVED_ON = _dtv_swig.RESERVED_ON

_dtv_swig.L1_SCRAMBLED_OFF_swigconstant(_dtv_swig)
L1_SCRAMBLED_OFF = _dtv_swig.L1_SCRAMBLED_OFF

_dtv_swig.L1_SCRAMBLED_ON_swigconstant(_dtv_swig)
L1_SCRAMBLED_ON = _dtv_swig.L1_SCRAMBLED_ON

_dtv_swig.MISO_TX1_swigconstant(_dtv_swig)
MISO_TX1 = _dtv_swig.MISO_TX1

_dtv_swig.MISO_TX2_swigconstant(_dtv_swig)
MISO_TX2 = _dtv_swig.MISO_TX2

_dtv_swig.SHOWLEVELS_OFF_swigconstant(_dtv_swig)
SHOWLEVELS_OFF = _dtv_swig.SHOWLEVELS_OFF

_dtv_swig.SHOWLEVELS_ON_swigconstant(_dtv_swig)
SHOWLEVELS_ON = _dtv_swig.SHOWLEVELS_ON

_dtv_swig.INBAND_OFF_swigconstant(_dtv_swig)
INBAND_OFF = _dtv_swig.INBAND_OFF

_dtv_swig.INBAND_ON_swigconstant(_dtv_swig)
INBAND_ON = _dtv_swig.INBAND_ON

_dtv_swig.EQUALIZATION_OFF_swigconstant(_dtv_swig)
EQUALIZATION_OFF = _dtv_swig.EQUALIZATION_OFF

_dtv_swig.EQUALIZATION_ON_swigconstant(_dtv_swig)
EQUALIZATION_ON = _dtv_swig.EQUALIZATION_ON

_dtv_swig.BANDWIDTH_1_7_MHZ_swigconstant(_dtv_swig)
BANDWIDTH_1_7_MHZ = _dtv_swig.BANDWIDTH_1_7_MHZ

_dtv_swig.BANDWIDTH_5_0_MHZ_swigconstant(_dtv_swig)
BANDWIDTH_5_0_MHZ = _dtv_swig.BANDWIDTH_5_0_MHZ

_dtv_swig.BANDWIDTH_6_0_MHZ_swigconstant(_dtv_swig)
BANDWIDTH_6_0_MHZ = _dtv_swig.BANDWIDTH_6_0_MHZ

_dtv_swig.BANDWIDTH_7_0_MHZ_swigconstant(_dtv_swig)
BANDWIDTH_7_0_MHZ = _dtv_swig.BANDWIDTH_7_0_MHZ

_dtv_swig.BANDWIDTH_8_0_MHZ_swigconstant(_dtv_swig)
BANDWIDTH_8_0_MHZ = _dtv_swig.BANDWIDTH_8_0_MHZ

_dtv_swig.BANDWIDTH_10_0_MHZ_swigconstant(_dtv_swig)
BANDWIDTH_10_0_MHZ = _dtv_swig.BANDWIDTH_10_0_MHZ

_dtv_swig.RO_0_35_swigconstant(_dtv_swig)
RO_0_35 = _dtv_swig.RO_0_35

_dtv_swig.RO_0_25_swigconstant(_dtv_swig)
RO_0_25 = _dtv_swig.RO_0_25

_dtv_swig.RO_0_20_swigconstant(_dtv_swig)
RO_0_20 = _dtv_swig.RO_0_20

_dtv_swig.RO_RESERVED_swigconstant(_dtv_swig)
RO_RESERVED = _dtv_swig.RO_RESERVED

_dtv_swig.RO_0_15_swigconstant(_dtv_swig)
RO_0_15 = _dtv_swig.RO_0_15

_dtv_swig.RO_0_10_swigconstant(_dtv_swig)
RO_0_10 = _dtv_swig.RO_0_10

_dtv_swig.RO_0_05_swigconstant(_dtv_swig)
RO_0_05 = _dtv_swig.RO_0_05

_dtv_swig.PILOTS_OFF_swigconstant(_dtv_swig)
PILOTS_OFF = _dtv_swig.PILOTS_OFF

_dtv_swig.PILOTS_ON_swigconstant(_dtv_swig)
PILOTS_ON = _dtv_swig.PILOTS_ON

_dtv_swig.INTERPOLATION_OFF_swigconstant(_dtv_swig)
INTERPOLATION_OFF = _dtv_swig.INTERPOLATION_OFF

_dtv_swig.INTERPOLATION_ON_swigconstant(_dtv_swig)
INTERPOLATION_ON = _dtv_swig.INTERPOLATION_ON
class dvb_bbheader_bb(object):
    """Proxy of C++ gr::dtv::dvb_bbheader_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(standard, framesize, rate, rolloff, mode, inband, fecblocks, tsrate):
        """make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvbs2_rolloff_factor_t rolloff, gr::dtv::dvbt2_inputmode_t mode, gr::dtv::dvbt2_inband_t inband, int fecblocks, int tsrate) -> dvb_bbheader_bb_sptr"""
        return _dtv_swig.dvb_bbheader_bb_make(standard, framesize, rate, rolloff, mode, inband, fecblocks, tsrate)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvb_bbheader_bb
    __del__ = lambda self: None
dvb_bbheader_bb_swigregister = _dtv_swig.dvb_bbheader_bb_swigregister
dvb_bbheader_bb_swigregister(dvb_bbheader_bb)

def dvb_bbheader_bb_make(standard, framesize, rate, rolloff, mode, inband, fecblocks, tsrate):
    """dvb_bbheader_bb_make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvbs2_rolloff_factor_t rolloff, gr::dtv::dvbt2_inputmode_t mode, gr::dtv::dvbt2_inband_t inband, int fecblocks, int tsrate) -> dvb_bbheader_bb_sptr"""
    return _dtv_swig.dvb_bbheader_bb_make(standard, framesize, rate, rolloff, mode, inband, fecblocks, tsrate)

class dvb_bbscrambler_bb(object):
    """Proxy of C++ gr::dtv::dvb_bbscrambler_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(standard, framesize, rate):
        """make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate) -> dvb_bbscrambler_bb_sptr"""
        return _dtv_swig.dvb_bbscrambler_bb_make(standard, framesize, rate)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvb_bbscrambler_bb
    __del__ = lambda self: None
dvb_bbscrambler_bb_swigregister = _dtv_swig.dvb_bbscrambler_bb_swigregister
dvb_bbscrambler_bb_swigregister(dvb_bbscrambler_bb)

def dvb_bbscrambler_bb_make(standard, framesize, rate):
    """dvb_bbscrambler_bb_make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate) -> dvb_bbscrambler_bb_sptr"""
    return _dtv_swig.dvb_bbscrambler_bb_make(standard, framesize, rate)

class dvb_bch_bb(object):
    """Proxy of C++ gr::dtv::dvb_bch_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(standard, framesize, rate):
        """make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate) -> dvb_bch_bb_sptr"""
        return _dtv_swig.dvb_bch_bb_make(standard, framesize, rate)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvb_bch_bb
    __del__ = lambda self: None
dvb_bch_bb_swigregister = _dtv_swig.dvb_bch_bb_swigregister
dvb_bch_bb_swigregister(dvb_bch_bb)

def dvb_bch_bb_make(standard, framesize, rate):
    """dvb_bch_bb_make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate) -> dvb_bch_bb_sptr"""
    return _dtv_swig.dvb_bch_bb_make(standard, framesize, rate)

class dvb_ldpc_bb(object):
    """Proxy of C++ gr::dtv::dvb_ldpc_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(standard, framesize, rate, constellation):
        """make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvb_ldpc_bb_sptr"""
        return _dtv_swig.dvb_ldpc_bb_make(standard, framesize, rate, constellation)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvb_ldpc_bb
    __del__ = lambda self: None
dvb_ldpc_bb_swigregister = _dtv_swig.dvb_ldpc_bb_swigregister
dvb_ldpc_bb_swigregister(dvb_ldpc_bb)

def dvb_ldpc_bb_make(standard, framesize, rate, constellation):
    """dvb_ldpc_bb_make(gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvb_ldpc_bb_sptr"""
    return _dtv_swig.dvb_ldpc_bb_make(standard, framesize, rate, constellation)

class dvbt2_interleaver_bb(object):
    """Proxy of C++ gr::dtv::dvbt2_interleaver_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, rate, constellation):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvbt2_interleaver_bb_sptr"""
        return _dtv_swig.dvbt2_interleaver_bb_make(framesize, rate, constellation)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_interleaver_bb
    __del__ = lambda self: None
dvbt2_interleaver_bb_swigregister = _dtv_swig.dvbt2_interleaver_bb_swigregister
dvbt2_interleaver_bb_swigregister(dvbt2_interleaver_bb)

def dvbt2_interleaver_bb_make(framesize, rate, constellation):
    """dvbt2_interleaver_bb_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvbt2_interleaver_bb_sptr"""
    return _dtv_swig.dvbt2_interleaver_bb_make(framesize, rate, constellation)

class dvbt2_modulator_bc(object):
    """Proxy of C++ gr::dtv::dvbt2_modulator_bc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, constellation, rotation):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt2_rotation_t rotation) -> dvbt2_modulator_bc_sptr"""
        return _dtv_swig.dvbt2_modulator_bc_make(framesize, constellation, rotation)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_modulator_bc
    __del__ = lambda self: None
dvbt2_modulator_bc_swigregister = _dtv_swig.dvbt2_modulator_bc_swigregister
dvbt2_modulator_bc_swigregister(dvbt2_modulator_bc)

def dvbt2_modulator_bc_make(framesize, constellation, rotation):
    """dvbt2_modulator_bc_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt2_rotation_t rotation) -> dvbt2_modulator_bc_sptr"""
    return _dtv_swig.dvbt2_modulator_bc_make(framesize, constellation, rotation)

class dvbt2_cellinterleaver_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_cellinterleaver_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, constellation, fecblocks, tiblocks):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_constellation_t constellation, int fecblocks, int tiblocks) -> dvbt2_cellinterleaver_cc_sptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_make(framesize, constellation, fecblocks, tiblocks)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_cellinterleaver_cc
    __del__ = lambda self: None
dvbt2_cellinterleaver_cc_swigregister = _dtv_swig.dvbt2_cellinterleaver_cc_swigregister
dvbt2_cellinterleaver_cc_swigregister(dvbt2_cellinterleaver_cc)

def dvbt2_cellinterleaver_cc_make(framesize, constellation, fecblocks, tiblocks):
    """dvbt2_cellinterleaver_cc_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_constellation_t constellation, int fecblocks, int tiblocks) -> dvbt2_cellinterleaver_cc_sptr"""
    return _dtv_swig.dvbt2_cellinterleaver_cc_make(framesize, constellation, fecblocks, tiblocks)

class dvbt2_framemapper_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_framemapper_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, rate, constellation, rotation, fecblocks, tiblocks, carriermode, fftsize, guardinterval, l1constellation, pilotpattern, t2frames, numdatasyms, paprmode, version, preamble, inputmode, reservedbiasbits, l1scrambled, inband):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt2_rotation_t rotation, int fecblocks, int tiblocks, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvb_guardinterval_t guardinterval, gr::dtv::dvbt2_l1constellation_t l1constellation, gr::dtv::dvbt2_pilotpattern_t pilotpattern, int t2frames, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_inputmode_t inputmode, gr::dtv::dvbt2_reservedbiasbits_t reservedbiasbits, gr::dtv::dvbt2_l1scrambled_t l1scrambled, gr::dtv::dvbt2_inband_t inband) -> dvbt2_framemapper_cc_sptr"""
        return _dtv_swig.dvbt2_framemapper_cc_make(framesize, rate, constellation, rotation, fecblocks, tiblocks, carriermode, fftsize, guardinterval, l1constellation, pilotpattern, t2frames, numdatasyms, paprmode, version, preamble, inputmode, reservedbiasbits, l1scrambled, inband)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_framemapper_cc
    __del__ = lambda self: None
dvbt2_framemapper_cc_swigregister = _dtv_swig.dvbt2_framemapper_cc_swigregister
dvbt2_framemapper_cc_swigregister(dvbt2_framemapper_cc)

def dvbt2_framemapper_cc_make(framesize, rate, constellation, rotation, fecblocks, tiblocks, carriermode, fftsize, guardinterval, l1constellation, pilotpattern, t2frames, numdatasyms, paprmode, version, preamble, inputmode, reservedbiasbits, l1scrambled, inband):
    """dvbt2_framemapper_cc_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt2_rotation_t rotation, int fecblocks, int tiblocks, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvb_guardinterval_t guardinterval, gr::dtv::dvbt2_l1constellation_t l1constellation, gr::dtv::dvbt2_pilotpattern_t pilotpattern, int t2frames, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_inputmode_t inputmode, gr::dtv::dvbt2_reservedbiasbits_t reservedbiasbits, gr::dtv::dvbt2_l1scrambled_t l1scrambled, gr::dtv::dvbt2_inband_t inband) -> dvbt2_framemapper_cc_sptr"""
    return _dtv_swig.dvbt2_framemapper_cc_make(framesize, rate, constellation, rotation, fecblocks, tiblocks, carriermode, fftsize, guardinterval, l1constellation, pilotpattern, t2frames, numdatasyms, paprmode, version, preamble, inputmode, reservedbiasbits, l1scrambled, inband)

class dvbt2_freqinterleaver_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_freqinterleaver_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble):
        """make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble) -> dvbt2_freqinterleaver_cc_sptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_freqinterleaver_cc
    __del__ = lambda self: None
dvbt2_freqinterleaver_cc_swigregister = _dtv_swig.dvbt2_freqinterleaver_cc_swigregister
dvbt2_freqinterleaver_cc_swigregister(dvbt2_freqinterleaver_cc)

def dvbt2_freqinterleaver_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble):
    """dvbt2_freqinterleaver_cc_make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble) -> dvbt2_freqinterleaver_cc_sptr"""
    return _dtv_swig.dvbt2_freqinterleaver_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble)

class dvbt2_pilotgenerator_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_pilotgenerator_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble, misogroup, equalization, bandwidth, vlength):
        """make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_misogroup_t misogroup, gr::dtv::dvbt2_equalization_t equalization, gr::dtv::dvbt2_bandwidth_t bandwidth, int vlength) -> dvbt2_pilotgenerator_cc_sptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble, misogroup, equalization, bandwidth, vlength)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_pilotgenerator_cc
    __del__ = lambda self: None
dvbt2_pilotgenerator_cc_swigregister = _dtv_swig.dvbt2_pilotgenerator_cc_swigregister
dvbt2_pilotgenerator_cc_swigregister(dvbt2_pilotgenerator_cc)

def dvbt2_pilotgenerator_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble, misogroup, equalization, bandwidth, vlength):
    """dvbt2_pilotgenerator_cc_make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_misogroup_t misogroup, gr::dtv::dvbt2_equalization_t equalization, gr::dtv::dvbt2_bandwidth_t bandwidth, int vlength) -> dvbt2_pilotgenerator_cc_sptr"""
    return _dtv_swig.dvbt2_pilotgenerator_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble, misogroup, equalization, bandwidth, vlength)

class dvbt2_paprtr_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_paprtr_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, vclip, iterations, vlength):
        """make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, float vclip, int iterations, int vlength) -> dvbt2_paprtr_cc_sptr"""
        return _dtv_swig.dvbt2_paprtr_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, vclip, iterations, vlength)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_paprtr_cc
    __del__ = lambda self: None
dvbt2_paprtr_cc_swigregister = _dtv_swig.dvbt2_paprtr_cc_swigregister
dvbt2_paprtr_cc_swigregister(dvbt2_paprtr_cc)

def dvbt2_paprtr_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, vclip, iterations, vlength):
    """dvbt2_paprtr_cc_make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, float vclip, int iterations, int vlength) -> dvbt2_paprtr_cc_sptr"""
    return _dtv_swig.dvbt2_paprtr_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, vclip, iterations, vlength)

class dvbt2_p1insertion_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_p1insertion_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(carriermode, fftsize, guardinterval, numdatasyms, preamble, showlevels, vclip):
        """make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_showlevels_t showlevels, float vclip) -> dvbt2_p1insertion_cc_sptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_make(carriermode, fftsize, guardinterval, numdatasyms, preamble, showlevels, vclip)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_p1insertion_cc
    __del__ = lambda self: None
dvbt2_p1insertion_cc_swigregister = _dtv_swig.dvbt2_p1insertion_cc_swigregister
dvbt2_p1insertion_cc_swigregister(dvbt2_p1insertion_cc)

def dvbt2_p1insertion_cc_make(carriermode, fftsize, guardinterval, numdatasyms, preamble, showlevels, vclip):
    """dvbt2_p1insertion_cc_make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_showlevels_t showlevels, float vclip) -> dvbt2_p1insertion_cc_sptr"""
    return _dtv_swig.dvbt2_p1insertion_cc_make(carriermode, fftsize, guardinterval, numdatasyms, preamble, showlevels, vclip)

class dvbt2_miso_cc(object):
    """Proxy of C++ gr::dtv::dvbt2_miso_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode):
        """make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode) -> dvbt2_miso_cc_sptr"""
        return _dtv_swig.dvbt2_miso_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt2_miso_cc
    __del__ = lambda self: None
dvbt2_miso_cc_swigregister = _dtv_swig.dvbt2_miso_cc_swigregister
dvbt2_miso_cc_swigregister(dvbt2_miso_cc)

def dvbt2_miso_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode):
    """dvbt2_miso_cc_make(gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode) -> dvbt2_miso_cc_sptr"""
    return _dtv_swig.dvbt2_miso_cc_make(carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode)

class dvbs2_interleaver_bb(object):
    """Proxy of C++ gr::dtv::dvbs2_interleaver_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, rate, constellation):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvbs2_interleaver_bb_sptr"""
        return _dtv_swig.dvbs2_interleaver_bb_make(framesize, rate, constellation)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbs2_interleaver_bb
    __del__ = lambda self: None
dvbs2_interleaver_bb_swigregister = _dtv_swig.dvbs2_interleaver_bb_swigregister
dvbs2_interleaver_bb_swigregister(dvbs2_interleaver_bb)

def dvbs2_interleaver_bb_make(framesize, rate, constellation):
    """dvbs2_interleaver_bb_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvbs2_interleaver_bb_sptr"""
    return _dtv_swig.dvbs2_interleaver_bb_make(framesize, rate, constellation)

class dvbs2_modulator_bc(object):
    """Proxy of C++ gr::dtv::dvbs2_modulator_bc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, rate, constellation, interpolation):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbs2_interpolation_t interpolation) -> dvbs2_modulator_bc_sptr"""
        return _dtv_swig.dvbs2_modulator_bc_make(framesize, rate, constellation, interpolation)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbs2_modulator_bc
    __del__ = lambda self: None
dvbs2_modulator_bc_swigregister = _dtv_swig.dvbs2_modulator_bc_swigregister
dvbs2_modulator_bc_swigregister(dvbs2_modulator_bc)

def dvbs2_modulator_bc_make(framesize, rate, constellation, interpolation):
    """dvbs2_modulator_bc_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbs2_interpolation_t interpolation) -> dvbs2_modulator_bc_sptr"""
    return _dtv_swig.dvbs2_modulator_bc_make(framesize, rate, constellation, interpolation)

class dvbs2_physical_cc(object):
    """Proxy of C++ gr::dtv::dvbs2_physical_cc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(framesize, rate, constellation, pilots, goldcode):
        """make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbs2_pilots_t pilots, int goldcode) -> dvbs2_physical_cc_sptr"""
        return _dtv_swig.dvbs2_physical_cc_make(framesize, rate, constellation, pilots, goldcode)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbs2_physical_cc
    __del__ = lambda self: None
dvbs2_physical_cc_swigregister = _dtv_swig.dvbs2_physical_cc_swigregister
dvbs2_physical_cc_swigregister(dvbs2_physical_cc)

def dvbs2_physical_cc_make(framesize, rate, constellation, pilots, goldcode):
    """dvbs2_physical_cc_make(gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbs2_pilots_t pilots, int goldcode) -> dvbs2_physical_cc_sptr"""
    return _dtv_swig.dvbs2_physical_cc_make(framesize, rate, constellation, pilots, goldcode)

class dvbt_energy_dispersal(object):
    """Proxy of C++ gr::dtv::dvbt_energy_dispersal class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize):
        """make(int nsize) -> dvbt_energy_dispersal_sptr"""
        return _dtv_swig.dvbt_energy_dispersal_make(nsize)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_energy_dispersal
    __del__ = lambda self: None
dvbt_energy_dispersal_swigregister = _dtv_swig.dvbt_energy_dispersal_swigregister
dvbt_energy_dispersal_swigregister(dvbt_energy_dispersal)

def dvbt_energy_dispersal_make(nsize):
    """dvbt_energy_dispersal_make(int nsize) -> dvbt_energy_dispersal_sptr"""
    return _dtv_swig.dvbt_energy_dispersal_make(nsize)

class dvbt_reed_solomon_enc(object):
    """Proxy of C++ gr::dtv::dvbt_reed_solomon_enc class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(p, m, gfpoly, n, k, t, s, blocks):
        """make(int p, int m, int gfpoly, int n, int k, int t, int s, int blocks) -> dvbt_reed_solomon_enc_sptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_make(p, m, gfpoly, n, k, t, s, blocks)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_reed_solomon_enc
    __del__ = lambda self: None
dvbt_reed_solomon_enc_swigregister = _dtv_swig.dvbt_reed_solomon_enc_swigregister
dvbt_reed_solomon_enc_swigregister(dvbt_reed_solomon_enc)

def dvbt_reed_solomon_enc_make(p, m, gfpoly, n, k, t, s, blocks):
    """dvbt_reed_solomon_enc_make(int p, int m, int gfpoly, int n, int k, int t, int s, int blocks) -> dvbt_reed_solomon_enc_sptr"""
    return _dtv_swig.dvbt_reed_solomon_enc_make(p, m, gfpoly, n, k, t, s, blocks)

class dvbt_convolutional_interleaver(object):
    """Proxy of C++ gr::dtv::dvbt_convolutional_interleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize, I, M):
        """make(int nsize, int I, int M) -> dvbt_convolutional_interleaver_sptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_make(nsize, I, M)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_convolutional_interleaver
    __del__ = lambda self: None
dvbt_convolutional_interleaver_swigregister = _dtv_swig.dvbt_convolutional_interleaver_swigregister
dvbt_convolutional_interleaver_swigregister(dvbt_convolutional_interleaver)

def dvbt_convolutional_interleaver_make(nsize, I, M):
    """dvbt_convolutional_interleaver_make(int nsize, int I, int M) -> dvbt_convolutional_interleaver_sptr"""
    return _dtv_swig.dvbt_convolutional_interleaver_make(nsize, I, M)

class dvbt_inner_coder(object):
    """Proxy of C++ gr::dtv::dvbt_inner_coder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(ninput, noutput, constellation, hierarchy, coderate):
        """make(int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t coderate) -> dvbt_inner_coder_sptr"""
        return _dtv_swig.dvbt_inner_coder_make(ninput, noutput, constellation, hierarchy, coderate)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_inner_coder
    __del__ = lambda self: None
dvbt_inner_coder_swigregister = _dtv_swig.dvbt_inner_coder_swigregister
dvbt_inner_coder_swigregister(dvbt_inner_coder)

def dvbt_inner_coder_make(ninput, noutput, constellation, hierarchy, coderate):
    """dvbt_inner_coder_make(int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t coderate) -> dvbt_inner_coder_sptr"""
    return _dtv_swig.dvbt_inner_coder_make(ninput, noutput, constellation, hierarchy, coderate)

class dvbt_bit_inner_interleaver(object):
    """Proxy of C++ gr::dtv::dvbt_bit_inner_interleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize, constellation, hierarchy, transmission):
        """make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission) -> dvbt_bit_inner_interleaver_sptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_make(nsize, constellation, hierarchy, transmission)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_bit_inner_interleaver
    __del__ = lambda self: None
dvbt_bit_inner_interleaver_swigregister = _dtv_swig.dvbt_bit_inner_interleaver_swigregister
dvbt_bit_inner_interleaver_swigregister(dvbt_bit_inner_interleaver)

def dvbt_bit_inner_interleaver_make(nsize, constellation, hierarchy, transmission):
    """dvbt_bit_inner_interleaver_make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission) -> dvbt_bit_inner_interleaver_sptr"""
    return _dtv_swig.dvbt_bit_inner_interleaver_make(nsize, constellation, hierarchy, transmission)

class dvbt_symbol_inner_interleaver(object):
    """Proxy of C++ gr::dtv::dvbt_symbol_inner_interleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(ninput, transmission, direction):
        """make(int ninput, gr::dtv::dvbt_transmission_mode_t transmission, int direction) -> dvbt_symbol_inner_interleaver_sptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_make(ninput, transmission, direction)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_symbol_inner_interleaver
    __del__ = lambda self: None
dvbt_symbol_inner_interleaver_swigregister = _dtv_swig.dvbt_symbol_inner_interleaver_swigregister
dvbt_symbol_inner_interleaver_swigregister(dvbt_symbol_inner_interleaver)

def dvbt_symbol_inner_interleaver_make(ninput, transmission, direction):
    """dvbt_symbol_inner_interleaver_make(int ninput, gr::dtv::dvbt_transmission_mode_t transmission, int direction) -> dvbt_symbol_inner_interleaver_sptr"""
    return _dtv_swig.dvbt_symbol_inner_interleaver_make(ninput, transmission, direction)

class dvbt_map(object):
    """Proxy of C++ gr::dtv::dvbt_map class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize, constellation, hierarchy, transmission, gain):
        """make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission, float gain) -> dvbt_map_sptr"""
        return _dtv_swig.dvbt_map_make(nsize, constellation, hierarchy, transmission, gain)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_map
    __del__ = lambda self: None
dvbt_map_swigregister = _dtv_swig.dvbt_map_swigregister
dvbt_map_swigregister(dvbt_map)

def dvbt_map_make(nsize, constellation, hierarchy, transmission, gain):
    """dvbt_map_make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission, float gain) -> dvbt_map_sptr"""
    return _dtv_swig.dvbt_map_make(nsize, constellation, hierarchy, transmission, gain)

class dvbt_reference_signals(object):
    """Proxy of C++ gr::dtv::dvbt_reference_signals class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id):
        """make(int itemsize, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t code_rate_HP, gr::dtv::dvb_code_rate_t code_rate_LP, gr::dtv::dvb_guardinterval_t guard_interval, gr::dtv::dvbt_transmission_mode_t transmission_mode, int include_cell_id, int cell_id) -> dvbt_reference_signals_sptr"""
        return _dtv_swig.dvbt_reference_signals_make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_reference_signals
    __del__ = lambda self: None
dvbt_reference_signals_swigregister = _dtv_swig.dvbt_reference_signals_swigregister
dvbt_reference_signals_swigregister(dvbt_reference_signals)

def dvbt_reference_signals_make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id):
    """dvbt_reference_signals_make(int itemsize, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t code_rate_HP, gr::dtv::dvb_code_rate_t code_rate_LP, gr::dtv::dvb_guardinterval_t guard_interval, gr::dtv::dvbt_transmission_mode_t transmission_mode, int include_cell_id, int cell_id) -> dvbt_reference_signals_sptr"""
    return _dtv_swig.dvbt_reference_signals_make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id)

class dvbt_ofdm_sym_acquisition(object):
    """Proxy of C++ gr::dtv::dvbt_ofdm_sym_acquisition class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(blocks, fft_length, occupied_tones, cp_length, snr):
        """make(int blocks, int fft_length, int occupied_tones, int cp_length, float snr) -> dvbt_ofdm_sym_acquisition_sptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_make(blocks, fft_length, occupied_tones, cp_length, snr)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_ofdm_sym_acquisition
    __del__ = lambda self: None
dvbt_ofdm_sym_acquisition_swigregister = _dtv_swig.dvbt_ofdm_sym_acquisition_swigregister
dvbt_ofdm_sym_acquisition_swigregister(dvbt_ofdm_sym_acquisition)

def dvbt_ofdm_sym_acquisition_make(blocks, fft_length, occupied_tones, cp_length, snr):
    """dvbt_ofdm_sym_acquisition_make(int blocks, int fft_length, int occupied_tones, int cp_length, float snr) -> dvbt_ofdm_sym_acquisition_sptr"""
    return _dtv_swig.dvbt_ofdm_sym_acquisition_make(blocks, fft_length, occupied_tones, cp_length, snr)

class dvbt_demod_reference_signals(object):
    """Proxy of C++ gr::dtv::dvbt_demod_reference_signals class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id):
        """make(int itemsize, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t code_rate_HP, gr::dtv::dvb_code_rate_t code_rate_LP, gr::dtv::dvb_guardinterval_t guard_interval, gr::dtv::dvbt_transmission_mode_t transmission_mode, int include_cell_id, int cell_id) -> dvbt_demod_reference_signals_sptr"""
        return _dtv_swig.dvbt_demod_reference_signals_make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_demod_reference_signals
    __del__ = lambda self: None
dvbt_demod_reference_signals_swigregister = _dtv_swig.dvbt_demod_reference_signals_swigregister
dvbt_demod_reference_signals_swigregister(dvbt_demod_reference_signals)

def dvbt_demod_reference_signals_make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id):
    """dvbt_demod_reference_signals_make(int itemsize, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t code_rate_HP, gr::dtv::dvb_code_rate_t code_rate_LP, gr::dtv::dvb_guardinterval_t guard_interval, gr::dtv::dvbt_transmission_mode_t transmission_mode, int include_cell_id, int cell_id) -> dvbt_demod_reference_signals_sptr"""
    return _dtv_swig.dvbt_demod_reference_signals_make(itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id)

class dvbt_demap(object):
    """Proxy of C++ gr::dtv::dvbt_demap class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize, constellation, hierarchy, transmission, gain):
        """make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission, float gain) -> dvbt_demap_sptr"""
        return _dtv_swig.dvbt_demap_make(nsize, constellation, hierarchy, transmission, gain)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_demap
    __del__ = lambda self: None
dvbt_demap_swigregister = _dtv_swig.dvbt_demap_swigregister
dvbt_demap_swigregister(dvbt_demap)

def dvbt_demap_make(nsize, constellation, hierarchy, transmission, gain):
    """dvbt_demap_make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission, float gain) -> dvbt_demap_sptr"""
    return _dtv_swig.dvbt_demap_make(nsize, constellation, hierarchy, transmission, gain)

class dvbt_bit_inner_deinterleaver(object):
    """Proxy of C++ gr::dtv::dvbt_bit_inner_deinterleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize, constellation, hierarchy, transmission):
        """make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission) -> dvbt_bit_inner_deinterleaver_sptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_make(nsize, constellation, hierarchy, transmission)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_bit_inner_deinterleaver
    __del__ = lambda self: None
dvbt_bit_inner_deinterleaver_swigregister = _dtv_swig.dvbt_bit_inner_deinterleaver_swigregister
dvbt_bit_inner_deinterleaver_swigregister(dvbt_bit_inner_deinterleaver)

def dvbt_bit_inner_deinterleaver_make(nsize, constellation, hierarchy, transmission):
    """dvbt_bit_inner_deinterleaver_make(int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission) -> dvbt_bit_inner_deinterleaver_sptr"""
    return _dtv_swig.dvbt_bit_inner_deinterleaver_make(nsize, constellation, hierarchy, transmission)

class dvbt_viterbi_decoder(object):
    """Proxy of C++ gr::dtv::dvbt_viterbi_decoder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(constellation, hierarchy, coderate, bsize):
        """make(gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t coderate, int bsize) -> dvbt_viterbi_decoder_sptr"""
        return _dtv_swig.dvbt_viterbi_decoder_make(constellation, hierarchy, coderate, bsize)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_viterbi_decoder
    __del__ = lambda self: None
dvbt_viterbi_decoder_swigregister = _dtv_swig.dvbt_viterbi_decoder_swigregister
dvbt_viterbi_decoder_swigregister(dvbt_viterbi_decoder)

def dvbt_viterbi_decoder_make(constellation, hierarchy, coderate, bsize):
    """dvbt_viterbi_decoder_make(gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t coderate, int bsize) -> dvbt_viterbi_decoder_sptr"""
    return _dtv_swig.dvbt_viterbi_decoder_make(constellation, hierarchy, coderate, bsize)

class dvbt_convolutional_deinterleaver(object):
    """Proxy of C++ gr::dtv::dvbt_convolutional_deinterleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nsize, I, M):
        """make(int nsize, int I, int M) -> dvbt_convolutional_deinterleaver_sptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_make(nsize, I, M)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_convolutional_deinterleaver
    __del__ = lambda self: None
dvbt_convolutional_deinterleaver_swigregister = _dtv_swig.dvbt_convolutional_deinterleaver_swigregister
dvbt_convolutional_deinterleaver_swigregister(dvbt_convolutional_deinterleaver)

def dvbt_convolutional_deinterleaver_make(nsize, I, M):
    """dvbt_convolutional_deinterleaver_make(int nsize, int I, int M) -> dvbt_convolutional_deinterleaver_sptr"""
    return _dtv_swig.dvbt_convolutional_deinterleaver_make(nsize, I, M)

class dvbt_reed_solomon_dec(object):
    """Proxy of C++ gr::dtv::dvbt_reed_solomon_dec class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(p, m, gfpoly, n, k, t, s, blocks):
        """make(int p, int m, int gfpoly, int n, int k, int t, int s, int blocks) -> dvbt_reed_solomon_dec_sptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_make(p, m, gfpoly, n, k, t, s, blocks)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_reed_solomon_dec
    __del__ = lambda self: None
dvbt_reed_solomon_dec_swigregister = _dtv_swig.dvbt_reed_solomon_dec_swigregister
dvbt_reed_solomon_dec_swigregister(dvbt_reed_solomon_dec)

def dvbt_reed_solomon_dec_make(p, m, gfpoly, n, k, t, s, blocks):
    """dvbt_reed_solomon_dec_make(int p, int m, int gfpoly, int n, int k, int t, int s, int blocks) -> dvbt_reed_solomon_dec_sptr"""
    return _dtv_swig.dvbt_reed_solomon_dec_make(p, m, gfpoly, n, k, t, s, blocks)

class dvbt_energy_descramble(object):
    """Proxy of C++ gr::dtv::dvbt_energy_descramble class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(nblocks):
        """make(int nblocks) -> dvbt_energy_descramble_sptr"""
        return _dtv_swig.dvbt_energy_descramble_make(nblocks)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_dvbt_energy_descramble
    __del__ = lambda self: None
dvbt_energy_descramble_swigregister = _dtv_swig.dvbt_energy_descramble_swigregister
dvbt_energy_descramble_swigregister(dvbt_energy_descramble)

def dvbt_energy_descramble_make(nblocks):
    """dvbt_energy_descramble_make(int nblocks) -> dvbt_energy_descramble_sptr"""
    return _dtv_swig.dvbt_energy_descramble_make(nblocks)

class catv_transport_framing_enc_bb(object):
    """Proxy of C++ gr::dtv::catv_transport_framing_enc_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> catv_transport_framing_enc_bb_sptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_catv_transport_framing_enc_bb
    __del__ = lambda self: None
catv_transport_framing_enc_bb_swigregister = _dtv_swig.catv_transport_framing_enc_bb_swigregister
catv_transport_framing_enc_bb_swigregister(catv_transport_framing_enc_bb)

def catv_transport_framing_enc_bb_make():
    """catv_transport_framing_enc_bb_make() -> catv_transport_framing_enc_bb_sptr"""
    return _dtv_swig.catv_transport_framing_enc_bb_make()

class catv_reed_solomon_enc_bb(object):
    """Proxy of C++ gr::dtv::catv_reed_solomon_enc_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> catv_reed_solomon_enc_bb_sptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_catv_reed_solomon_enc_bb
    __del__ = lambda self: None
catv_reed_solomon_enc_bb_swigregister = _dtv_swig.catv_reed_solomon_enc_bb_swigregister
catv_reed_solomon_enc_bb_swigregister(catv_reed_solomon_enc_bb)

def catv_reed_solomon_enc_bb_make():
    """catv_reed_solomon_enc_bb_make() -> catv_reed_solomon_enc_bb_sptr"""
    return _dtv_swig.catv_reed_solomon_enc_bb_make()

class catv_randomizer_bb(object):
    """Proxy of C++ gr::dtv::catv_randomizer_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> catv_randomizer_bb_sptr"""
        return _dtv_swig.catv_randomizer_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_catv_randomizer_bb
    __del__ = lambda self: None
catv_randomizer_bb_swigregister = _dtv_swig.catv_randomizer_bb_swigregister
catv_randomizer_bb_swigregister(catv_randomizer_bb)

def catv_randomizer_bb_make():
    """catv_randomizer_bb_make() -> catv_randomizer_bb_sptr"""
    return _dtv_swig.catv_randomizer_bb_make()

class catv_frame_sync_enc_bb(object):
    """Proxy of C++ gr::dtv::catv_frame_sync_enc_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(ctrlword):
        """make(int ctrlword) -> catv_frame_sync_enc_bb_sptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_make(ctrlword)

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_catv_frame_sync_enc_bb
    __del__ = lambda self: None
catv_frame_sync_enc_bb_swigregister = _dtv_swig.catv_frame_sync_enc_bb_swigregister
catv_frame_sync_enc_bb_swigregister(catv_frame_sync_enc_bb)

def catv_frame_sync_enc_bb_make(ctrlword):
    """catv_frame_sync_enc_bb_make(int ctrlword) -> catv_frame_sync_enc_bb_sptr"""
    return _dtv_swig.catv_frame_sync_enc_bb_make(ctrlword)

class catv_trellis_enc_bb(object):
    """Proxy of C++ gr::dtv::catv_trellis_enc_bb class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> catv_trellis_enc_bb_sptr"""
        return _dtv_swig.catv_trellis_enc_bb_make()

    make = staticmethod(make)
    __swig_destroy__ = _dtv_swig.delete_catv_trellis_enc_bb
    __del__ = lambda self: None
catv_trellis_enc_bb_swigregister = _dtv_swig.catv_trellis_enc_bb_swigregister
catv_trellis_enc_bb_swigregister(catv_trellis_enc_bb)

def catv_trellis_enc_bb_make():
    """catv_trellis_enc_bb_make() -> catv_trellis_enc_bb_sptr"""
    return _dtv_swig.catv_trellis_enc_bb_make()

class atsc_deinterleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_deinterleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_deinterleaver)> self) -> atsc_deinterleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_deinterleaver)> self, atsc_deinterleaver p) -> atsc_deinterleaver_sptr
        """
        this = _dtv_swig.new_atsc_deinterleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_deinterleaver_sptr self) -> atsc_deinterleaver"""
        return _dtv_swig.atsc_deinterleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_deinterleaver_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_deinterleaver_sptr self) -> atsc_deinterleaver_sptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_make(self)


    def history(self):
        """history(atsc_deinterleaver_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_deinterleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_deinterleaver_sptr self, int which, int delay)
        declare_sample_delay(atsc_deinterleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_deinterleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_deinterleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_deinterleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_deinterleaver_sptr self) -> int"""
        return _dtv_swig.atsc_deinterleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_deinterleaver_sptr self) -> double"""
        return _dtv_swig.atsc_deinterleaver_sptr_relative_rate(self)


    def start(self):
        """start(atsc_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.atsc_deinterleaver_sptr_start(self)


    def stop(self):
        """stop(atsc_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.atsc_deinterleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_deinterleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_deinterleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_deinterleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_deinterleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_deinterleaver_sptr self) -> int"""
        return _dtv_swig.atsc_deinterleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_deinterleaver_sptr self, int m)"""
        return _dtv_swig.atsc_deinterleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_deinterleaver_sptr self)"""
        return _dtv_swig.atsc_deinterleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.atsc_deinterleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_deinterleaver_sptr self, int m)"""
        return _dtv_swig.atsc_deinterleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_deinterleaver_sptr self) -> int"""
        return _dtv_swig.atsc_deinterleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_deinterleaver_sptr self, int i) -> long"""
        return _dtv_swig.atsc_deinterleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_deinterleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_deinterleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_deinterleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_deinterleaver_sptr self, int i) -> long"""
        return _dtv_swig.atsc_deinterleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_deinterleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_deinterleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_deinterleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full(atsc_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_deinterleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_deinterleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_deinterleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full(atsc_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_deinterleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_deinterleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_deinterleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_deinterleaver_sptr self) -> float"""
        return _dtv_swig.atsc_deinterleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_deinterleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_deinterleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_deinterleaver_sptr self)"""
        return _dtv_swig.atsc_deinterleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_deinterleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_deinterleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_deinterleaver_sptr self) -> int"""
        return _dtv_swig.atsc_deinterleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_deinterleaver_sptr self) -> int"""
        return _dtv_swig.atsc_deinterleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_deinterleaver_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_deinterleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.atsc_deinterleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.atsc_deinterleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_deinterleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_deinterleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_deinterleaver_sptr self) -> long"""
        return _dtv_swig.atsc_deinterleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_deinterleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_deinterleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_deinterleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.atsc_deinterleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_deinterleaver_sptr self, std::string name)"""
        return _dtv_swig.atsc_deinterleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_deinterleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_deinterleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_deinterleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_deinterleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_deinterleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_deinterleaver_sptr_message_subscribers(self, which_port)

atsc_deinterleaver_sptr_swigregister = _dtv_swig.atsc_deinterleaver_sptr_swigregister
atsc_deinterleaver_sptr_swigregister(atsc_deinterleaver_sptr)


atsc_deinterleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_deinterleaver = atsc_deinterleaver.make;

class atsc_depad_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_depad)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_depad)> self) -> atsc_depad_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_depad)> self, atsc_depad p) -> atsc_depad_sptr
        """
        this = _dtv_swig.new_atsc_depad_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_depad_sptr self) -> atsc_depad"""
        return _dtv_swig.atsc_depad_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_depad_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_depad_sptr self) -> atsc_depad_sptr"""
        return _dtv_swig.atsc_depad_sptr_make(self)


    def history(self):
        """history(atsc_depad_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_depad_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_depad_sptr self, int which, int delay)
        declare_sample_delay(atsc_depad_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_depad_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_depad_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_depad_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_depad_sptr self) -> int"""
        return _dtv_swig.atsc_depad_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_depad_sptr self) -> double"""
        return _dtv_swig.atsc_depad_sptr_relative_rate(self)


    def start(self):
        """start(atsc_depad_sptr self) -> bool"""
        return _dtv_swig.atsc_depad_sptr_start(self)


    def stop(self):
        """stop(atsc_depad_sptr self) -> bool"""
        return _dtv_swig.atsc_depad_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_depad_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_depad_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_depad_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_depad_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_depad_sptr self) -> int"""
        return _dtv_swig.atsc_depad_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_depad_sptr self, int m)"""
        return _dtv_swig.atsc_depad_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_depad_sptr self)"""
        return _dtv_swig.atsc_depad_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_depad_sptr self) -> bool"""
        return _dtv_swig.atsc_depad_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_depad_sptr self, int m)"""
        return _dtv_swig.atsc_depad_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_depad_sptr self) -> int"""
        return _dtv_swig.atsc_depad_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_depad_sptr self, int i) -> long"""
        return _dtv_swig.atsc_depad_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_depad_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_depad_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_depad_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_depad_sptr self, int i) -> long"""
        return _dtv_swig.atsc_depad_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_depad_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_depad_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_depad_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_depad_sptr self, int which) -> float
        pc_input_buffers_full(atsc_depad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_depad_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_depad_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_depad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_depad_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_depad_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_depad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_depad_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_depad_sptr self, int which) -> float
        pc_output_buffers_full(atsc_depad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_depad_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_depad_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_depad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_depad_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_depad_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_depad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_depad_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_depad_sptr self) -> float"""
        return _dtv_swig.atsc_depad_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_depad_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_depad_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_depad_sptr self)"""
        return _dtv_swig.atsc_depad_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_depad_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_depad_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_depad_sptr self) -> int"""
        return _dtv_swig.atsc_depad_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_depad_sptr self) -> int"""
        return _dtv_swig.atsc_depad_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_depad_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_depad_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_depad_sptr self) -> std::string"""
        return _dtv_swig.atsc_depad_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_depad_sptr self) -> std::string"""
        return _dtv_swig.atsc_depad_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_depad_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_depad_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_depad_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_depad_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_depad_sptr self) -> long"""
        return _dtv_swig.atsc_depad_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_depad_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_depad_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_depad_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_depad_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_depad_sptr self) -> std::string"""
        return _dtv_swig.atsc_depad_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_depad_sptr self, std::string name)"""
        return _dtv_swig.atsc_depad_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_depad_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_depad_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_depad_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_depad_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_depad_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_depad_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_depad_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_depad_sptr_message_subscribers(self, which_port)

atsc_depad_sptr_swigregister = _dtv_swig.atsc_depad_sptr_swigregister
atsc_depad_sptr_swigregister(atsc_depad_sptr)


atsc_depad_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_depad = atsc_depad.make;

class atsc_derandomizer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_derandomizer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_derandomizer)> self) -> atsc_derandomizer_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_derandomizer)> self, atsc_derandomizer p) -> atsc_derandomizer_sptr
        """
        this = _dtv_swig.new_atsc_derandomizer_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_derandomizer_sptr self) -> atsc_derandomizer"""
        return _dtv_swig.atsc_derandomizer_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_derandomizer_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_derandomizer_sptr self) -> atsc_derandomizer_sptr"""
        return _dtv_swig.atsc_derandomizer_sptr_make(self)


    def history(self):
        """history(atsc_derandomizer_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_derandomizer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_derandomizer_sptr self, int which, int delay)
        declare_sample_delay(atsc_derandomizer_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_derandomizer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_derandomizer_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_derandomizer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_derandomizer_sptr self) -> int"""
        return _dtv_swig.atsc_derandomizer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_derandomizer_sptr self) -> double"""
        return _dtv_swig.atsc_derandomizer_sptr_relative_rate(self)


    def start(self):
        """start(atsc_derandomizer_sptr self) -> bool"""
        return _dtv_swig.atsc_derandomizer_sptr_start(self)


    def stop(self):
        """stop(atsc_derandomizer_sptr self) -> bool"""
        return _dtv_swig.atsc_derandomizer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_derandomizer_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_derandomizer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_derandomizer_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_derandomizer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_derandomizer_sptr self) -> int"""
        return _dtv_swig.atsc_derandomizer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_derandomizer_sptr self, int m)"""
        return _dtv_swig.atsc_derandomizer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_derandomizer_sptr self)"""
        return _dtv_swig.atsc_derandomizer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_derandomizer_sptr self) -> bool"""
        return _dtv_swig.atsc_derandomizer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_derandomizer_sptr self, int m)"""
        return _dtv_swig.atsc_derandomizer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_derandomizer_sptr self) -> int"""
        return _dtv_swig.atsc_derandomizer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_derandomizer_sptr self, int i) -> long"""
        return _dtv_swig.atsc_derandomizer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_derandomizer_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_derandomizer_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_derandomizer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_derandomizer_sptr self, int i) -> long"""
        return _dtv_swig.atsc_derandomizer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_derandomizer_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_derandomizer_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_derandomizer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_derandomizer_sptr self, int which) -> float
        pc_input_buffers_full(atsc_derandomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_derandomizer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_derandomizer_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_derandomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_derandomizer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_derandomizer_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_derandomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_derandomizer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_derandomizer_sptr self, int which) -> float
        pc_output_buffers_full(atsc_derandomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_derandomizer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_derandomizer_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_derandomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_derandomizer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_derandomizer_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_derandomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_derandomizer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_derandomizer_sptr self) -> float"""
        return _dtv_swig.atsc_derandomizer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_derandomizer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_derandomizer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_derandomizer_sptr self)"""
        return _dtv_swig.atsc_derandomizer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_derandomizer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_derandomizer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_derandomizer_sptr self) -> int"""
        return _dtv_swig.atsc_derandomizer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_derandomizer_sptr self) -> int"""
        return _dtv_swig.atsc_derandomizer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_derandomizer_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_derandomizer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_derandomizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_derandomizer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_derandomizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_derandomizer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_derandomizer_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_derandomizer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_derandomizer_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_derandomizer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_derandomizer_sptr self) -> long"""
        return _dtv_swig.atsc_derandomizer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_derandomizer_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_derandomizer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_derandomizer_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_derandomizer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_derandomizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_derandomizer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_derandomizer_sptr self, std::string name)"""
        return _dtv_swig.atsc_derandomizer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_derandomizer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_derandomizer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_derandomizer_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_derandomizer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_derandomizer_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_derandomizer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_derandomizer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_derandomizer_sptr_message_subscribers(self, which_port)

atsc_derandomizer_sptr_swigregister = _dtv_swig.atsc_derandomizer_sptr_swigregister
atsc_derandomizer_sptr_swigregister(atsc_derandomizer_sptr)


atsc_derandomizer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_derandomizer = atsc_derandomizer.make;

class atsc_equalizer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_equalizer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_equalizer)> self) -> atsc_equalizer_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_equalizer)> self, atsc_equalizer p) -> atsc_equalizer_sptr
        """
        this = _dtv_swig.new_atsc_equalizer_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_equalizer_sptr self) -> atsc_equalizer"""
        return _dtv_swig.atsc_equalizer_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_equalizer_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_equalizer_sptr self) -> atsc_equalizer_sptr"""
        return _dtv_swig.atsc_equalizer_sptr_make(self)


    def taps(self):
        """taps(atsc_equalizer_sptr self) -> pmt_vector_float"""
        return _dtv_swig.atsc_equalizer_sptr_taps(self)


    def data(self):
        """data(atsc_equalizer_sptr self) -> pmt_vector_float"""
        return _dtv_swig.atsc_equalizer_sptr_data(self)


    def history(self):
        """history(atsc_equalizer_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_equalizer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_equalizer_sptr self, int which, int delay)
        declare_sample_delay(atsc_equalizer_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_equalizer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_equalizer_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_equalizer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_equalizer_sptr self) -> int"""
        return _dtv_swig.atsc_equalizer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_equalizer_sptr self) -> double"""
        return _dtv_swig.atsc_equalizer_sptr_relative_rate(self)


    def start(self):
        """start(atsc_equalizer_sptr self) -> bool"""
        return _dtv_swig.atsc_equalizer_sptr_start(self)


    def stop(self):
        """stop(atsc_equalizer_sptr self) -> bool"""
        return _dtv_swig.atsc_equalizer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_equalizer_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_equalizer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_equalizer_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_equalizer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_equalizer_sptr self) -> int"""
        return _dtv_swig.atsc_equalizer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_equalizer_sptr self, int m)"""
        return _dtv_swig.atsc_equalizer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_equalizer_sptr self)"""
        return _dtv_swig.atsc_equalizer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_equalizer_sptr self) -> bool"""
        return _dtv_swig.atsc_equalizer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_equalizer_sptr self, int m)"""
        return _dtv_swig.atsc_equalizer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_equalizer_sptr self) -> int"""
        return _dtv_swig.atsc_equalizer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_equalizer_sptr self, int i) -> long"""
        return _dtv_swig.atsc_equalizer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_equalizer_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_equalizer_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_equalizer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_equalizer_sptr self, int i) -> long"""
        return _dtv_swig.atsc_equalizer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_equalizer_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_equalizer_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_equalizer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_equalizer_sptr self, int which) -> float
        pc_input_buffers_full(atsc_equalizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_equalizer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_equalizer_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_equalizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_equalizer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_equalizer_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_equalizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_equalizer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_equalizer_sptr self, int which) -> float
        pc_output_buffers_full(atsc_equalizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_equalizer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_equalizer_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_equalizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_equalizer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_equalizer_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_equalizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_equalizer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_equalizer_sptr self) -> float"""
        return _dtv_swig.atsc_equalizer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_equalizer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_equalizer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_equalizer_sptr self)"""
        return _dtv_swig.atsc_equalizer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_equalizer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_equalizer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_equalizer_sptr self) -> int"""
        return _dtv_swig.atsc_equalizer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_equalizer_sptr self) -> int"""
        return _dtv_swig.atsc_equalizer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_equalizer_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_equalizer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_equalizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_equalizer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_equalizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_equalizer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_equalizer_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_equalizer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_equalizer_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_equalizer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_equalizer_sptr self) -> long"""
        return _dtv_swig.atsc_equalizer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_equalizer_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_equalizer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_equalizer_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_equalizer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_equalizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_equalizer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_equalizer_sptr self, std::string name)"""
        return _dtv_swig.atsc_equalizer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_equalizer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_equalizer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_equalizer_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_equalizer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_equalizer_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_equalizer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_equalizer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_equalizer_sptr_message_subscribers(self, which_port)

atsc_equalizer_sptr_swigregister = _dtv_swig.atsc_equalizer_sptr_swigregister
atsc_equalizer_sptr_swigregister(atsc_equalizer_sptr)


atsc_equalizer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_equalizer = atsc_equalizer.make;

class atsc_field_sync_mux_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_field_sync_mux)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_field_sync_mux)> self) -> atsc_field_sync_mux_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_field_sync_mux)> self, atsc_field_sync_mux p) -> atsc_field_sync_mux_sptr
        """
        this = _dtv_swig.new_atsc_field_sync_mux_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_field_sync_mux_sptr self) -> atsc_field_sync_mux"""
        return _dtv_swig.atsc_field_sync_mux_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_field_sync_mux_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_field_sync_mux_sptr self) -> atsc_field_sync_mux_sptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_make(self)


    def history(self):
        """history(atsc_field_sync_mux_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_field_sync_mux_sptr self, int which, int delay)
        declare_sample_delay(atsc_field_sync_mux_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_field_sync_mux_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_field_sync_mux_sptr self) -> int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_field_sync_mux_sptr self) -> double"""
        return _dtv_swig.atsc_field_sync_mux_sptr_relative_rate(self)


    def start(self):
        """start(atsc_field_sync_mux_sptr self) -> bool"""
        return _dtv_swig.atsc_field_sync_mux_sptr_start(self)


    def stop(self):
        """stop(atsc_field_sync_mux_sptr self) -> bool"""
        return _dtv_swig.atsc_field_sync_mux_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_field_sync_mux_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_field_sync_mux_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_field_sync_mux_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_field_sync_mux_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_field_sync_mux_sptr self) -> int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_field_sync_mux_sptr self, int m)"""
        return _dtv_swig.atsc_field_sync_mux_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_field_sync_mux_sptr self)"""
        return _dtv_swig.atsc_field_sync_mux_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_field_sync_mux_sptr self) -> bool"""
        return _dtv_swig.atsc_field_sync_mux_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_field_sync_mux_sptr self, int m)"""
        return _dtv_swig.atsc_field_sync_mux_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_field_sync_mux_sptr self) -> int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_field_sync_mux_sptr self, int i) -> long"""
        return _dtv_swig.atsc_field_sync_mux_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_field_sync_mux_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_field_sync_mux_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_field_sync_mux_sptr self, int i) -> long"""
        return _dtv_swig.atsc_field_sync_mux_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_field_sync_mux_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_field_sync_mux_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_field_sync_mux_sptr self, int which) -> float
        pc_input_buffers_full(atsc_field_sync_mux_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_field_sync_mux_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_field_sync_mux_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_field_sync_mux_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_field_sync_mux_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_field_sync_mux_sptr self, int which) -> float
        pc_output_buffers_full(atsc_field_sync_mux_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_field_sync_mux_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_field_sync_mux_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_field_sync_mux_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_field_sync_mux_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_field_sync_mux_sptr self) -> float"""
        return _dtv_swig.atsc_field_sync_mux_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_field_sync_mux_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_field_sync_mux_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_field_sync_mux_sptr self)"""
        return _dtv_swig.atsc_field_sync_mux_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_field_sync_mux_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_field_sync_mux_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_field_sync_mux_sptr self) -> int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_field_sync_mux_sptr self) -> int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_field_sync_mux_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_field_sync_mux_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_field_sync_mux_sptr self) -> std::string"""
        return _dtv_swig.atsc_field_sync_mux_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_field_sync_mux_sptr self) -> std::string"""
        return _dtv_swig.atsc_field_sync_mux_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_field_sync_mux_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_field_sync_mux_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_field_sync_mux_sptr self) -> long"""
        return _dtv_swig.atsc_field_sync_mux_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_field_sync_mux_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_field_sync_mux_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_field_sync_mux_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_field_sync_mux_sptr self) -> std::string"""
        return _dtv_swig.atsc_field_sync_mux_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_field_sync_mux_sptr self, std::string name)"""
        return _dtv_swig.atsc_field_sync_mux_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_field_sync_mux_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_field_sync_mux_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_field_sync_mux_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_field_sync_mux_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_field_sync_mux_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_field_sync_mux_sptr_message_subscribers(self, which_port)

atsc_field_sync_mux_sptr_swigregister = _dtv_swig.atsc_field_sync_mux_sptr_swigregister
atsc_field_sync_mux_sptr_swigregister(atsc_field_sync_mux_sptr)


atsc_field_sync_mux_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_field_sync_mux = atsc_field_sync_mux.make;

class atsc_fpll_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_fpll)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_fpll)> self) -> atsc_fpll_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_fpll)> self, atsc_fpll p) -> atsc_fpll_sptr
        """
        this = _dtv_swig.new_atsc_fpll_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_fpll_sptr self) -> atsc_fpll"""
        return _dtv_swig.atsc_fpll_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_fpll_sptr
    __del__ = lambda self: None

    def make(self, rate):
        """make(atsc_fpll_sptr self, float rate) -> atsc_fpll_sptr"""
        return _dtv_swig.atsc_fpll_sptr_make(self, rate)


    def history(self):
        """history(atsc_fpll_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_fpll_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_fpll_sptr self, int which, int delay)
        declare_sample_delay(atsc_fpll_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_fpll_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_fpll_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_fpll_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_fpll_sptr self) -> int"""
        return _dtv_swig.atsc_fpll_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_fpll_sptr self) -> double"""
        return _dtv_swig.atsc_fpll_sptr_relative_rate(self)


    def start(self):
        """start(atsc_fpll_sptr self) -> bool"""
        return _dtv_swig.atsc_fpll_sptr_start(self)


    def stop(self):
        """stop(atsc_fpll_sptr self) -> bool"""
        return _dtv_swig.atsc_fpll_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_fpll_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_fpll_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_fpll_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_fpll_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_fpll_sptr self) -> int"""
        return _dtv_swig.atsc_fpll_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_fpll_sptr self, int m)"""
        return _dtv_swig.atsc_fpll_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_fpll_sptr self)"""
        return _dtv_swig.atsc_fpll_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_fpll_sptr self) -> bool"""
        return _dtv_swig.atsc_fpll_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_fpll_sptr self, int m)"""
        return _dtv_swig.atsc_fpll_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_fpll_sptr self) -> int"""
        return _dtv_swig.atsc_fpll_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_fpll_sptr self, int i) -> long"""
        return _dtv_swig.atsc_fpll_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_fpll_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_fpll_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_fpll_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_fpll_sptr self, int i) -> long"""
        return _dtv_swig.atsc_fpll_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_fpll_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_fpll_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_fpll_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_fpll_sptr self, int which) -> float
        pc_input_buffers_full(atsc_fpll_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fpll_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_fpll_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_fpll_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fpll_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_fpll_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_fpll_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fpll_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_fpll_sptr self, int which) -> float
        pc_output_buffers_full(atsc_fpll_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fpll_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_fpll_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_fpll_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fpll_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_fpll_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_fpll_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fpll_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_fpll_sptr self) -> float"""
        return _dtv_swig.atsc_fpll_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_fpll_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_fpll_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_fpll_sptr self)"""
        return _dtv_swig.atsc_fpll_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_fpll_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_fpll_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_fpll_sptr self) -> int"""
        return _dtv_swig.atsc_fpll_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_fpll_sptr self) -> int"""
        return _dtv_swig.atsc_fpll_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_fpll_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_fpll_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_fpll_sptr self) -> std::string"""
        return _dtv_swig.atsc_fpll_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_fpll_sptr self) -> std::string"""
        return _dtv_swig.atsc_fpll_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_fpll_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_fpll_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_fpll_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_fpll_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_fpll_sptr self) -> long"""
        return _dtv_swig.atsc_fpll_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_fpll_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_fpll_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_fpll_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_fpll_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_fpll_sptr self) -> std::string"""
        return _dtv_swig.atsc_fpll_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_fpll_sptr self, std::string name)"""
        return _dtv_swig.atsc_fpll_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_fpll_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_fpll_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_fpll_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_fpll_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_fpll_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_fpll_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_fpll_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_fpll_sptr_message_subscribers(self, which_port)

atsc_fpll_sptr_swigregister = _dtv_swig.atsc_fpll_sptr_swigregister
atsc_fpll_sptr_swigregister(atsc_fpll_sptr)


atsc_fpll_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_fpll = atsc_fpll.make;

class atsc_fs_checker_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_fs_checker)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_fs_checker)> self) -> atsc_fs_checker_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_fs_checker)> self, atsc_fs_checker p) -> atsc_fs_checker_sptr
        """
        this = _dtv_swig.new_atsc_fs_checker_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_fs_checker_sptr self) -> atsc_fs_checker"""
        return _dtv_swig.atsc_fs_checker_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_fs_checker_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_fs_checker_sptr self) -> atsc_fs_checker_sptr"""
        return _dtv_swig.atsc_fs_checker_sptr_make(self)


    def history(self):
        """history(atsc_fs_checker_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_fs_checker_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_fs_checker_sptr self, int which, int delay)
        declare_sample_delay(atsc_fs_checker_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_fs_checker_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_fs_checker_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_fs_checker_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_fs_checker_sptr self) -> int"""
        return _dtv_swig.atsc_fs_checker_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_fs_checker_sptr self) -> double"""
        return _dtv_swig.atsc_fs_checker_sptr_relative_rate(self)


    def start(self):
        """start(atsc_fs_checker_sptr self) -> bool"""
        return _dtv_swig.atsc_fs_checker_sptr_start(self)


    def stop(self):
        """stop(atsc_fs_checker_sptr self) -> bool"""
        return _dtv_swig.atsc_fs_checker_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_fs_checker_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_fs_checker_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_fs_checker_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_fs_checker_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_fs_checker_sptr self) -> int"""
        return _dtv_swig.atsc_fs_checker_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_fs_checker_sptr self, int m)"""
        return _dtv_swig.atsc_fs_checker_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_fs_checker_sptr self)"""
        return _dtv_swig.atsc_fs_checker_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_fs_checker_sptr self) -> bool"""
        return _dtv_swig.atsc_fs_checker_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_fs_checker_sptr self, int m)"""
        return _dtv_swig.atsc_fs_checker_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_fs_checker_sptr self) -> int"""
        return _dtv_swig.atsc_fs_checker_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_fs_checker_sptr self, int i) -> long"""
        return _dtv_swig.atsc_fs_checker_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_fs_checker_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_fs_checker_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_fs_checker_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_fs_checker_sptr self, int i) -> long"""
        return _dtv_swig.atsc_fs_checker_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_fs_checker_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_fs_checker_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_fs_checker_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_fs_checker_sptr self, int which) -> float
        pc_input_buffers_full(atsc_fs_checker_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fs_checker_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_fs_checker_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_fs_checker_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fs_checker_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_fs_checker_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_fs_checker_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fs_checker_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_fs_checker_sptr self, int which) -> float
        pc_output_buffers_full(atsc_fs_checker_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fs_checker_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_fs_checker_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_fs_checker_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fs_checker_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_fs_checker_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_fs_checker_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_fs_checker_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_fs_checker_sptr self) -> float"""
        return _dtv_swig.atsc_fs_checker_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_fs_checker_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_fs_checker_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_fs_checker_sptr self)"""
        return _dtv_swig.atsc_fs_checker_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_fs_checker_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_fs_checker_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_fs_checker_sptr self) -> int"""
        return _dtv_swig.atsc_fs_checker_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_fs_checker_sptr self) -> int"""
        return _dtv_swig.atsc_fs_checker_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_fs_checker_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_fs_checker_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_fs_checker_sptr self) -> std::string"""
        return _dtv_swig.atsc_fs_checker_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_fs_checker_sptr self) -> std::string"""
        return _dtv_swig.atsc_fs_checker_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_fs_checker_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_fs_checker_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_fs_checker_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_fs_checker_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_fs_checker_sptr self) -> long"""
        return _dtv_swig.atsc_fs_checker_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_fs_checker_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_fs_checker_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_fs_checker_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_fs_checker_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_fs_checker_sptr self) -> std::string"""
        return _dtv_swig.atsc_fs_checker_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_fs_checker_sptr self, std::string name)"""
        return _dtv_swig.atsc_fs_checker_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_fs_checker_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_fs_checker_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_fs_checker_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_fs_checker_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_fs_checker_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_fs_checker_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_fs_checker_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_fs_checker_sptr_message_subscribers(self, which_port)

atsc_fs_checker_sptr_swigregister = _dtv_swig.atsc_fs_checker_sptr_swigregister
atsc_fs_checker_sptr_swigregister(atsc_fs_checker_sptr)


atsc_fs_checker_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_fs_checker = atsc_fs_checker.make;

class atsc_interleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_interleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_interleaver)> self) -> atsc_interleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_interleaver)> self, atsc_interleaver p) -> atsc_interleaver_sptr
        """
        this = _dtv_swig.new_atsc_interleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_interleaver_sptr self) -> atsc_interleaver"""
        return _dtv_swig.atsc_interleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_interleaver_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_interleaver_sptr self) -> atsc_interleaver_sptr"""
        return _dtv_swig.atsc_interleaver_sptr_make(self)


    def history(self):
        """history(atsc_interleaver_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_interleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_interleaver_sptr self, int which, int delay)
        declare_sample_delay(atsc_interleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_interleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_interleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_interleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_interleaver_sptr self) -> int"""
        return _dtv_swig.atsc_interleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_interleaver_sptr self) -> double"""
        return _dtv_swig.atsc_interleaver_sptr_relative_rate(self)


    def start(self):
        """start(atsc_interleaver_sptr self) -> bool"""
        return _dtv_swig.atsc_interleaver_sptr_start(self)


    def stop(self):
        """stop(atsc_interleaver_sptr self) -> bool"""
        return _dtv_swig.atsc_interleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_interleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_interleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_interleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_interleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_interleaver_sptr self) -> int"""
        return _dtv_swig.atsc_interleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_interleaver_sptr self, int m)"""
        return _dtv_swig.atsc_interleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_interleaver_sptr self)"""
        return _dtv_swig.atsc_interleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_interleaver_sptr self) -> bool"""
        return _dtv_swig.atsc_interleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_interleaver_sptr self, int m)"""
        return _dtv_swig.atsc_interleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_interleaver_sptr self) -> int"""
        return _dtv_swig.atsc_interleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.atsc_interleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_interleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_interleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_interleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.atsc_interleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_interleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_interleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_interleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_interleaver_sptr self, int which) -> float
        pc_input_buffers_full(atsc_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_interleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_interleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_interleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_interleaver_sptr self, int which) -> float
        pc_output_buffers_full(atsc_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_interleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_interleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_interleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_interleaver_sptr self) -> float"""
        return _dtv_swig.atsc_interleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_interleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_interleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_interleaver_sptr self)"""
        return _dtv_swig.atsc_interleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_interleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_interleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_interleaver_sptr self) -> int"""
        return _dtv_swig.atsc_interleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_interleaver_sptr self) -> int"""
        return _dtv_swig.atsc_interleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_interleaver_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_interleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_interleaver_sptr self) -> std::string"""
        return _dtv_swig.atsc_interleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_interleaver_sptr self) -> std::string"""
        return _dtv_swig.atsc_interleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_interleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_interleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_interleaver_sptr self) -> long"""
        return _dtv_swig.atsc_interleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_interleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_interleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_interleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_interleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_interleaver_sptr self) -> std::string"""
        return _dtv_swig.atsc_interleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_interleaver_sptr self, std::string name)"""
        return _dtv_swig.atsc_interleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_interleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_interleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_interleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_interleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_interleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_interleaver_sptr_message_subscribers(self, which_port)

atsc_interleaver_sptr_swigregister = _dtv_swig.atsc_interleaver_sptr_swigregister
atsc_interleaver_sptr_swigregister(atsc_interleaver_sptr)


atsc_interleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_interleaver = atsc_interleaver.make;

class atsc_pad_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_pad)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_pad)> self) -> atsc_pad_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_pad)> self, atsc_pad p) -> atsc_pad_sptr
        """
        this = _dtv_swig.new_atsc_pad_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_pad_sptr self) -> atsc_pad"""
        return _dtv_swig.atsc_pad_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_pad_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_pad_sptr self) -> atsc_pad_sptr"""
        return _dtv_swig.atsc_pad_sptr_make(self)


    def history(self):
        """history(atsc_pad_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_pad_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_pad_sptr self, int which, int delay)
        declare_sample_delay(atsc_pad_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_pad_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_pad_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_pad_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_pad_sptr self) -> int"""
        return _dtv_swig.atsc_pad_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_pad_sptr self) -> double"""
        return _dtv_swig.atsc_pad_sptr_relative_rate(self)


    def start(self):
        """start(atsc_pad_sptr self) -> bool"""
        return _dtv_swig.atsc_pad_sptr_start(self)


    def stop(self):
        """stop(atsc_pad_sptr self) -> bool"""
        return _dtv_swig.atsc_pad_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_pad_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_pad_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_pad_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_pad_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_pad_sptr self) -> int"""
        return _dtv_swig.atsc_pad_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_pad_sptr self, int m)"""
        return _dtv_swig.atsc_pad_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_pad_sptr self)"""
        return _dtv_swig.atsc_pad_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_pad_sptr self) -> bool"""
        return _dtv_swig.atsc_pad_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_pad_sptr self, int m)"""
        return _dtv_swig.atsc_pad_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_pad_sptr self) -> int"""
        return _dtv_swig.atsc_pad_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_pad_sptr self, int i) -> long"""
        return _dtv_swig.atsc_pad_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_pad_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_pad_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_pad_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_pad_sptr self, int i) -> long"""
        return _dtv_swig.atsc_pad_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_pad_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_pad_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_pad_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_pad_sptr self, int which) -> float
        pc_input_buffers_full(atsc_pad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_pad_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_pad_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_pad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_pad_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_pad_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_pad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_pad_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_pad_sptr self, int which) -> float
        pc_output_buffers_full(atsc_pad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_pad_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_pad_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_pad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_pad_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_pad_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_pad_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_pad_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_pad_sptr self) -> float"""
        return _dtv_swig.atsc_pad_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_pad_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_pad_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_pad_sptr self)"""
        return _dtv_swig.atsc_pad_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_pad_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_pad_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_pad_sptr self) -> int"""
        return _dtv_swig.atsc_pad_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_pad_sptr self) -> int"""
        return _dtv_swig.atsc_pad_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_pad_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_pad_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_pad_sptr self) -> std::string"""
        return _dtv_swig.atsc_pad_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_pad_sptr self) -> std::string"""
        return _dtv_swig.atsc_pad_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_pad_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_pad_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_pad_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_pad_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_pad_sptr self) -> long"""
        return _dtv_swig.atsc_pad_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_pad_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_pad_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_pad_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_pad_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_pad_sptr self) -> std::string"""
        return _dtv_swig.atsc_pad_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_pad_sptr self, std::string name)"""
        return _dtv_swig.atsc_pad_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_pad_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_pad_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_pad_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_pad_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_pad_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_pad_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_pad_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_pad_sptr_message_subscribers(self, which_port)

atsc_pad_sptr_swigregister = _dtv_swig.atsc_pad_sptr_swigregister
atsc_pad_sptr_swigregister(atsc_pad_sptr)


atsc_pad_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_pad = atsc_pad.make;

class atsc_randomizer_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_randomizer)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_randomizer)> self) -> atsc_randomizer_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_randomizer)> self, atsc_randomizer p) -> atsc_randomizer_sptr
        """
        this = _dtv_swig.new_atsc_randomizer_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_randomizer_sptr self) -> atsc_randomizer"""
        return _dtv_swig.atsc_randomizer_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_randomizer_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_randomizer_sptr self) -> atsc_randomizer_sptr"""
        return _dtv_swig.atsc_randomizer_sptr_make(self)


    def history(self):
        """history(atsc_randomizer_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_randomizer_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_randomizer_sptr self, int which, int delay)
        declare_sample_delay(atsc_randomizer_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_randomizer_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_randomizer_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_randomizer_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_randomizer_sptr self) -> int"""
        return _dtv_swig.atsc_randomizer_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_randomizer_sptr self) -> double"""
        return _dtv_swig.atsc_randomizer_sptr_relative_rate(self)


    def start(self):
        """start(atsc_randomizer_sptr self) -> bool"""
        return _dtv_swig.atsc_randomizer_sptr_start(self)


    def stop(self):
        """stop(atsc_randomizer_sptr self) -> bool"""
        return _dtv_swig.atsc_randomizer_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_randomizer_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_randomizer_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_randomizer_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_randomizer_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_randomizer_sptr self) -> int"""
        return _dtv_swig.atsc_randomizer_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_randomizer_sptr self, int m)"""
        return _dtv_swig.atsc_randomizer_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_randomizer_sptr self)"""
        return _dtv_swig.atsc_randomizer_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_randomizer_sptr self) -> bool"""
        return _dtv_swig.atsc_randomizer_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_randomizer_sptr self, int m)"""
        return _dtv_swig.atsc_randomizer_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_randomizer_sptr self) -> int"""
        return _dtv_swig.atsc_randomizer_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_randomizer_sptr self, int i) -> long"""
        return _dtv_swig.atsc_randomizer_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_randomizer_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_randomizer_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_randomizer_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_randomizer_sptr self, int i) -> long"""
        return _dtv_swig.atsc_randomizer_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_randomizer_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_randomizer_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_randomizer_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_randomizer_sptr self, int which) -> float
        pc_input_buffers_full(atsc_randomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_randomizer_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_randomizer_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_randomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_randomizer_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_randomizer_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_randomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_randomizer_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_randomizer_sptr self, int which) -> float
        pc_output_buffers_full(atsc_randomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_randomizer_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_randomizer_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_randomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_randomizer_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_randomizer_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_randomizer_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_randomizer_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_randomizer_sptr self) -> float"""
        return _dtv_swig.atsc_randomizer_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_randomizer_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_randomizer_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_randomizer_sptr self)"""
        return _dtv_swig.atsc_randomizer_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_randomizer_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_randomizer_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_randomizer_sptr self) -> int"""
        return _dtv_swig.atsc_randomizer_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_randomizer_sptr self) -> int"""
        return _dtv_swig.atsc_randomizer_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_randomizer_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_randomizer_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_randomizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_randomizer_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_randomizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_randomizer_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_randomizer_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_randomizer_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_randomizer_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_randomizer_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_randomizer_sptr self) -> long"""
        return _dtv_swig.atsc_randomizer_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_randomizer_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_randomizer_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_randomizer_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_randomizer_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_randomizer_sptr self) -> std::string"""
        return _dtv_swig.atsc_randomizer_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_randomizer_sptr self, std::string name)"""
        return _dtv_swig.atsc_randomizer_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_randomizer_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_randomizer_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_randomizer_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_randomizer_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_randomizer_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_randomizer_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_randomizer_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_randomizer_sptr_message_subscribers(self, which_port)

atsc_randomizer_sptr_swigregister = _dtv_swig.atsc_randomizer_sptr_swigregister
atsc_randomizer_sptr_swigregister(atsc_randomizer_sptr)


atsc_randomizer_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_randomizer = atsc_randomizer.make;

class atsc_rs_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_rs_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_rs_decoder)> self) -> atsc_rs_decoder_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_rs_decoder)> self, atsc_rs_decoder p) -> atsc_rs_decoder_sptr
        """
        this = _dtv_swig.new_atsc_rs_decoder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_rs_decoder_sptr self) -> atsc_rs_decoder"""
        return _dtv_swig.atsc_rs_decoder_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_rs_decoder_sptr
    __del__ = lambda self: None

    def num_errors_corrected(self):
        """num_errors_corrected(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_num_errors_corrected(self)


    def num_bad_packets(self):
        """num_bad_packets(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_num_bad_packets(self)


    def num_packets(self):
        """num_packets(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_num_packets(self)


    def make(self):
        """make(atsc_rs_decoder_sptr self) -> atsc_rs_decoder_sptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_make(self)


    def history(self):
        """history(atsc_rs_decoder_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_rs_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_rs_decoder_sptr self, int which, int delay)
        declare_sample_delay(atsc_rs_decoder_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_rs_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_rs_decoder_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_rs_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_rs_decoder_sptr self) -> double"""
        return _dtv_swig.atsc_rs_decoder_sptr_relative_rate(self)


    def start(self):
        """start(atsc_rs_decoder_sptr self) -> bool"""
        return _dtv_swig.atsc_rs_decoder_sptr_start(self)


    def stop(self):
        """stop(atsc_rs_decoder_sptr self) -> bool"""
        return _dtv_swig.atsc_rs_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_rs_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_rs_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_rs_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_rs_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_rs_decoder_sptr self, int m)"""
        return _dtv_swig.atsc_rs_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_rs_decoder_sptr self)"""
        return _dtv_swig.atsc_rs_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_rs_decoder_sptr self) -> bool"""
        return _dtv_swig.atsc_rs_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_rs_decoder_sptr self, int m)"""
        return _dtv_swig.atsc_rs_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_rs_decoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_rs_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_rs_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_rs_decoder_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_rs_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_rs_decoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_rs_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_rs_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_rs_decoder_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_rs_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_rs_decoder_sptr self, int which) -> float
        pc_input_buffers_full(atsc_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_rs_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_rs_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_rs_decoder_sptr self, int which) -> float
        pc_output_buffers_full(atsc_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_rs_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_rs_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_rs_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_rs_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_rs_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_rs_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_rs_decoder_sptr self)"""
        return _dtv_swig.atsc_rs_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_rs_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_rs_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_rs_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_rs_decoder_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_rs_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_rs_decoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_rs_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_rs_decoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_rs_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_rs_decoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_rs_decoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_rs_decoder_sptr self) -> long"""
        return _dtv_swig.atsc_rs_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_rs_decoder_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_rs_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_rs_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_rs_decoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_rs_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_rs_decoder_sptr self, std::string name)"""
        return _dtv_swig.atsc_rs_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_rs_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_rs_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_rs_decoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_rs_decoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_rs_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_rs_decoder_sptr_message_subscribers(self, which_port)

atsc_rs_decoder_sptr_swigregister = _dtv_swig.atsc_rs_decoder_sptr_swigregister
atsc_rs_decoder_sptr_swigregister(atsc_rs_decoder_sptr)


atsc_rs_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_rs_decoder = atsc_rs_decoder.make;

class atsc_rs_encoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_rs_encoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_rs_encoder)> self) -> atsc_rs_encoder_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_rs_encoder)> self, atsc_rs_encoder p) -> atsc_rs_encoder_sptr
        """
        this = _dtv_swig.new_atsc_rs_encoder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_rs_encoder_sptr self) -> atsc_rs_encoder"""
        return _dtv_swig.atsc_rs_encoder_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_rs_encoder_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_rs_encoder_sptr self) -> atsc_rs_encoder_sptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_make(self)


    def history(self):
        """history(atsc_rs_encoder_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_rs_encoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_rs_encoder_sptr self, int which, int delay)
        declare_sample_delay(atsc_rs_encoder_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_rs_encoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_rs_encoder_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_rs_encoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_rs_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_encoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_rs_encoder_sptr self) -> double"""
        return _dtv_swig.atsc_rs_encoder_sptr_relative_rate(self)


    def start(self):
        """start(atsc_rs_encoder_sptr self) -> bool"""
        return _dtv_swig.atsc_rs_encoder_sptr_start(self)


    def stop(self):
        """stop(atsc_rs_encoder_sptr self) -> bool"""
        return _dtv_swig.atsc_rs_encoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_rs_encoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_rs_encoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_rs_encoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_rs_encoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_rs_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_encoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_rs_encoder_sptr self, int m)"""
        return _dtv_swig.atsc_rs_encoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_rs_encoder_sptr self)"""
        return _dtv_swig.atsc_rs_encoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_rs_encoder_sptr self) -> bool"""
        return _dtv_swig.atsc_rs_encoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_rs_encoder_sptr self, int m)"""
        return _dtv_swig.atsc_rs_encoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_rs_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_encoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_rs_encoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_rs_encoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_rs_encoder_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_rs_encoder_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_rs_encoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_rs_encoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_rs_encoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_rs_encoder_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_rs_encoder_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_rs_encoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_rs_encoder_sptr self, int which) -> float
        pc_input_buffers_full(atsc_rs_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_encoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_rs_encoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_rs_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_encoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_rs_encoder_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_rs_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_encoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_rs_encoder_sptr self, int which) -> float
        pc_output_buffers_full(atsc_rs_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_encoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_rs_encoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_rs_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_encoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_rs_encoder_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_rs_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_rs_encoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_rs_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_rs_encoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_rs_encoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_rs_encoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_rs_encoder_sptr self)"""
        return _dtv_swig.atsc_rs_encoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_rs_encoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_rs_encoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_rs_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_encoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_rs_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_rs_encoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_rs_encoder_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_rs_encoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_rs_encoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_rs_encoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_rs_encoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_rs_encoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_rs_encoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_rs_encoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_rs_encoder_sptr self) -> long"""
        return _dtv_swig.atsc_rs_encoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_rs_encoder_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_rs_encoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_rs_encoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_rs_encoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_rs_encoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_rs_encoder_sptr self, std::string name)"""
        return _dtv_swig.atsc_rs_encoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_rs_encoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_rs_encoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_rs_encoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_rs_encoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_rs_encoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_rs_encoder_sptr_message_subscribers(self, which_port)

atsc_rs_encoder_sptr_swigregister = _dtv_swig.atsc_rs_encoder_sptr_swigregister
atsc_rs_encoder_sptr_swigregister(atsc_rs_encoder_sptr)


atsc_rs_encoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_rs_encoder = atsc_rs_encoder.make;

class atsc_sync_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_sync)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_sync)> self) -> atsc_sync_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_sync)> self, atsc_sync p) -> atsc_sync_sptr
        """
        this = _dtv_swig.new_atsc_sync_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_sync_sptr self) -> atsc_sync"""
        return _dtv_swig.atsc_sync_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_sync_sptr
    __del__ = lambda self: None

    def make(self, rate):
        """make(atsc_sync_sptr self, float rate) -> atsc_sync_sptr"""
        return _dtv_swig.atsc_sync_sptr_make(self, rate)


    def history(self):
        """history(atsc_sync_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_sync_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_sync_sptr self, int which, int delay)
        declare_sample_delay(atsc_sync_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_sync_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_sync_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_sync_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_sync_sptr self) -> int"""
        return _dtv_swig.atsc_sync_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_sync_sptr self) -> double"""
        return _dtv_swig.atsc_sync_sptr_relative_rate(self)


    def start(self):
        """start(atsc_sync_sptr self) -> bool"""
        return _dtv_swig.atsc_sync_sptr_start(self)


    def stop(self):
        """stop(atsc_sync_sptr self) -> bool"""
        return _dtv_swig.atsc_sync_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_sync_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_sync_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_sync_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_sync_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_sync_sptr self) -> int"""
        return _dtv_swig.atsc_sync_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_sync_sptr self, int m)"""
        return _dtv_swig.atsc_sync_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_sync_sptr self)"""
        return _dtv_swig.atsc_sync_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_sync_sptr self) -> bool"""
        return _dtv_swig.atsc_sync_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_sync_sptr self, int m)"""
        return _dtv_swig.atsc_sync_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_sync_sptr self) -> int"""
        return _dtv_swig.atsc_sync_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_sync_sptr self, int i) -> long"""
        return _dtv_swig.atsc_sync_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_sync_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_sync_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_sync_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_sync_sptr self, int i) -> long"""
        return _dtv_swig.atsc_sync_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_sync_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_sync_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_sync_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_sync_sptr self, int which) -> float
        pc_input_buffers_full(atsc_sync_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_sync_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_sync_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_sync_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_sync_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_sync_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_sync_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_sync_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_sync_sptr self, int which) -> float
        pc_output_buffers_full(atsc_sync_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_sync_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_sync_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_sync_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_sync_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_sync_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_sync_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_sync_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_sync_sptr self) -> float"""
        return _dtv_swig.atsc_sync_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_sync_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_sync_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_sync_sptr self)"""
        return _dtv_swig.atsc_sync_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_sync_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_sync_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_sync_sptr self) -> int"""
        return _dtv_swig.atsc_sync_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_sync_sptr self) -> int"""
        return _dtv_swig.atsc_sync_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_sync_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_sync_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_sync_sptr self) -> std::string"""
        return _dtv_swig.atsc_sync_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_sync_sptr self) -> std::string"""
        return _dtv_swig.atsc_sync_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_sync_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_sync_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_sync_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_sync_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_sync_sptr self) -> long"""
        return _dtv_swig.atsc_sync_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_sync_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_sync_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_sync_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_sync_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_sync_sptr self) -> std::string"""
        return _dtv_swig.atsc_sync_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_sync_sptr self, std::string name)"""
        return _dtv_swig.atsc_sync_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_sync_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_sync_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_sync_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_sync_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_sync_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_sync_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_sync_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_sync_sptr_message_subscribers(self, which_port)

atsc_sync_sptr_swigregister = _dtv_swig.atsc_sync_sptr_swigregister
atsc_sync_sptr_swigregister(atsc_sync_sptr)


atsc_sync_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_sync = atsc_sync.make;

class atsc_trellis_encoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_trellis_encoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_trellis_encoder)> self) -> atsc_trellis_encoder_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_trellis_encoder)> self, atsc_trellis_encoder p) -> atsc_trellis_encoder_sptr
        """
        this = _dtv_swig.new_atsc_trellis_encoder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_trellis_encoder_sptr self) -> atsc_trellis_encoder"""
        return _dtv_swig.atsc_trellis_encoder_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_trellis_encoder_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_trellis_encoder_sptr self) -> atsc_trellis_encoder_sptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_make(self)


    def history(self):
        """history(atsc_trellis_encoder_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_trellis_encoder_sptr self, int which, int delay)
        declare_sample_delay(atsc_trellis_encoder_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_trellis_encoder_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_trellis_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_trellis_encoder_sptr self) -> double"""
        return _dtv_swig.atsc_trellis_encoder_sptr_relative_rate(self)


    def start(self):
        """start(atsc_trellis_encoder_sptr self) -> bool"""
        return _dtv_swig.atsc_trellis_encoder_sptr_start(self)


    def stop(self):
        """stop(atsc_trellis_encoder_sptr self) -> bool"""
        return _dtv_swig.atsc_trellis_encoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_trellis_encoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_trellis_encoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_trellis_encoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_trellis_encoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_trellis_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_trellis_encoder_sptr self, int m)"""
        return _dtv_swig.atsc_trellis_encoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_trellis_encoder_sptr self)"""
        return _dtv_swig.atsc_trellis_encoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_trellis_encoder_sptr self) -> bool"""
        return _dtv_swig.atsc_trellis_encoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_trellis_encoder_sptr self, int m)"""
        return _dtv_swig.atsc_trellis_encoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_trellis_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_trellis_encoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_trellis_encoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_trellis_encoder_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_trellis_encoder_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_trellis_encoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_trellis_encoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_trellis_encoder_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_trellis_encoder_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_trellis_encoder_sptr self, int which) -> float
        pc_input_buffers_full(atsc_trellis_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_trellis_encoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_trellis_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_trellis_encoder_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_trellis_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_trellis_encoder_sptr self, int which) -> float
        pc_output_buffers_full(atsc_trellis_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_trellis_encoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_trellis_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_trellis_encoder_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_trellis_encoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_trellis_encoder_sptr self) -> float"""
        return _dtv_swig.atsc_trellis_encoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_trellis_encoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_trellis_encoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_trellis_encoder_sptr self)"""
        return _dtv_swig.atsc_trellis_encoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_trellis_encoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_trellis_encoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_trellis_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_trellis_encoder_sptr self) -> int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_trellis_encoder_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_trellis_encoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_trellis_encoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_trellis_encoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_trellis_encoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_trellis_encoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_trellis_encoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_trellis_encoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_trellis_encoder_sptr self) -> long"""
        return _dtv_swig.atsc_trellis_encoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_trellis_encoder_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_trellis_encoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_trellis_encoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_trellis_encoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_trellis_encoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_trellis_encoder_sptr self, std::string name)"""
        return _dtv_swig.atsc_trellis_encoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_trellis_encoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_trellis_encoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_trellis_encoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_trellis_encoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_trellis_encoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_trellis_encoder_sptr_message_subscribers(self, which_port)

atsc_trellis_encoder_sptr_swigregister = _dtv_swig.atsc_trellis_encoder_sptr_swigregister
atsc_trellis_encoder_sptr_swigregister(atsc_trellis_encoder_sptr)


atsc_trellis_encoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_trellis_encoder = atsc_trellis_encoder.make;

class atsc_viterbi_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::atsc_viterbi_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::atsc_viterbi_decoder)> self) -> atsc_viterbi_decoder_sptr
        __init__(boost::shared_ptr<(gr::dtv::atsc_viterbi_decoder)> self, atsc_viterbi_decoder p) -> atsc_viterbi_decoder_sptr
        """
        this = _dtv_swig.new_atsc_viterbi_decoder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(atsc_viterbi_decoder_sptr self) -> atsc_viterbi_decoder"""
        return _dtv_swig.atsc_viterbi_decoder_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_atsc_viterbi_decoder_sptr
    __del__ = lambda self: None

    def make(self):
        """make(atsc_viterbi_decoder_sptr self) -> atsc_viterbi_decoder_sptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_make(self)


    def decoder_metrics(self):
        """decoder_metrics(atsc_viterbi_decoder_sptr self) -> pmt_vector_float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_decoder_metrics(self)


    def history(self):
        """history(atsc_viterbi_decoder_sptr self) -> unsigned int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(atsc_viterbi_decoder_sptr self, int which, int delay)
        declare_sample_delay(atsc_viterbi_decoder_sptr self, unsigned int delay)
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(atsc_viterbi_decoder_sptr self, int which) -> unsigned int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(atsc_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(atsc_viterbi_decoder_sptr self) -> double"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_relative_rate(self)


    def start(self):
        """start(atsc_viterbi_decoder_sptr self) -> bool"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_start(self)


    def stop(self):
        """stop(atsc_viterbi_decoder_sptr self) -> bool"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(atsc_viterbi_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(atsc_viterbi_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(atsc_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(atsc_viterbi_decoder_sptr self, int m)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(atsc_viterbi_decoder_sptr self)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(atsc_viterbi_decoder_sptr self) -> bool"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(atsc_viterbi_decoder_sptr self, int m)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(atsc_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(atsc_viterbi_decoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(atsc_viterbi_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(atsc_viterbi_decoder_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(atsc_viterbi_decoder_sptr self, int i) -> long"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(atsc_viterbi_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(atsc_viterbi_decoder_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(atsc_viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full(atsc_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(atsc_viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(atsc_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(atsc_viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(atsc_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(atsc_viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full(atsc_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(atsc_viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(atsc_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(atsc_viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(atsc_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(atsc_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(atsc_viterbi_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(atsc_viterbi_decoder_sptr self)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(atsc_viterbi_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(atsc_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(atsc_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(atsc_viterbi_decoder_sptr self, int priority) -> int"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(atsc_viterbi_decoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(atsc_viterbi_decoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(atsc_viterbi_decoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(atsc_viterbi_decoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(atsc_viterbi_decoder_sptr self) -> long"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(atsc_viterbi_decoder_sptr self) -> basic_block_sptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(atsc_viterbi_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(atsc_viterbi_decoder_sptr self) -> std::string"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(atsc_viterbi_decoder_sptr self, std::string name)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(atsc_viterbi_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.atsc_viterbi_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(atsc_viterbi_decoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(atsc_viterbi_decoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(atsc_viterbi_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.atsc_viterbi_decoder_sptr_message_subscribers(self, which_port)

atsc_viterbi_decoder_sptr_swigregister = _dtv_swig.atsc_viterbi_decoder_sptr_swigregister
atsc_viterbi_decoder_sptr_swigregister(atsc_viterbi_decoder_sptr)


atsc_viterbi_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
atsc_viterbi_decoder = atsc_viterbi_decoder.make;

class dvb_bbheader_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvb_bbheader_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvb_bbheader_bb)> self) -> dvb_bbheader_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvb_bbheader_bb)> self, dvb_bbheader_bb p) -> dvb_bbheader_bb_sptr
        """
        this = _dtv_swig.new_dvb_bbheader_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvb_bbheader_bb_sptr self) -> dvb_bbheader_bb"""
        return _dtv_swig.dvb_bbheader_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvb_bbheader_bb_sptr
    __del__ = lambda self: None

    def make(self, standard, framesize, rate, rolloff, mode, inband, fecblocks, tsrate):
        """make(dvb_bbheader_bb_sptr self, gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvbs2_rolloff_factor_t rolloff, gr::dtv::dvbt2_inputmode_t mode, gr::dtv::dvbt2_inband_t inband, int fecblocks, int tsrate) -> dvb_bbheader_bb_sptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_make(self, standard, framesize, rate, rolloff, mode, inband, fecblocks, tsrate)


    def history(self):
        """history(dvb_bbheader_bb_sptr self) -> unsigned int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvb_bbheader_bb_sptr self, int which, int delay)
        declare_sample_delay(dvb_bbheader_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvb_bbheader_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvb_bbheader_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvb_bbheader_bb_sptr self) -> double"""
        return _dtv_swig.dvb_bbheader_bb_sptr_relative_rate(self)


    def start(self):
        """start(dvb_bbheader_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bbheader_bb_sptr_start(self)


    def stop(self):
        """stop(dvb_bbheader_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bbheader_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvb_bbheader_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvb_bbheader_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvb_bbheader_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvb_bbheader_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvb_bbheader_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvb_bbheader_bb_sptr self, int m)"""
        return _dtv_swig.dvb_bbheader_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvb_bbheader_bb_sptr self)"""
        return _dtv_swig.dvb_bbheader_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvb_bbheader_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bbheader_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvb_bbheader_bb_sptr self, int m)"""
        return _dtv_swig.dvb_bbheader_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvb_bbheader_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvb_bbheader_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_bbheader_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvb_bbheader_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(dvb_bbheader_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvb_bbheader_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_bbheader_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvb_bbheader_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(dvb_bbheader_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvb_bbheader_bb_sptr self, int which) -> float
        pc_input_buffers_full(dvb_bbheader_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvb_bbheader_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvb_bbheader_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvb_bbheader_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(dvb_bbheader_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvb_bbheader_bb_sptr self, int which) -> float
        pc_output_buffers_full(dvb_bbheader_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvb_bbheader_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvb_bbheader_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvb_bbheader_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(dvb_bbheader_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvb_bbheader_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbheader_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvb_bbheader_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvb_bbheader_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvb_bbheader_bb_sptr self)"""
        return _dtv_swig.dvb_bbheader_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvb_bbheader_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvb_bbheader_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvb_bbheader_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvb_bbheader_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvb_bbheader_bb_sptr self, int priority) -> int"""
        return _dtv_swig.dvb_bbheader_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvb_bbheader_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bbheader_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvb_bbheader_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bbheader_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvb_bbheader_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvb_bbheader_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvb_bbheader_bb_sptr self) -> long"""
        return _dtv_swig.dvb_bbheader_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvb_bbheader_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvb_bbheader_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvb_bbheader_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvb_bbheader_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bbheader_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvb_bbheader_bb_sptr self, std::string name)"""
        return _dtv_swig.dvb_bbheader_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvb_bbheader_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvb_bbheader_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvb_bbheader_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvb_bbheader_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvb_bbheader_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvb_bbheader_bb_sptr_message_subscribers(self, which_port)

dvb_bbheader_bb_sptr_swigregister = _dtv_swig.dvb_bbheader_bb_sptr_swigregister
dvb_bbheader_bb_sptr_swigregister(dvb_bbheader_bb_sptr)


dvb_bbheader_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvb_bbheader_bb = dvb_bbheader_bb.make;

class dvb_bbscrambler_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvb_bbscrambler_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvb_bbscrambler_bb)> self) -> dvb_bbscrambler_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvb_bbscrambler_bb)> self, dvb_bbscrambler_bb p) -> dvb_bbscrambler_bb_sptr
        """
        this = _dtv_swig.new_dvb_bbscrambler_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvb_bbscrambler_bb_sptr self) -> dvb_bbscrambler_bb"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvb_bbscrambler_bb_sptr
    __del__ = lambda self: None

    def make(self, standard, framesize, rate):
        """make(dvb_bbscrambler_bb_sptr self, gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate) -> dvb_bbscrambler_bb_sptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_make(self, standard, framesize, rate)


    def history(self):
        """history(dvb_bbscrambler_bb_sptr self) -> unsigned int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvb_bbscrambler_bb_sptr self, int which, int delay)
        declare_sample_delay(dvb_bbscrambler_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvb_bbscrambler_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvb_bbscrambler_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvb_bbscrambler_bb_sptr self) -> double"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_relative_rate(self)


    def start(self):
        """start(dvb_bbscrambler_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_start(self)


    def stop(self):
        """stop(dvb_bbscrambler_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvb_bbscrambler_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvb_bbscrambler_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvb_bbscrambler_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvb_bbscrambler_bb_sptr self, int m)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvb_bbscrambler_bb_sptr self)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvb_bbscrambler_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvb_bbscrambler_bb_sptr self, int m)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvb_bbscrambler_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvb_bbscrambler_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvb_bbscrambler_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(dvb_bbscrambler_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvb_bbscrambler_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvb_bbscrambler_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(dvb_bbscrambler_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvb_bbscrambler_bb_sptr self, int which) -> float
        pc_input_buffers_full(dvb_bbscrambler_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvb_bbscrambler_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvb_bbscrambler_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvb_bbscrambler_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(dvb_bbscrambler_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvb_bbscrambler_bb_sptr self, int which) -> float
        pc_output_buffers_full(dvb_bbscrambler_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvb_bbscrambler_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvb_bbscrambler_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvb_bbscrambler_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(dvb_bbscrambler_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvb_bbscrambler_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvb_bbscrambler_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvb_bbscrambler_bb_sptr self)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvb_bbscrambler_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvb_bbscrambler_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvb_bbscrambler_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvb_bbscrambler_bb_sptr self, int priority) -> int"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvb_bbscrambler_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvb_bbscrambler_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvb_bbscrambler_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvb_bbscrambler_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvb_bbscrambler_bb_sptr self) -> long"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvb_bbscrambler_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvb_bbscrambler_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvb_bbscrambler_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvb_bbscrambler_bb_sptr self, std::string name)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvb_bbscrambler_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvb_bbscrambler_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvb_bbscrambler_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvb_bbscrambler_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvb_bbscrambler_bb_sptr_message_subscribers(self, which_port)

dvb_bbscrambler_bb_sptr_swigregister = _dtv_swig.dvb_bbscrambler_bb_sptr_swigregister
dvb_bbscrambler_bb_sptr_swigregister(dvb_bbscrambler_bb_sptr)


dvb_bbscrambler_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvb_bbscrambler_bb = dvb_bbscrambler_bb.make;

class dvb_bch_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvb_bch_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvb_bch_bb)> self) -> dvb_bch_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvb_bch_bb)> self, dvb_bch_bb p) -> dvb_bch_bb_sptr
        """
        this = _dtv_swig.new_dvb_bch_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvb_bch_bb_sptr self) -> dvb_bch_bb"""
        return _dtv_swig.dvb_bch_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvb_bch_bb_sptr
    __del__ = lambda self: None

    def make(self, standard, framesize, rate):
        """make(dvb_bch_bb_sptr self, gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate) -> dvb_bch_bb_sptr"""
        return _dtv_swig.dvb_bch_bb_sptr_make(self, standard, framesize, rate)


    def history(self):
        """history(dvb_bch_bb_sptr self) -> unsigned int"""
        return _dtv_swig.dvb_bch_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvb_bch_bb_sptr self, int which, int delay)
        declare_sample_delay(dvb_bch_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvb_bch_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvb_bch_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvb_bch_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvb_bch_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bch_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvb_bch_bb_sptr self) -> double"""
        return _dtv_swig.dvb_bch_bb_sptr_relative_rate(self)


    def start(self):
        """start(dvb_bch_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bch_bb_sptr_start(self)


    def stop(self):
        """stop(dvb_bch_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bch_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvb_bch_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvb_bch_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvb_bch_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvb_bch_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvb_bch_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bch_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvb_bch_bb_sptr self, int m)"""
        return _dtv_swig.dvb_bch_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvb_bch_bb_sptr self)"""
        return _dtv_swig.dvb_bch_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvb_bch_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_bch_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvb_bch_bb_sptr self, int m)"""
        return _dtv_swig.dvb_bch_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvb_bch_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bch_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvb_bch_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_bch_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvb_bch_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(dvb_bch_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvb_bch_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvb_bch_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_bch_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvb_bch_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(dvb_bch_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvb_bch_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvb_bch_bb_sptr self, int which) -> float
        pc_input_buffers_full(dvb_bch_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bch_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvb_bch_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvb_bch_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bch_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvb_bch_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(dvb_bch_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bch_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvb_bch_bb_sptr self, int which) -> float
        pc_output_buffers_full(dvb_bch_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bch_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvb_bch_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvb_bch_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bch_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvb_bch_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(dvb_bch_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_bch_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvb_bch_bb_sptr self) -> float"""
        return _dtv_swig.dvb_bch_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvb_bch_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvb_bch_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvb_bch_bb_sptr self)"""
        return _dtv_swig.dvb_bch_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvb_bch_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvb_bch_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvb_bch_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bch_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvb_bch_bb_sptr self) -> int"""
        return _dtv_swig.dvb_bch_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvb_bch_bb_sptr self, int priority) -> int"""
        return _dtv_swig.dvb_bch_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvb_bch_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bch_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvb_bch_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bch_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvb_bch_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_bch_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvb_bch_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_bch_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvb_bch_bb_sptr self) -> long"""
        return _dtv_swig.dvb_bch_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvb_bch_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvb_bch_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvb_bch_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvb_bch_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvb_bch_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_bch_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvb_bch_bb_sptr self, std::string name)"""
        return _dtv_swig.dvb_bch_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvb_bch_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvb_bch_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvb_bch_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_bch_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvb_bch_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_bch_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvb_bch_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvb_bch_bb_sptr_message_subscribers(self, which_port)

dvb_bch_bb_sptr_swigregister = _dtv_swig.dvb_bch_bb_sptr_swigregister
dvb_bch_bb_sptr_swigregister(dvb_bch_bb_sptr)


dvb_bch_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvb_bch_bb = dvb_bch_bb.make;

class dvb_ldpc_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvb_ldpc_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvb_ldpc_bb)> self) -> dvb_ldpc_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvb_ldpc_bb)> self, dvb_ldpc_bb p) -> dvb_ldpc_bb_sptr
        """
        this = _dtv_swig.new_dvb_ldpc_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvb_ldpc_bb_sptr self) -> dvb_ldpc_bb"""
        return _dtv_swig.dvb_ldpc_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvb_ldpc_bb_sptr
    __del__ = lambda self: None

    def make(self, standard, framesize, rate, constellation):
        """make(dvb_ldpc_bb_sptr self, gr::dtv::dvb_standard_t standard, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvb_ldpc_bb_sptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_make(self, standard, framesize, rate, constellation)


    def history(self):
        """history(dvb_ldpc_bb_sptr self) -> unsigned int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvb_ldpc_bb_sptr self, int which, int delay)
        declare_sample_delay(dvb_ldpc_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvb_ldpc_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvb_ldpc_bb_sptr self) -> int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvb_ldpc_bb_sptr self) -> double"""
        return _dtv_swig.dvb_ldpc_bb_sptr_relative_rate(self)


    def start(self):
        """start(dvb_ldpc_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_ldpc_bb_sptr_start(self)


    def stop(self):
        """stop(dvb_ldpc_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_ldpc_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvb_ldpc_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvb_ldpc_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvb_ldpc_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvb_ldpc_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvb_ldpc_bb_sptr self) -> int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvb_ldpc_bb_sptr self, int m)"""
        return _dtv_swig.dvb_ldpc_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvb_ldpc_bb_sptr self)"""
        return _dtv_swig.dvb_ldpc_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvb_ldpc_bb_sptr self) -> bool"""
        return _dtv_swig.dvb_ldpc_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvb_ldpc_bb_sptr self, int m)"""
        return _dtv_swig.dvb_ldpc_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvb_ldpc_bb_sptr self) -> int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvb_ldpc_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_ldpc_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvb_ldpc_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(dvb_ldpc_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvb_ldpc_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvb_ldpc_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvb_ldpc_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(dvb_ldpc_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvb_ldpc_bb_sptr self, int which) -> float
        pc_input_buffers_full(dvb_ldpc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvb_ldpc_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvb_ldpc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvb_ldpc_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(dvb_ldpc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvb_ldpc_bb_sptr self, int which) -> float
        pc_output_buffers_full(dvb_ldpc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvb_ldpc_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvb_ldpc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvb_ldpc_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(dvb_ldpc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvb_ldpc_bb_sptr self) -> float"""
        return _dtv_swig.dvb_ldpc_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvb_ldpc_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvb_ldpc_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvb_ldpc_bb_sptr self)"""
        return _dtv_swig.dvb_ldpc_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvb_ldpc_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvb_ldpc_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvb_ldpc_bb_sptr self) -> int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvb_ldpc_bb_sptr self) -> int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvb_ldpc_bb_sptr self, int priority) -> int"""
        return _dtv_swig.dvb_ldpc_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvb_ldpc_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_ldpc_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvb_ldpc_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_ldpc_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvb_ldpc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvb_ldpc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvb_ldpc_bb_sptr self) -> long"""
        return _dtv_swig.dvb_ldpc_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvb_ldpc_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvb_ldpc_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvb_ldpc_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvb_ldpc_bb_sptr self) -> std::string"""
        return _dtv_swig.dvb_ldpc_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvb_ldpc_bb_sptr self, std::string name)"""
        return _dtv_swig.dvb_ldpc_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvb_ldpc_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvb_ldpc_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvb_ldpc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvb_ldpc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvb_ldpc_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvb_ldpc_bb_sptr_message_subscribers(self, which_port)

dvb_ldpc_bb_sptr_swigregister = _dtv_swig.dvb_ldpc_bb_sptr_swigregister
dvb_ldpc_bb_sptr_swigregister(dvb_ldpc_bb_sptr)


dvb_ldpc_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvb_ldpc_bb = dvb_ldpc_bb.make;

class dvbt2_interleaver_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_interleaver_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_interleaver_bb)> self) -> dvbt2_interleaver_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_interleaver_bb)> self, dvbt2_interleaver_bb p) -> dvbt2_interleaver_bb_sptr
        """
        this = _dtv_swig.new_dvbt2_interleaver_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_interleaver_bb_sptr self) -> dvbt2_interleaver_bb"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_interleaver_bb_sptr
    __del__ = lambda self: None

    def make(self, framesize, rate, constellation):
        """make(dvbt2_interleaver_bb_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvbt2_interleaver_bb_sptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_make(self, framesize, rate, constellation)


    def history(self):
        """history(dvbt2_interleaver_bb_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_interleaver_bb_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_interleaver_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_interleaver_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_interleaver_bb_sptr self) -> double"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_interleaver_bb_sptr self) -> bool"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_start(self)


    def stop(self):
        """stop(dvbt2_interleaver_bb_sptr self) -> bool"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_interleaver_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_interleaver_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_interleaver_bb_sptr self, int m)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_interleaver_bb_sptr self)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_interleaver_bb_sptr self) -> bool"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_interleaver_bb_sptr self, int m)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_interleaver_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_interleaver_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_interleaver_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_interleaver_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_interleaver_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_interleaver_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_interleaver_bb_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_interleaver_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_interleaver_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_interleaver_bb_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_interleaver_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_interleaver_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_interleaver_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_interleaver_bb_sptr self)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_interleaver_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_interleaver_bb_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_interleaver_bb_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_interleaver_bb_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_interleaver_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_interleaver_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_interleaver_bb_sptr self) -> long"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_interleaver_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_interleaver_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_interleaver_bb_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_interleaver_bb_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_interleaver_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_interleaver_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_interleaver_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_interleaver_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_interleaver_bb_sptr_message_subscribers(self, which_port)

dvbt2_interleaver_bb_sptr_swigregister = _dtv_swig.dvbt2_interleaver_bb_sptr_swigregister
dvbt2_interleaver_bb_sptr_swigregister(dvbt2_interleaver_bb_sptr)


dvbt2_interleaver_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_interleaver_bb = dvbt2_interleaver_bb.make;

class dvbt2_modulator_bc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_modulator_bc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_modulator_bc)> self) -> dvbt2_modulator_bc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_modulator_bc)> self, dvbt2_modulator_bc p) -> dvbt2_modulator_bc_sptr
        """
        this = _dtv_swig.new_dvbt2_modulator_bc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_modulator_bc_sptr self) -> dvbt2_modulator_bc"""
        return _dtv_swig.dvbt2_modulator_bc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_modulator_bc_sptr
    __del__ = lambda self: None

    def make(self, framesize, constellation, rotation):
        """make(dvbt2_modulator_bc_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt2_rotation_t rotation) -> dvbt2_modulator_bc_sptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_make(self, framesize, constellation, rotation)


    def history(self):
        """history(dvbt2_modulator_bc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_modulator_bc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_modulator_bc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_modulator_bc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_modulator_bc_sptr self) -> double"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_modulator_bc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_modulator_bc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_modulator_bc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_modulator_bc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_modulator_bc_sptr self, int m)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_modulator_bc_sptr self)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_modulator_bc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_modulator_bc_sptr self, int m)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_modulator_bc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_modulator_bc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_modulator_bc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_modulator_bc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_modulator_bc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_modulator_bc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_modulator_bc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_modulator_bc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_modulator_bc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_modulator_bc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_modulator_bc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_modulator_bc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_modulator_bc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_modulator_bc_sptr self)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_modulator_bc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_modulator_bc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_modulator_bc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_modulator_bc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_modulator_bc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_modulator_bc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_modulator_bc_sptr self) -> long"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_modulator_bc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_modulator_bc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_modulator_bc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_modulator_bc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_modulator_bc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_modulator_bc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_modulator_bc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_modulator_bc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_modulator_bc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_modulator_bc_sptr_message_subscribers(self, which_port)

dvbt2_modulator_bc_sptr_swigregister = _dtv_swig.dvbt2_modulator_bc_sptr_swigregister
dvbt2_modulator_bc_sptr_swigregister(dvbt2_modulator_bc_sptr)


dvbt2_modulator_bc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_modulator_bc = dvbt2_modulator_bc.make;

class dvbt2_cellinterleaver_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_cellinterleaver_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_cellinterleaver_cc)> self) -> dvbt2_cellinterleaver_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_cellinterleaver_cc)> self, dvbt2_cellinterleaver_cc p) -> dvbt2_cellinterleaver_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_cellinterleaver_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_cellinterleaver_cc_sptr self) -> dvbt2_cellinterleaver_cc"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_cellinterleaver_cc_sptr
    __del__ = lambda self: None

    def make(self, framesize, constellation, fecblocks, tiblocks):
        """make(dvbt2_cellinterleaver_cc_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_constellation_t constellation, int fecblocks, int tiblocks) -> dvbt2_cellinterleaver_cc_sptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_make(self, framesize, constellation, fecblocks, tiblocks)


    def history(self):
        """history(dvbt2_cellinterleaver_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_cellinterleaver_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_cellinterleaver_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_cellinterleaver_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_cellinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_cellinterleaver_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_cellinterleaver_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_cellinterleaver_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_cellinterleaver_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_cellinterleaver_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_cellinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_cellinterleaver_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_cellinterleaver_cc_sptr self)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_cellinterleaver_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_cellinterleaver_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_cellinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_cellinterleaver_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_cellinterleaver_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_cellinterleaver_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_cellinterleaver_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_cellinterleaver_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_cellinterleaver_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_cellinterleaver_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_cellinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_cellinterleaver_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_cellinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_cellinterleaver_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_cellinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_cellinterleaver_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_cellinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_cellinterleaver_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_cellinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_cellinterleaver_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_cellinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_cellinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_cellinterleaver_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_cellinterleaver_cc_sptr self)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_cellinterleaver_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_cellinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_cellinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_cellinterleaver_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_cellinterleaver_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_cellinterleaver_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_cellinterleaver_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_cellinterleaver_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_cellinterleaver_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_cellinterleaver_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_cellinterleaver_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_cellinterleaver_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_cellinterleaver_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_cellinterleaver_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_cellinterleaver_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_cellinterleaver_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_cellinterleaver_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_cellinterleaver_cc_sptr_message_subscribers(self, which_port)

dvbt2_cellinterleaver_cc_sptr_swigregister = _dtv_swig.dvbt2_cellinterleaver_cc_sptr_swigregister
dvbt2_cellinterleaver_cc_sptr_swigregister(dvbt2_cellinterleaver_cc_sptr)


dvbt2_cellinterleaver_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_cellinterleaver_cc = dvbt2_cellinterleaver_cc.make;

class dvbt2_framemapper_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_framemapper_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_framemapper_cc)> self) -> dvbt2_framemapper_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_framemapper_cc)> self, dvbt2_framemapper_cc p) -> dvbt2_framemapper_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_framemapper_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_framemapper_cc_sptr self) -> dvbt2_framemapper_cc"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_framemapper_cc_sptr
    __del__ = lambda self: None

    def make(self, framesize, rate, constellation, rotation, fecblocks, tiblocks, carriermode, fftsize, guardinterval, l1constellation, pilotpattern, t2frames, numdatasyms, paprmode, version, preamble, inputmode, reservedbiasbits, l1scrambled, inband):
        """make(dvbt2_framemapper_cc_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt2_rotation_t rotation, int fecblocks, int tiblocks, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvb_guardinterval_t guardinterval, gr::dtv::dvbt2_l1constellation_t l1constellation, gr::dtv::dvbt2_pilotpattern_t pilotpattern, int t2frames, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_inputmode_t inputmode, gr::dtv::dvbt2_reservedbiasbits_t reservedbiasbits, gr::dtv::dvbt2_l1scrambled_t l1scrambled, gr::dtv::dvbt2_inband_t inband) -> dvbt2_framemapper_cc_sptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_make(self, framesize, rate, constellation, rotation, fecblocks, tiblocks, carriermode, fftsize, guardinterval, l1constellation, pilotpattern, t2frames, numdatasyms, paprmode, version, preamble, inputmode, reservedbiasbits, l1scrambled, inband)


    def history(self):
        """history(dvbt2_framemapper_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_framemapper_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_framemapper_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_framemapper_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_framemapper_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_framemapper_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_framemapper_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_framemapper_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_framemapper_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_framemapper_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_framemapper_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_framemapper_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_framemapper_cc_sptr self)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_framemapper_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_framemapper_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_framemapper_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_framemapper_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_framemapper_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_framemapper_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_framemapper_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_framemapper_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_framemapper_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_framemapper_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_framemapper_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_framemapper_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_framemapper_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_framemapper_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_framemapper_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_framemapper_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_framemapper_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_framemapper_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_framemapper_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_framemapper_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_framemapper_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_framemapper_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_framemapper_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_framemapper_cc_sptr self)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_framemapper_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_framemapper_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_framemapper_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_framemapper_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_framemapper_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_framemapper_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_framemapper_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_framemapper_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_framemapper_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_framemapper_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_framemapper_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_framemapper_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_framemapper_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_framemapper_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_framemapper_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_framemapper_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_framemapper_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_framemapper_cc_sptr_message_subscribers(self, which_port)

dvbt2_framemapper_cc_sptr_swigregister = _dtv_swig.dvbt2_framemapper_cc_sptr_swigregister
dvbt2_framemapper_cc_sptr_swigregister(dvbt2_framemapper_cc_sptr)


dvbt2_framemapper_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_framemapper_cc = dvbt2_framemapper_cc.make;

class dvbt2_freqinterleaver_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_freqinterleaver_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_freqinterleaver_cc)> self) -> dvbt2_freqinterleaver_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_freqinterleaver_cc)> self, dvbt2_freqinterleaver_cc p) -> dvbt2_freqinterleaver_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_freqinterleaver_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_freqinterleaver_cc_sptr self) -> dvbt2_freqinterleaver_cc"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_freqinterleaver_cc_sptr
    __del__ = lambda self: None

    def make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble):
        """make(dvbt2_freqinterleaver_cc_sptr self, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble) -> dvbt2_freqinterleaver_cc_sptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble)


    def history(self):
        """history(dvbt2_freqinterleaver_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_freqinterleaver_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_freqinterleaver_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_freqinterleaver_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_freqinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_freqinterleaver_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_freqinterleaver_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_freqinterleaver_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_freqinterleaver_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_freqinterleaver_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_freqinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_freqinterleaver_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_freqinterleaver_cc_sptr self)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_freqinterleaver_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_freqinterleaver_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_freqinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_freqinterleaver_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_freqinterleaver_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_freqinterleaver_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_freqinterleaver_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_freqinterleaver_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_freqinterleaver_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_freqinterleaver_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_freqinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_freqinterleaver_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_freqinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_freqinterleaver_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_freqinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_freqinterleaver_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_freqinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_freqinterleaver_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_freqinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_freqinterleaver_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_freqinterleaver_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_freqinterleaver_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_freqinterleaver_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_freqinterleaver_cc_sptr self)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_freqinterleaver_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_freqinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_freqinterleaver_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_freqinterleaver_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_freqinterleaver_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_freqinterleaver_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_freqinterleaver_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_freqinterleaver_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_freqinterleaver_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_freqinterleaver_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_freqinterleaver_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_freqinterleaver_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_freqinterleaver_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_freqinterleaver_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_freqinterleaver_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_freqinterleaver_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_freqinterleaver_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_freqinterleaver_cc_sptr_message_subscribers(self, which_port)

dvbt2_freqinterleaver_cc_sptr_swigregister = _dtv_swig.dvbt2_freqinterleaver_cc_sptr_swigregister
dvbt2_freqinterleaver_cc_sptr_swigregister(dvbt2_freqinterleaver_cc_sptr)


dvbt2_freqinterleaver_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_freqinterleaver_cc = dvbt2_freqinterleaver_cc.make;

class dvbt2_pilotgenerator_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_pilotgenerator_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_pilotgenerator_cc)> self) -> dvbt2_pilotgenerator_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_pilotgenerator_cc)> self, dvbt2_pilotgenerator_cc p) -> dvbt2_pilotgenerator_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_pilotgenerator_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_pilotgenerator_cc_sptr self) -> dvbt2_pilotgenerator_cc"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_pilotgenerator_cc_sptr
    __del__ = lambda self: None

    def make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble, misogroup, equalization, bandwidth, vlength):
        """make(dvbt2_pilotgenerator_cc_sptr self, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_misogroup_t misogroup, gr::dtv::dvbt2_equalization_t equalization, gr::dtv::dvbt2_bandwidth_t bandwidth, int vlength) -> dvbt2_pilotgenerator_cc_sptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, preamble, misogroup, equalization, bandwidth, vlength)


    def history(self):
        """history(dvbt2_pilotgenerator_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_pilotgenerator_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_pilotgenerator_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_pilotgenerator_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_pilotgenerator_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_pilotgenerator_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_pilotgenerator_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_pilotgenerator_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_pilotgenerator_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_pilotgenerator_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_pilotgenerator_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_pilotgenerator_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_pilotgenerator_cc_sptr self)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_pilotgenerator_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_pilotgenerator_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_pilotgenerator_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_pilotgenerator_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_pilotgenerator_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_pilotgenerator_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_pilotgenerator_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_pilotgenerator_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_pilotgenerator_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_pilotgenerator_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_pilotgenerator_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_pilotgenerator_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_pilotgenerator_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_pilotgenerator_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_pilotgenerator_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_pilotgenerator_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_pilotgenerator_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_pilotgenerator_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_pilotgenerator_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_pilotgenerator_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_pilotgenerator_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_pilotgenerator_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_pilotgenerator_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_pilotgenerator_cc_sptr self)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_pilotgenerator_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_pilotgenerator_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_pilotgenerator_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_pilotgenerator_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_pilotgenerator_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_pilotgenerator_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_pilotgenerator_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_pilotgenerator_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_pilotgenerator_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_pilotgenerator_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_pilotgenerator_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_pilotgenerator_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_pilotgenerator_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_pilotgenerator_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_pilotgenerator_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_pilotgenerator_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_pilotgenerator_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_pilotgenerator_cc_sptr_message_subscribers(self, which_port)

dvbt2_pilotgenerator_cc_sptr_swigregister = _dtv_swig.dvbt2_pilotgenerator_cc_sptr_swigregister
dvbt2_pilotgenerator_cc_sptr_swigregister(dvbt2_pilotgenerator_cc_sptr)


dvbt2_pilotgenerator_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_pilotgenerator_cc = dvbt2_pilotgenerator_cc.make;

class dvbt2_paprtr_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_paprtr_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_paprtr_cc)> self) -> dvbt2_paprtr_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_paprtr_cc)> self, dvbt2_paprtr_cc p) -> dvbt2_paprtr_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_paprtr_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_paprtr_cc_sptr self) -> dvbt2_paprtr_cc"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_paprtr_cc_sptr
    __del__ = lambda self: None

    def make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, vclip, iterations, vlength):
        """make(dvbt2_paprtr_cc_sptr self, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode, gr::dtv::dvbt2_version_t version, float vclip, int iterations, int vlength) -> dvbt2_paprtr_cc_sptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode, version, vclip, iterations, vlength)


    def history(self):
        """history(dvbt2_paprtr_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_paprtr_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_paprtr_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_paprtr_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_paprtr_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_paprtr_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_paprtr_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_paprtr_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_paprtr_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_paprtr_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_paprtr_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_paprtr_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_paprtr_cc_sptr self)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_paprtr_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_paprtr_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_paprtr_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_paprtr_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_paprtr_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_paprtr_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_paprtr_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_paprtr_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_paprtr_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_paprtr_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_paprtr_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_paprtr_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_paprtr_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_paprtr_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_paprtr_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_paprtr_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_paprtr_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_paprtr_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_paprtr_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_paprtr_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_paprtr_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_paprtr_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_paprtr_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_paprtr_cc_sptr self)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_paprtr_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_paprtr_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_paprtr_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_paprtr_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_paprtr_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_paprtr_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_paprtr_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_paprtr_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_paprtr_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_paprtr_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_paprtr_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_paprtr_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_paprtr_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_paprtr_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_paprtr_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_paprtr_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_paprtr_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_paprtr_cc_sptr_message_subscribers(self, which_port)

dvbt2_paprtr_cc_sptr_swigregister = _dtv_swig.dvbt2_paprtr_cc_sptr_swigregister
dvbt2_paprtr_cc_sptr_swigregister(dvbt2_paprtr_cc_sptr)


dvbt2_paprtr_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_paprtr_cc = dvbt2_paprtr_cc.make;

class dvbt2_p1insertion_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_p1insertion_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_p1insertion_cc)> self) -> dvbt2_p1insertion_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_p1insertion_cc)> self, dvbt2_p1insertion_cc p) -> dvbt2_p1insertion_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_p1insertion_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_p1insertion_cc_sptr self) -> dvbt2_p1insertion_cc"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_p1insertion_cc_sptr
    __del__ = lambda self: None

    def make(self, carriermode, fftsize, guardinterval, numdatasyms, preamble, showlevels, vclip):
        """make(dvbt2_p1insertion_cc_sptr self, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_preamble_t preamble, gr::dtv::dvbt2_showlevels_t showlevels, float vclip) -> dvbt2_p1insertion_cc_sptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_make(self, carriermode, fftsize, guardinterval, numdatasyms, preamble, showlevels, vclip)


    def history(self):
        """history(dvbt2_p1insertion_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_p1insertion_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_p1insertion_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_p1insertion_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_p1insertion_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_p1insertion_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_p1insertion_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_p1insertion_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_p1insertion_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_p1insertion_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_p1insertion_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_p1insertion_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_p1insertion_cc_sptr self)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_p1insertion_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_p1insertion_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_p1insertion_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_p1insertion_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_p1insertion_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_p1insertion_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_p1insertion_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_p1insertion_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_p1insertion_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_p1insertion_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_p1insertion_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_p1insertion_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_p1insertion_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_p1insertion_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_p1insertion_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_p1insertion_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_p1insertion_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_p1insertion_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_p1insertion_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_p1insertion_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_p1insertion_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_p1insertion_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_p1insertion_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_p1insertion_cc_sptr self)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_p1insertion_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_p1insertion_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_p1insertion_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_p1insertion_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_p1insertion_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_p1insertion_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_p1insertion_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_p1insertion_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_p1insertion_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_p1insertion_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_p1insertion_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_p1insertion_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_p1insertion_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_p1insertion_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_p1insertion_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_p1insertion_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_p1insertion_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_p1insertion_cc_sptr_message_subscribers(self, which_port)

dvbt2_p1insertion_cc_sptr_swigregister = _dtv_swig.dvbt2_p1insertion_cc_sptr_swigregister
dvbt2_p1insertion_cc_sptr_swigregister(dvbt2_p1insertion_cc_sptr)


dvbt2_p1insertion_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_p1insertion_cc = dvbt2_p1insertion_cc.make;

class dvbt2_miso_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt2_miso_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_miso_cc)> self) -> dvbt2_miso_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt2_miso_cc)> self, dvbt2_miso_cc p) -> dvbt2_miso_cc_sptr
        """
        this = _dtv_swig.new_dvbt2_miso_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt2_miso_cc_sptr self) -> dvbt2_miso_cc"""
        return _dtv_swig.dvbt2_miso_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt2_miso_cc_sptr
    __del__ = lambda self: None

    def make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode):
        """make(dvbt2_miso_cc_sptr self, gr::dtv::dvbt2_extended_carrier_t carriermode, gr::dtv::dvbt2_fftsize_t fftsize, gr::dtv::dvbt2_pilotpattern_t pilotpattern, gr::dtv::dvb_guardinterval_t guardinterval, int numdatasyms, gr::dtv::dvbt2_papr_t paprmode) -> dvbt2_miso_cc_sptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_make(self, carriermode, fftsize, pilotpattern, guardinterval, numdatasyms, paprmode)


    def history(self):
        """history(dvbt2_miso_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt2_miso_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbt2_miso_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt2_miso_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt2_miso_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt2_miso_cc_sptr self) -> double"""
        return _dtv_swig.dvbt2_miso_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt2_miso_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_miso_cc_sptr_start(self)


    def stop(self):
        """stop(dvbt2_miso_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_miso_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt2_miso_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt2_miso_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt2_miso_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt2_miso_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt2_miso_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt2_miso_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_miso_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt2_miso_cc_sptr self)"""
        return _dtv_swig.dvbt2_miso_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt2_miso_cc_sptr self) -> bool"""
        return _dtv_swig.dvbt2_miso_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt2_miso_cc_sptr self, int m)"""
        return _dtv_swig.dvbt2_miso_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt2_miso_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt2_miso_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_miso_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt2_miso_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt2_miso_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt2_miso_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt2_miso_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt2_miso_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt2_miso_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt2_miso_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt2_miso_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt2_miso_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt2_miso_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt2_miso_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt2_miso_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt2_miso_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt2_miso_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt2_miso_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt2_miso_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt2_miso_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt2_miso_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt2_miso_cc_sptr self) -> float"""
        return _dtv_swig.dvbt2_miso_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt2_miso_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt2_miso_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt2_miso_cc_sptr self)"""
        return _dtv_swig.dvbt2_miso_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt2_miso_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt2_miso_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt2_miso_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt2_miso_cc_sptr self) -> int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt2_miso_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt2_miso_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt2_miso_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_miso_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt2_miso_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_miso_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt2_miso_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt2_miso_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt2_miso_cc_sptr self) -> long"""
        return _dtv_swig.dvbt2_miso_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt2_miso_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt2_miso_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt2_miso_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt2_miso_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbt2_miso_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt2_miso_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbt2_miso_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt2_miso_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt2_miso_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt2_miso_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt2_miso_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt2_miso_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt2_miso_cc_sptr_message_subscribers(self, which_port)

dvbt2_miso_cc_sptr_swigregister = _dtv_swig.dvbt2_miso_cc_sptr_swigregister
dvbt2_miso_cc_sptr_swigregister(dvbt2_miso_cc_sptr)


dvbt2_miso_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt2_miso_cc = dvbt2_miso_cc.make;

class dvbs2_interleaver_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbs2_interleaver_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbs2_interleaver_bb)> self) -> dvbs2_interleaver_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbs2_interleaver_bb)> self, dvbs2_interleaver_bb p) -> dvbs2_interleaver_bb_sptr
        """
        this = _dtv_swig.new_dvbs2_interleaver_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbs2_interleaver_bb_sptr self) -> dvbs2_interleaver_bb"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbs2_interleaver_bb_sptr
    __del__ = lambda self: None

    def make(self, framesize, rate, constellation):
        """make(dvbs2_interleaver_bb_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation) -> dvbs2_interleaver_bb_sptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_make(self, framesize, rate, constellation)


    def history(self):
        """history(dvbs2_interleaver_bb_sptr self) -> unsigned int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbs2_interleaver_bb_sptr self, int which, int delay)
        declare_sample_delay(dvbs2_interleaver_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbs2_interleaver_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbs2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbs2_interleaver_bb_sptr self) -> double"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_relative_rate(self)


    def start(self):
        """start(dvbs2_interleaver_bb_sptr self) -> bool"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_start(self)


    def stop(self):
        """stop(dvbs2_interleaver_bb_sptr self) -> bool"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbs2_interleaver_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbs2_interleaver_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbs2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbs2_interleaver_bb_sptr self, int m)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbs2_interleaver_bb_sptr self)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbs2_interleaver_bb_sptr self) -> bool"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbs2_interleaver_bb_sptr self, int m)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbs2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbs2_interleaver_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbs2_interleaver_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbs2_interleaver_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbs2_interleaver_bb_sptr self, int i) -> long"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbs2_interleaver_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbs2_interleaver_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbs2_interleaver_bb_sptr self, int which) -> float
        pc_input_buffers_full(dvbs2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbs2_interleaver_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbs2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbs2_interleaver_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbs2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbs2_interleaver_bb_sptr self, int which) -> float
        pc_output_buffers_full(dvbs2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbs2_interleaver_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbs2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbs2_interleaver_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbs2_interleaver_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbs2_interleaver_bb_sptr self) -> float"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbs2_interleaver_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbs2_interleaver_bb_sptr self)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbs2_interleaver_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbs2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbs2_interleaver_bb_sptr self) -> int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbs2_interleaver_bb_sptr self, int priority) -> int"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbs2_interleaver_bb_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbs2_interleaver_bb_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbs2_interleaver_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbs2_interleaver_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbs2_interleaver_bb_sptr self) -> long"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbs2_interleaver_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbs2_interleaver_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbs2_interleaver_bb_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbs2_interleaver_bb_sptr self, std::string name)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbs2_interleaver_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbs2_interleaver_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbs2_interleaver_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbs2_interleaver_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_interleaver_bb_sptr_message_subscribers(self, which_port)

dvbs2_interleaver_bb_sptr_swigregister = _dtv_swig.dvbs2_interleaver_bb_sptr_swigregister
dvbs2_interleaver_bb_sptr_swigregister(dvbs2_interleaver_bb_sptr)


dvbs2_interleaver_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbs2_interleaver_bb = dvbs2_interleaver_bb.make;

class dvbs2_modulator_bc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbs2_modulator_bc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbs2_modulator_bc)> self) -> dvbs2_modulator_bc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbs2_modulator_bc)> self, dvbs2_modulator_bc p) -> dvbs2_modulator_bc_sptr
        """
        this = _dtv_swig.new_dvbs2_modulator_bc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbs2_modulator_bc_sptr self) -> dvbs2_modulator_bc"""
        return _dtv_swig.dvbs2_modulator_bc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbs2_modulator_bc_sptr
    __del__ = lambda self: None

    def make(self, framesize, rate, constellation, interpolation):
        """make(dvbs2_modulator_bc_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbs2_interpolation_t interpolation) -> dvbs2_modulator_bc_sptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_make(self, framesize, rate, constellation, interpolation)


    def history(self):
        """history(dvbs2_modulator_bc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbs2_modulator_bc_sptr self, int which, int delay)
        declare_sample_delay(dvbs2_modulator_bc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbs2_modulator_bc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbs2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbs2_modulator_bc_sptr self) -> double"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_relative_rate(self)


    def start(self):
        """start(dvbs2_modulator_bc_sptr self) -> bool"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_start(self)


    def stop(self):
        """stop(dvbs2_modulator_bc_sptr self) -> bool"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbs2_modulator_bc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbs2_modulator_bc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbs2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbs2_modulator_bc_sptr self, int m)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbs2_modulator_bc_sptr self)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbs2_modulator_bc_sptr self) -> bool"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbs2_modulator_bc_sptr self, int m)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbs2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbs2_modulator_bc_sptr self, int i) -> long"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbs2_modulator_bc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbs2_modulator_bc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbs2_modulator_bc_sptr self, int i) -> long"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbs2_modulator_bc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbs2_modulator_bc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbs2_modulator_bc_sptr self, int which) -> float
        pc_input_buffers_full(dvbs2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbs2_modulator_bc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbs2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbs2_modulator_bc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbs2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbs2_modulator_bc_sptr self, int which) -> float
        pc_output_buffers_full(dvbs2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbs2_modulator_bc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbs2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbs2_modulator_bc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbs2_modulator_bc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbs2_modulator_bc_sptr self) -> float"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbs2_modulator_bc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbs2_modulator_bc_sptr self)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbs2_modulator_bc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbs2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbs2_modulator_bc_sptr self) -> int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbs2_modulator_bc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbs2_modulator_bc_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbs2_modulator_bc_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbs2_modulator_bc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbs2_modulator_bc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbs2_modulator_bc_sptr self) -> long"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbs2_modulator_bc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbs2_modulator_bc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbs2_modulator_bc_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbs2_modulator_bc_sptr self, std::string name)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbs2_modulator_bc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbs2_modulator_bc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbs2_modulator_bc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbs2_modulator_bc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbs2_modulator_bc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_modulator_bc_sptr_message_subscribers(self, which_port)

dvbs2_modulator_bc_sptr_swigregister = _dtv_swig.dvbs2_modulator_bc_sptr_swigregister
dvbs2_modulator_bc_sptr_swigregister(dvbs2_modulator_bc_sptr)


dvbs2_modulator_bc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbs2_modulator_bc = dvbs2_modulator_bc.make;

class dvbs2_physical_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbs2_physical_cc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbs2_physical_cc)> self) -> dvbs2_physical_cc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbs2_physical_cc)> self, dvbs2_physical_cc p) -> dvbs2_physical_cc_sptr
        """
        this = _dtv_swig.new_dvbs2_physical_cc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbs2_physical_cc_sptr self) -> dvbs2_physical_cc"""
        return _dtv_swig.dvbs2_physical_cc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbs2_physical_cc_sptr
    __del__ = lambda self: None

    def make(self, framesize, rate, constellation, pilots, goldcode):
        """make(dvbs2_physical_cc_sptr self, gr::dtv::dvb_framesize_t framesize, gr::dtv::dvb_code_rate_t rate, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbs2_pilots_t pilots, int goldcode) -> dvbs2_physical_cc_sptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_make(self, framesize, rate, constellation, pilots, goldcode)


    def history(self):
        """history(dvbs2_physical_cc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbs2_physical_cc_sptr self, int which, int delay)
        declare_sample_delay(dvbs2_physical_cc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbs2_physical_cc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbs2_physical_cc_sptr self) -> int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbs2_physical_cc_sptr self) -> double"""
        return _dtv_swig.dvbs2_physical_cc_sptr_relative_rate(self)


    def start(self):
        """start(dvbs2_physical_cc_sptr self) -> bool"""
        return _dtv_swig.dvbs2_physical_cc_sptr_start(self)


    def stop(self):
        """stop(dvbs2_physical_cc_sptr self) -> bool"""
        return _dtv_swig.dvbs2_physical_cc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbs2_physical_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbs2_physical_cc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbs2_physical_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbs2_physical_cc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbs2_physical_cc_sptr self) -> int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbs2_physical_cc_sptr self, int m)"""
        return _dtv_swig.dvbs2_physical_cc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbs2_physical_cc_sptr self)"""
        return _dtv_swig.dvbs2_physical_cc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbs2_physical_cc_sptr self) -> bool"""
        return _dtv_swig.dvbs2_physical_cc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbs2_physical_cc_sptr self, int m)"""
        return _dtv_swig.dvbs2_physical_cc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbs2_physical_cc_sptr self) -> int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbs2_physical_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbs2_physical_cc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbs2_physical_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbs2_physical_cc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbs2_physical_cc_sptr self, int i) -> long"""
        return _dtv_swig.dvbs2_physical_cc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbs2_physical_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbs2_physical_cc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbs2_physical_cc_sptr self, int which) -> float
        pc_input_buffers_full(dvbs2_physical_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbs2_physical_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbs2_physical_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbs2_physical_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbs2_physical_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbs2_physical_cc_sptr self, int which) -> float
        pc_output_buffers_full(dvbs2_physical_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbs2_physical_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbs2_physical_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbs2_physical_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbs2_physical_cc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbs2_physical_cc_sptr self) -> float"""
        return _dtv_swig.dvbs2_physical_cc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbs2_physical_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbs2_physical_cc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbs2_physical_cc_sptr self)"""
        return _dtv_swig.dvbs2_physical_cc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbs2_physical_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbs2_physical_cc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbs2_physical_cc_sptr self) -> int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbs2_physical_cc_sptr self) -> int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbs2_physical_cc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbs2_physical_cc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbs2_physical_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_physical_cc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbs2_physical_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_physical_cc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbs2_physical_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbs2_physical_cc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbs2_physical_cc_sptr self) -> long"""
        return _dtv_swig.dvbs2_physical_cc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbs2_physical_cc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbs2_physical_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbs2_physical_cc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbs2_physical_cc_sptr self) -> std::string"""
        return _dtv_swig.dvbs2_physical_cc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbs2_physical_cc_sptr self, std::string name)"""
        return _dtv_swig.dvbs2_physical_cc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbs2_physical_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbs2_physical_cc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbs2_physical_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbs2_physical_cc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbs2_physical_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbs2_physical_cc_sptr_message_subscribers(self, which_port)

dvbs2_physical_cc_sptr_swigregister = _dtv_swig.dvbs2_physical_cc_sptr_swigregister
dvbs2_physical_cc_sptr_swigregister(dvbs2_physical_cc_sptr)


dvbs2_physical_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbs2_physical_cc = dvbs2_physical_cc.make;

class dvbt_energy_dispersal_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_energy_dispersal)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_energy_dispersal)> self) -> dvbt_energy_dispersal_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_energy_dispersal)> self, dvbt_energy_dispersal p) -> dvbt_energy_dispersal_sptr
        """
        this = _dtv_swig.new_dvbt_energy_dispersal_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_energy_dispersal_sptr self) -> dvbt_energy_dispersal"""
        return _dtv_swig.dvbt_energy_dispersal_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_energy_dispersal_sptr
    __del__ = lambda self: None

    def make(self, nsize):
        """make(dvbt_energy_dispersal_sptr self, int nsize) -> dvbt_energy_dispersal_sptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_make(self, nsize)


    def history(self):
        """history(dvbt_energy_dispersal_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_energy_dispersal_sptr self, int which, int delay)
        declare_sample_delay(dvbt_energy_dispersal_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_energy_dispersal_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_energy_dispersal_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_energy_dispersal_sptr self) -> double"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_energy_dispersal_sptr self) -> bool"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_start(self)


    def stop(self):
        """stop(dvbt_energy_dispersal_sptr self) -> bool"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_energy_dispersal_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_energy_dispersal_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_energy_dispersal_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_energy_dispersal_sptr self, int m)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_energy_dispersal_sptr self)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_energy_dispersal_sptr self) -> bool"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_energy_dispersal_sptr self, int m)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_energy_dispersal_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_energy_dispersal_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_energy_dispersal_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_energy_dispersal_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_energy_dispersal_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_energy_dispersal_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_energy_dispersal_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_energy_dispersal_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_energy_dispersal_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_energy_dispersal_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_energy_dispersal_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_energy_dispersal_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_energy_dispersal_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_energy_dispersal_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_energy_dispersal_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_energy_dispersal_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_energy_dispersal_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_energy_dispersal_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_energy_dispersal_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_energy_dispersal_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_energy_dispersal_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_energy_dispersal_sptr self)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_energy_dispersal_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_energy_dispersal_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_energy_dispersal_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_energy_dispersal_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_energy_dispersal_sptr self) -> std::string"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_energy_dispersal_sptr self) -> std::string"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_energy_dispersal_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_energy_dispersal_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_energy_dispersal_sptr self) -> long"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_energy_dispersal_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_energy_dispersal_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_energy_dispersal_sptr self) -> std::string"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_energy_dispersal_sptr self, std::string name)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_energy_dispersal_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_energy_dispersal_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_energy_dispersal_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_energy_dispersal_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_energy_dispersal_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_energy_dispersal_sptr_message_subscribers(self, which_port)

dvbt_energy_dispersal_sptr_swigregister = _dtv_swig.dvbt_energy_dispersal_sptr_swigregister
dvbt_energy_dispersal_sptr_swigregister(dvbt_energy_dispersal_sptr)


dvbt_energy_dispersal_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_energy_dispersal = dvbt_energy_dispersal.make;

class dvbt_reed_solomon_enc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_reed_solomon_enc)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_reed_solomon_enc)> self) -> dvbt_reed_solomon_enc_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_reed_solomon_enc)> self, dvbt_reed_solomon_enc p) -> dvbt_reed_solomon_enc_sptr
        """
        this = _dtv_swig.new_dvbt_reed_solomon_enc_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_reed_solomon_enc_sptr self) -> dvbt_reed_solomon_enc"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_reed_solomon_enc_sptr
    __del__ = lambda self: None

    def make(self, p, m, gfpoly, n, k, t, s, blocks):
        """make(dvbt_reed_solomon_enc_sptr self, int p, int m, int gfpoly, int n, int k, int t, int s, int blocks) -> dvbt_reed_solomon_enc_sptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_make(self, p, m, gfpoly, n, k, t, s, blocks)


    def history(self):
        """history(dvbt_reed_solomon_enc_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_reed_solomon_enc_sptr self, int which, int delay)
        declare_sample_delay(dvbt_reed_solomon_enc_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_reed_solomon_enc_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_reed_solomon_enc_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_reed_solomon_enc_sptr self) -> double"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_reed_solomon_enc_sptr self) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_start(self)


    def stop(self):
        """stop(dvbt_reed_solomon_enc_sptr self) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_reed_solomon_enc_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_reed_solomon_enc_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_reed_solomon_enc_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_reed_solomon_enc_sptr self, int m)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_reed_solomon_enc_sptr self)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_reed_solomon_enc_sptr self) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_reed_solomon_enc_sptr self, int m)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_reed_solomon_enc_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_reed_solomon_enc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_reed_solomon_enc_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_reed_solomon_enc_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_reed_solomon_enc_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_reed_solomon_enc_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_reed_solomon_enc_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_reed_solomon_enc_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_reed_solomon_enc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_reed_solomon_enc_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_reed_solomon_enc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_reed_solomon_enc_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_reed_solomon_enc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_reed_solomon_enc_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_reed_solomon_enc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_reed_solomon_enc_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_reed_solomon_enc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_reed_solomon_enc_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_reed_solomon_enc_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_reed_solomon_enc_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_reed_solomon_enc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_reed_solomon_enc_sptr self)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_reed_solomon_enc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_reed_solomon_enc_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_reed_solomon_enc_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_reed_solomon_enc_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_reed_solomon_enc_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_reed_solomon_enc_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_reed_solomon_enc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_reed_solomon_enc_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_reed_solomon_enc_sptr self) -> long"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_reed_solomon_enc_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_reed_solomon_enc_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_reed_solomon_enc_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_reed_solomon_enc_sptr self, std::string name)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_reed_solomon_enc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_reed_solomon_enc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_reed_solomon_enc_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_reed_solomon_enc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reed_solomon_enc_sptr_message_subscribers(self, which_port)

dvbt_reed_solomon_enc_sptr_swigregister = _dtv_swig.dvbt_reed_solomon_enc_sptr_swigregister
dvbt_reed_solomon_enc_sptr_swigregister(dvbt_reed_solomon_enc_sptr)


dvbt_reed_solomon_enc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_reed_solomon_enc = dvbt_reed_solomon_enc.make;

class dvbt_convolutional_interleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_convolutional_interleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_convolutional_interleaver)> self) -> dvbt_convolutional_interleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_convolutional_interleaver)> self, dvbt_convolutional_interleaver p) -> dvbt_convolutional_interleaver_sptr
        """
        this = _dtv_swig.new_dvbt_convolutional_interleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_convolutional_interleaver_sptr self) -> dvbt_convolutional_interleaver"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_convolutional_interleaver_sptr
    __del__ = lambda self: None

    def make(self, nsize, I, M):
        """make(dvbt_convolutional_interleaver_sptr self, int nsize, int I, int M) -> dvbt_convolutional_interleaver_sptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_make(self, nsize, I, M)


    def history(self):
        """history(dvbt_convolutional_interleaver_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_convolutional_interleaver_sptr self, int which, int delay)
        declare_sample_delay(dvbt_convolutional_interleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_convolutional_interleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_convolutional_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_convolutional_interleaver_sptr self) -> double"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_convolutional_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_start(self)


    def stop(self):
        """stop(dvbt_convolutional_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_convolutional_interleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_convolutional_interleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_convolutional_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_convolutional_interleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_convolutional_interleaver_sptr self)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_convolutional_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_convolutional_interleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_convolutional_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_convolutional_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_convolutional_interleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_convolutional_interleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_convolutional_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_convolutional_interleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_convolutional_interleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_convolutional_interleaver_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_convolutional_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_convolutional_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_convolutional_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_convolutional_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_convolutional_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_convolutional_interleaver_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_convolutional_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_convolutional_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_convolutional_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_convolutional_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_convolutional_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_convolutional_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_convolutional_interleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_convolutional_interleaver_sptr self)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_convolutional_interleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_convolutional_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_convolutional_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_convolutional_interleaver_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_convolutional_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_convolutional_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_convolutional_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_convolutional_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_convolutional_interleaver_sptr self) -> long"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_convolutional_interleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_convolutional_interleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_convolutional_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_convolutional_interleaver_sptr self, std::string name)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_convolutional_interleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_convolutional_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_convolutional_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_convolutional_interleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_convolutional_interleaver_sptr_message_subscribers(self, which_port)

dvbt_convolutional_interleaver_sptr_swigregister = _dtv_swig.dvbt_convolutional_interleaver_sptr_swigregister
dvbt_convolutional_interleaver_sptr_swigregister(dvbt_convolutional_interleaver_sptr)


dvbt_convolutional_interleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_convolutional_interleaver = dvbt_convolutional_interleaver.make;

class dvbt_inner_coder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_inner_coder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_inner_coder)> self) -> dvbt_inner_coder_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_inner_coder)> self, dvbt_inner_coder p) -> dvbt_inner_coder_sptr
        """
        this = _dtv_swig.new_dvbt_inner_coder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_inner_coder_sptr self) -> dvbt_inner_coder"""
        return _dtv_swig.dvbt_inner_coder_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_inner_coder_sptr
    __del__ = lambda self: None

    def make(self, ninput, noutput, constellation, hierarchy, coderate):
        """make(dvbt_inner_coder_sptr self, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t coderate) -> dvbt_inner_coder_sptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_make(self, ninput, noutput, constellation, hierarchy, coderate)


    def history(self):
        """history(dvbt_inner_coder_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_inner_coder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_inner_coder_sptr self, int which, int delay)
        declare_sample_delay(dvbt_inner_coder_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_inner_coder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_inner_coder_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_inner_coder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_inner_coder_sptr self) -> int"""
        return _dtv_swig.dvbt_inner_coder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_inner_coder_sptr self) -> double"""
        return _dtv_swig.dvbt_inner_coder_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_inner_coder_sptr self) -> bool"""
        return _dtv_swig.dvbt_inner_coder_sptr_start(self)


    def stop(self):
        """stop(dvbt_inner_coder_sptr self) -> bool"""
        return _dtv_swig.dvbt_inner_coder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_inner_coder_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_inner_coder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_inner_coder_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_inner_coder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_inner_coder_sptr self) -> int"""
        return _dtv_swig.dvbt_inner_coder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_inner_coder_sptr self, int m)"""
        return _dtv_swig.dvbt_inner_coder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_inner_coder_sptr self)"""
        return _dtv_swig.dvbt_inner_coder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_inner_coder_sptr self) -> bool"""
        return _dtv_swig.dvbt_inner_coder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_inner_coder_sptr self, int m)"""
        return _dtv_swig.dvbt_inner_coder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_inner_coder_sptr self) -> int"""
        return _dtv_swig.dvbt_inner_coder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_inner_coder_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_inner_coder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_inner_coder_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_inner_coder_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_inner_coder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_inner_coder_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_inner_coder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_inner_coder_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_inner_coder_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_inner_coder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_inner_coder_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_inner_coder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_inner_coder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_inner_coder_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_inner_coder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_inner_coder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_inner_coder_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_inner_coder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_inner_coder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_inner_coder_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_inner_coder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_inner_coder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_inner_coder_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_inner_coder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_inner_coder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_inner_coder_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_inner_coder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_inner_coder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_inner_coder_sptr self) -> float"""
        return _dtv_swig.dvbt_inner_coder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_inner_coder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_inner_coder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_inner_coder_sptr self)"""
        return _dtv_swig.dvbt_inner_coder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_inner_coder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_inner_coder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_inner_coder_sptr self) -> int"""
        return _dtv_swig.dvbt_inner_coder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_inner_coder_sptr self) -> int"""
        return _dtv_swig.dvbt_inner_coder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_inner_coder_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_inner_coder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_inner_coder_sptr self) -> std::string"""
        return _dtv_swig.dvbt_inner_coder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_inner_coder_sptr self) -> std::string"""
        return _dtv_swig.dvbt_inner_coder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_inner_coder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_inner_coder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_inner_coder_sptr self) -> long"""
        return _dtv_swig.dvbt_inner_coder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_inner_coder_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_inner_coder_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_inner_coder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_inner_coder_sptr self) -> std::string"""
        return _dtv_swig.dvbt_inner_coder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_inner_coder_sptr self, std::string name)"""
        return _dtv_swig.dvbt_inner_coder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_inner_coder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_inner_coder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_inner_coder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_inner_coder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_inner_coder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_inner_coder_sptr_message_subscribers(self, which_port)

dvbt_inner_coder_sptr_swigregister = _dtv_swig.dvbt_inner_coder_sptr_swigregister
dvbt_inner_coder_sptr_swigregister(dvbt_inner_coder_sptr)


dvbt_inner_coder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_inner_coder = dvbt_inner_coder.make;

class dvbt_bit_inner_interleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_bit_inner_interleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_bit_inner_interleaver)> self) -> dvbt_bit_inner_interleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_bit_inner_interleaver)> self, dvbt_bit_inner_interleaver p) -> dvbt_bit_inner_interleaver_sptr
        """
        this = _dtv_swig.new_dvbt_bit_inner_interleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_bit_inner_interleaver_sptr self) -> dvbt_bit_inner_interleaver"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_bit_inner_interleaver_sptr
    __del__ = lambda self: None

    def make(self, nsize, constellation, hierarchy, transmission):
        """make(dvbt_bit_inner_interleaver_sptr self, int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission) -> dvbt_bit_inner_interleaver_sptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_make(self, nsize, constellation, hierarchy, transmission)


    def history(self):
        """history(dvbt_bit_inner_interleaver_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_bit_inner_interleaver_sptr self, int which, int delay)
        declare_sample_delay(dvbt_bit_inner_interleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_bit_inner_interleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_bit_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_bit_inner_interleaver_sptr self) -> double"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_bit_inner_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_start(self)


    def stop(self):
        """stop(dvbt_bit_inner_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_bit_inner_interleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_bit_inner_interleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_bit_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_bit_inner_interleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_bit_inner_interleaver_sptr self)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_bit_inner_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_bit_inner_interleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_bit_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_bit_inner_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_bit_inner_interleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_bit_inner_interleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_bit_inner_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_bit_inner_interleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_bit_inner_interleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_bit_inner_interleaver_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_bit_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_bit_inner_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_bit_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_bit_inner_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_bit_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_bit_inner_interleaver_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_bit_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_bit_inner_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_bit_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_bit_inner_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_bit_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_bit_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_bit_inner_interleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_bit_inner_interleaver_sptr self)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_bit_inner_interleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_bit_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_bit_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_bit_inner_interleaver_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_bit_inner_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_bit_inner_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_bit_inner_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_bit_inner_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_bit_inner_interleaver_sptr self) -> long"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_bit_inner_interleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_bit_inner_interleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_bit_inner_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_bit_inner_interleaver_sptr self, std::string name)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_bit_inner_interleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_bit_inner_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_bit_inner_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_bit_inner_interleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_bit_inner_interleaver_sptr_message_subscribers(self, which_port)

dvbt_bit_inner_interleaver_sptr_swigregister = _dtv_swig.dvbt_bit_inner_interleaver_sptr_swigregister
dvbt_bit_inner_interleaver_sptr_swigregister(dvbt_bit_inner_interleaver_sptr)


dvbt_bit_inner_interleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_bit_inner_interleaver = dvbt_bit_inner_interleaver.make;

class dvbt_symbol_inner_interleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_symbol_inner_interleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_symbol_inner_interleaver)> self) -> dvbt_symbol_inner_interleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_symbol_inner_interleaver)> self, dvbt_symbol_inner_interleaver p) -> dvbt_symbol_inner_interleaver_sptr
        """
        this = _dtv_swig.new_dvbt_symbol_inner_interleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_symbol_inner_interleaver_sptr self) -> dvbt_symbol_inner_interleaver"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_symbol_inner_interleaver_sptr
    __del__ = lambda self: None

    def make(self, ninput, transmission, direction):
        """make(dvbt_symbol_inner_interleaver_sptr self, int ninput, gr::dtv::dvbt_transmission_mode_t transmission, int direction) -> dvbt_symbol_inner_interleaver_sptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_make(self, ninput, transmission, direction)


    def history(self):
        """history(dvbt_symbol_inner_interleaver_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_symbol_inner_interleaver_sptr self, int which, int delay)
        declare_sample_delay(dvbt_symbol_inner_interleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_symbol_inner_interleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_symbol_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_symbol_inner_interleaver_sptr self) -> double"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_symbol_inner_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_start(self)


    def stop(self):
        """stop(dvbt_symbol_inner_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_symbol_inner_interleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_symbol_inner_interleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_symbol_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_symbol_inner_interleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_symbol_inner_interleaver_sptr self)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_symbol_inner_interleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_symbol_inner_interleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_symbol_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_symbol_inner_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_symbol_inner_interleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_symbol_inner_interleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_symbol_inner_interleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_symbol_inner_interleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_symbol_inner_interleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_symbol_inner_interleaver_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_symbol_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_symbol_inner_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_symbol_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_symbol_inner_interleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_symbol_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_symbol_inner_interleaver_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_symbol_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_symbol_inner_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_symbol_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_symbol_inner_interleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_symbol_inner_interleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_symbol_inner_interleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_symbol_inner_interleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_symbol_inner_interleaver_sptr self)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_symbol_inner_interleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_symbol_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_symbol_inner_interleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_symbol_inner_interleaver_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_symbol_inner_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_symbol_inner_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_symbol_inner_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_symbol_inner_interleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_symbol_inner_interleaver_sptr self) -> long"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_symbol_inner_interleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_symbol_inner_interleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_symbol_inner_interleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_symbol_inner_interleaver_sptr self, std::string name)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_symbol_inner_interleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_symbol_inner_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_symbol_inner_interleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_symbol_inner_interleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_symbol_inner_interleaver_sptr_message_subscribers(self, which_port)

dvbt_symbol_inner_interleaver_sptr_swigregister = _dtv_swig.dvbt_symbol_inner_interleaver_sptr_swigregister
dvbt_symbol_inner_interleaver_sptr_swigregister(dvbt_symbol_inner_interleaver_sptr)


dvbt_symbol_inner_interleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_symbol_inner_interleaver = dvbt_symbol_inner_interleaver.make;

class dvbt_map_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_map)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_map)> self) -> dvbt_map_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_map)> self, dvbt_map p) -> dvbt_map_sptr
        """
        this = _dtv_swig.new_dvbt_map_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_map_sptr self) -> dvbt_map"""
        return _dtv_swig.dvbt_map_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_map_sptr
    __del__ = lambda self: None

    def make(self, nsize, constellation, hierarchy, transmission, gain):
        """make(dvbt_map_sptr self, int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission, float gain) -> dvbt_map_sptr"""
        return _dtv_swig.dvbt_map_sptr_make(self, nsize, constellation, hierarchy, transmission, gain)


    def history(self):
        """history(dvbt_map_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_map_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_map_sptr self, int which, int delay)
        declare_sample_delay(dvbt_map_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_map_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_map_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_map_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_map_sptr self) -> int"""
        return _dtv_swig.dvbt_map_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_map_sptr self) -> double"""
        return _dtv_swig.dvbt_map_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_map_sptr self) -> bool"""
        return _dtv_swig.dvbt_map_sptr_start(self)


    def stop(self):
        """stop(dvbt_map_sptr self) -> bool"""
        return _dtv_swig.dvbt_map_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_map_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_map_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_map_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_map_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_map_sptr self) -> int"""
        return _dtv_swig.dvbt_map_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_map_sptr self, int m)"""
        return _dtv_swig.dvbt_map_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_map_sptr self)"""
        return _dtv_swig.dvbt_map_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_map_sptr self) -> bool"""
        return _dtv_swig.dvbt_map_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_map_sptr self, int m)"""
        return _dtv_swig.dvbt_map_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_map_sptr self) -> int"""
        return _dtv_swig.dvbt_map_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_map_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_map_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_map_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_map_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_map_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_map_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_map_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_map_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_map_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_map_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_map_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_map_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_map_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_map_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_map_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_map_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_map_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_map_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_map_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_map_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_map_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_map_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_map_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_map_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_map_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_map_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_map_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_map_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_map_sptr self) -> float"""
        return _dtv_swig.dvbt_map_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_map_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_map_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_map_sptr self)"""
        return _dtv_swig.dvbt_map_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_map_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_map_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_map_sptr self) -> int"""
        return _dtv_swig.dvbt_map_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_map_sptr self) -> int"""
        return _dtv_swig.dvbt_map_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_map_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_map_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_map_sptr self) -> std::string"""
        return _dtv_swig.dvbt_map_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_map_sptr self) -> std::string"""
        return _dtv_swig.dvbt_map_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_map_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_map_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_map_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_map_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_map_sptr self) -> long"""
        return _dtv_swig.dvbt_map_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_map_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_map_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_map_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_map_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_map_sptr self) -> std::string"""
        return _dtv_swig.dvbt_map_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_map_sptr self, std::string name)"""
        return _dtv_swig.dvbt_map_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_map_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_map_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_map_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_map_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_map_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_map_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_map_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_map_sptr_message_subscribers(self, which_port)

dvbt_map_sptr_swigregister = _dtv_swig.dvbt_map_sptr_swigregister
dvbt_map_sptr_swigregister(dvbt_map_sptr)


dvbt_map_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_map = dvbt_map.make;

class dvbt_reference_signals_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_reference_signals)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_reference_signals)> self) -> dvbt_reference_signals_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_reference_signals)> self, dvbt_reference_signals p) -> dvbt_reference_signals_sptr
        """
        this = _dtv_swig.new_dvbt_reference_signals_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_reference_signals_sptr self) -> dvbt_reference_signals"""
        return _dtv_swig.dvbt_reference_signals_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_reference_signals_sptr
    __del__ = lambda self: None

    def make(self, itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id):
        """make(dvbt_reference_signals_sptr self, int itemsize, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t code_rate_HP, gr::dtv::dvb_code_rate_t code_rate_LP, gr::dtv::dvb_guardinterval_t guard_interval, gr::dtv::dvbt_transmission_mode_t transmission_mode, int include_cell_id, int cell_id) -> dvbt_reference_signals_sptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_make(self, itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id)


    def history(self):
        """history(dvbt_reference_signals_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_reference_signals_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_reference_signals_sptr self, int which, int delay)
        declare_sample_delay(dvbt_reference_signals_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_reference_signals_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_reference_signals_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_reference_signals_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_reference_signals_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_reference_signals_sptr self) -> double"""
        return _dtv_swig.dvbt_reference_signals_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_reference_signals_sptr self) -> bool"""
        return _dtv_swig.dvbt_reference_signals_sptr_start(self)


    def stop(self):
        """stop(dvbt_reference_signals_sptr self) -> bool"""
        return _dtv_swig.dvbt_reference_signals_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_reference_signals_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_reference_signals_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_reference_signals_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_reference_signals_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_reference_signals_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_reference_signals_sptr self, int m)"""
        return _dtv_swig.dvbt_reference_signals_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_reference_signals_sptr self)"""
        return _dtv_swig.dvbt_reference_signals_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_reference_signals_sptr self) -> bool"""
        return _dtv_swig.dvbt_reference_signals_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_reference_signals_sptr self, int m)"""
        return _dtv_swig.dvbt_reference_signals_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_reference_signals_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_reference_signals_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_reference_signals_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_reference_signals_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_reference_signals_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_reference_signals_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_reference_signals_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_reference_signals_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_reference_signals_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_reference_signals_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_reference_signals_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_reference_signals_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reference_signals_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_reference_signals_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reference_signals_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_reference_signals_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reference_signals_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_reference_signals_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reference_signals_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_reference_signals_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reference_signals_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_reference_signals_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reference_signals_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_reference_signals_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_reference_signals_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_reference_signals_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_reference_signals_sptr self)"""
        return _dtv_swig.dvbt_reference_signals_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_reference_signals_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_reference_signals_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_reference_signals_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_reference_signals_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_reference_signals_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_reference_signals_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_reference_signals_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reference_signals_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_reference_signals_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reference_signals_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_reference_signals_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_reference_signals_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_reference_signals_sptr self) -> long"""
        return _dtv_swig.dvbt_reference_signals_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_reference_signals_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_reference_signals_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_reference_signals_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_reference_signals_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reference_signals_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_reference_signals_sptr self, std::string name)"""
        return _dtv_swig.dvbt_reference_signals_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_reference_signals_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_reference_signals_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_reference_signals_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_reference_signals_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_reference_signals_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reference_signals_sptr_message_subscribers(self, which_port)

dvbt_reference_signals_sptr_swigregister = _dtv_swig.dvbt_reference_signals_sptr_swigregister
dvbt_reference_signals_sptr_swigregister(dvbt_reference_signals_sptr)


dvbt_reference_signals_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_reference_signals = dvbt_reference_signals.make;

class dvbt_ofdm_sym_acquisition_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_ofdm_sym_acquisition)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_ofdm_sym_acquisition)> self) -> dvbt_ofdm_sym_acquisition_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_ofdm_sym_acquisition)> self, dvbt_ofdm_sym_acquisition p) -> dvbt_ofdm_sym_acquisition_sptr
        """
        this = _dtv_swig.new_dvbt_ofdm_sym_acquisition_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_ofdm_sym_acquisition_sptr self) -> dvbt_ofdm_sym_acquisition"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_ofdm_sym_acquisition_sptr
    __del__ = lambda self: None

    def make(self, blocks, fft_length, occupied_tones, cp_length, snr):
        """make(dvbt_ofdm_sym_acquisition_sptr self, int blocks, int fft_length, int occupied_tones, int cp_length, float snr) -> dvbt_ofdm_sym_acquisition_sptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_make(self, blocks, fft_length, occupied_tones, cp_length, snr)


    def history(self):
        """history(dvbt_ofdm_sym_acquisition_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_ofdm_sym_acquisition_sptr self, int which, int delay)
        declare_sample_delay(dvbt_ofdm_sym_acquisition_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_ofdm_sym_acquisition_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_ofdm_sym_acquisition_sptr self) -> int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_ofdm_sym_acquisition_sptr self) -> double"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_ofdm_sym_acquisition_sptr self) -> bool"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_start(self)


    def stop(self):
        """stop(dvbt_ofdm_sym_acquisition_sptr self) -> bool"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_ofdm_sym_acquisition_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_ofdm_sym_acquisition_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_ofdm_sym_acquisition_sptr self) -> int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_ofdm_sym_acquisition_sptr self, int m)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_ofdm_sym_acquisition_sptr self)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_ofdm_sym_acquisition_sptr self) -> bool"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_ofdm_sym_acquisition_sptr self, int m)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_ofdm_sym_acquisition_sptr self) -> int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_ofdm_sym_acquisition_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_ofdm_sym_acquisition_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_ofdm_sym_acquisition_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_ofdm_sym_acquisition_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_ofdm_sym_acquisition_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_ofdm_sym_acquisition_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_ofdm_sym_acquisition_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_ofdm_sym_acquisition_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_ofdm_sym_acquisition_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_ofdm_sym_acquisition_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_ofdm_sym_acquisition_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_ofdm_sym_acquisition_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_ofdm_sym_acquisition_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_ofdm_sym_acquisition_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_ofdm_sym_acquisition_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_ofdm_sym_acquisition_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_ofdm_sym_acquisition_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_ofdm_sym_acquisition_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_ofdm_sym_acquisition_sptr self) -> float"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_ofdm_sym_acquisition_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_ofdm_sym_acquisition_sptr self)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_ofdm_sym_acquisition_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_ofdm_sym_acquisition_sptr self) -> int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_ofdm_sym_acquisition_sptr self) -> int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_ofdm_sym_acquisition_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_ofdm_sym_acquisition_sptr self) -> std::string"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_ofdm_sym_acquisition_sptr self) -> std::string"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_ofdm_sym_acquisition_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_ofdm_sym_acquisition_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_ofdm_sym_acquisition_sptr self) -> long"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_ofdm_sym_acquisition_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_ofdm_sym_acquisition_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_ofdm_sym_acquisition_sptr self) -> std::string"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_ofdm_sym_acquisition_sptr self, std::string name)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_ofdm_sym_acquisition_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_ofdm_sym_acquisition_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_ofdm_sym_acquisition_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_ofdm_sym_acquisition_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_message_subscribers(self, which_port)

dvbt_ofdm_sym_acquisition_sptr_swigregister = _dtv_swig.dvbt_ofdm_sym_acquisition_sptr_swigregister
dvbt_ofdm_sym_acquisition_sptr_swigregister(dvbt_ofdm_sym_acquisition_sptr)


dvbt_ofdm_sym_acquisition_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_ofdm_sym_acquisition = dvbt_ofdm_sym_acquisition.make;

class dvbt_demod_reference_signals_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_demod_reference_signals)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_demod_reference_signals)> self) -> dvbt_demod_reference_signals_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_demod_reference_signals)> self, dvbt_demod_reference_signals p) -> dvbt_demod_reference_signals_sptr
        """
        this = _dtv_swig.new_dvbt_demod_reference_signals_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_demod_reference_signals_sptr self) -> dvbt_demod_reference_signals"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_demod_reference_signals_sptr
    __del__ = lambda self: None

    def make(self, itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id):
        """make(dvbt_demod_reference_signals_sptr self, int itemsize, int ninput, int noutput, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t code_rate_HP, gr::dtv::dvb_code_rate_t code_rate_LP, gr::dtv::dvb_guardinterval_t guard_interval, gr::dtv::dvbt_transmission_mode_t transmission_mode, int include_cell_id, int cell_id) -> dvbt_demod_reference_signals_sptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_make(self, itemsize, ninput, noutput, constellation, hierarchy, code_rate_HP, code_rate_LP, guard_interval, transmission_mode, include_cell_id, cell_id)


    def history(self):
        """history(dvbt_demod_reference_signals_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_demod_reference_signals_sptr self, int which, int delay)
        declare_sample_delay(dvbt_demod_reference_signals_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_demod_reference_signals_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_demod_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_demod_reference_signals_sptr self) -> double"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_demod_reference_signals_sptr self) -> bool"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_start(self)


    def stop(self):
        """stop(dvbt_demod_reference_signals_sptr self) -> bool"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_demod_reference_signals_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_demod_reference_signals_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_demod_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_demod_reference_signals_sptr self, int m)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_demod_reference_signals_sptr self)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_demod_reference_signals_sptr self) -> bool"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_demod_reference_signals_sptr self, int m)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_demod_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_demod_reference_signals_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_demod_reference_signals_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_demod_reference_signals_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_demod_reference_signals_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_demod_reference_signals_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_demod_reference_signals_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_demod_reference_signals_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_demod_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_demod_reference_signals_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_demod_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_demod_reference_signals_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_demod_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_demod_reference_signals_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_demod_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_demod_reference_signals_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_demod_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_demod_reference_signals_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_demod_reference_signals_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_demod_reference_signals_sptr self) -> float"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_demod_reference_signals_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_demod_reference_signals_sptr self)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_demod_reference_signals_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_demod_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_demod_reference_signals_sptr self) -> int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_demod_reference_signals_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_demod_reference_signals_sptr self) -> std::string"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_demod_reference_signals_sptr self) -> std::string"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_demod_reference_signals_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_demod_reference_signals_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_demod_reference_signals_sptr self) -> long"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_demod_reference_signals_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_demod_reference_signals_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_demod_reference_signals_sptr self) -> std::string"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_demod_reference_signals_sptr self, std::string name)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_demod_reference_signals_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_demod_reference_signals_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_demod_reference_signals_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_demod_reference_signals_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_demod_reference_signals_sptr_message_subscribers(self, which_port)

dvbt_demod_reference_signals_sptr_swigregister = _dtv_swig.dvbt_demod_reference_signals_sptr_swigregister
dvbt_demod_reference_signals_sptr_swigregister(dvbt_demod_reference_signals_sptr)


dvbt_demod_reference_signals_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_demod_reference_signals = dvbt_demod_reference_signals.make;

class dvbt_demap_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_demap)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_demap)> self) -> dvbt_demap_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_demap)> self, dvbt_demap p) -> dvbt_demap_sptr
        """
        this = _dtv_swig.new_dvbt_demap_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_demap_sptr self) -> dvbt_demap"""
        return _dtv_swig.dvbt_demap_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_demap_sptr
    __del__ = lambda self: None

    def make(self, nsize, constellation, hierarchy, transmission, gain):
        """make(dvbt_demap_sptr self, int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission, float gain) -> dvbt_demap_sptr"""
        return _dtv_swig.dvbt_demap_sptr_make(self, nsize, constellation, hierarchy, transmission, gain)


    def history(self):
        """history(dvbt_demap_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_demap_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_demap_sptr self, int which, int delay)
        declare_sample_delay(dvbt_demap_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_demap_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_demap_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_demap_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_demap_sptr self) -> int"""
        return _dtv_swig.dvbt_demap_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_demap_sptr self) -> double"""
        return _dtv_swig.dvbt_demap_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_demap_sptr self) -> bool"""
        return _dtv_swig.dvbt_demap_sptr_start(self)


    def stop(self):
        """stop(dvbt_demap_sptr self) -> bool"""
        return _dtv_swig.dvbt_demap_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_demap_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_demap_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_demap_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_demap_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_demap_sptr self) -> int"""
        return _dtv_swig.dvbt_demap_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_demap_sptr self, int m)"""
        return _dtv_swig.dvbt_demap_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_demap_sptr self)"""
        return _dtv_swig.dvbt_demap_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_demap_sptr self) -> bool"""
        return _dtv_swig.dvbt_demap_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_demap_sptr self, int m)"""
        return _dtv_swig.dvbt_demap_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_demap_sptr self) -> int"""
        return _dtv_swig.dvbt_demap_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_demap_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_demap_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_demap_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_demap_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_demap_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_demap_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_demap_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_demap_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_demap_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_demap_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_demap_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_demap_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demap_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_demap_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_demap_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demap_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_demap_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_demap_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demap_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_demap_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_demap_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demap_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_demap_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_demap_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demap_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_demap_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_demap_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_demap_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_demap_sptr self) -> float"""
        return _dtv_swig.dvbt_demap_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_demap_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_demap_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_demap_sptr self)"""
        return _dtv_swig.dvbt_demap_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_demap_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_demap_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_demap_sptr self) -> int"""
        return _dtv_swig.dvbt_demap_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_demap_sptr self) -> int"""
        return _dtv_swig.dvbt_demap_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_demap_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_demap_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_demap_sptr self) -> std::string"""
        return _dtv_swig.dvbt_demap_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_demap_sptr self) -> std::string"""
        return _dtv_swig.dvbt_demap_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_demap_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_demap_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_demap_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_demap_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_demap_sptr self) -> long"""
        return _dtv_swig.dvbt_demap_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_demap_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_demap_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_demap_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_demap_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_demap_sptr self) -> std::string"""
        return _dtv_swig.dvbt_demap_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_demap_sptr self, std::string name)"""
        return _dtv_swig.dvbt_demap_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_demap_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_demap_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_demap_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_demap_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_demap_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_demap_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_demap_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_demap_sptr_message_subscribers(self, which_port)

dvbt_demap_sptr_swigregister = _dtv_swig.dvbt_demap_sptr_swigregister
dvbt_demap_sptr_swigregister(dvbt_demap_sptr)


dvbt_demap_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_demap = dvbt_demap.make;

class dvbt_bit_inner_deinterleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_bit_inner_deinterleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_bit_inner_deinterleaver)> self) -> dvbt_bit_inner_deinterleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_bit_inner_deinterleaver)> self, dvbt_bit_inner_deinterleaver p) -> dvbt_bit_inner_deinterleaver_sptr
        """
        this = _dtv_swig.new_dvbt_bit_inner_deinterleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_bit_inner_deinterleaver_sptr self) -> dvbt_bit_inner_deinterleaver"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_bit_inner_deinterleaver_sptr
    __del__ = lambda self: None

    def make(self, nsize, constellation, hierarchy, transmission):
        """make(dvbt_bit_inner_deinterleaver_sptr self, int nsize, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvbt_transmission_mode_t transmission) -> dvbt_bit_inner_deinterleaver_sptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_make(self, nsize, constellation, hierarchy, transmission)


    def history(self):
        """history(dvbt_bit_inner_deinterleaver_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_bit_inner_deinterleaver_sptr self, int which, int delay)
        declare_sample_delay(dvbt_bit_inner_deinterleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_bit_inner_deinterleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_bit_inner_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_bit_inner_deinterleaver_sptr self) -> double"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_bit_inner_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_start(self)


    def stop(self):
        """stop(dvbt_bit_inner_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_bit_inner_deinterleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_bit_inner_deinterleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_bit_inner_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_bit_inner_deinterleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_bit_inner_deinterleaver_sptr self)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_bit_inner_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_bit_inner_deinterleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_bit_inner_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_bit_inner_deinterleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_bit_inner_deinterleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_bit_inner_deinterleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_bit_inner_deinterleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_bit_inner_deinterleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_bit_inner_deinterleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_bit_inner_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_bit_inner_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_bit_inner_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_bit_inner_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_bit_inner_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_bit_inner_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_bit_inner_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_bit_inner_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_bit_inner_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_bit_inner_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_bit_inner_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_bit_inner_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_bit_inner_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_bit_inner_deinterleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_bit_inner_deinterleaver_sptr self)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_bit_inner_deinterleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_bit_inner_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_bit_inner_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_bit_inner_deinterleaver_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_bit_inner_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_bit_inner_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_bit_inner_deinterleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_bit_inner_deinterleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_bit_inner_deinterleaver_sptr self) -> long"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_bit_inner_deinterleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_bit_inner_deinterleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_bit_inner_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_bit_inner_deinterleaver_sptr self, std::string name)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_bit_inner_deinterleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_bit_inner_deinterleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_bit_inner_deinterleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_bit_inner_deinterleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_message_subscribers(self, which_port)

dvbt_bit_inner_deinterleaver_sptr_swigregister = _dtv_swig.dvbt_bit_inner_deinterleaver_sptr_swigregister
dvbt_bit_inner_deinterleaver_sptr_swigregister(dvbt_bit_inner_deinterleaver_sptr)


dvbt_bit_inner_deinterleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_bit_inner_deinterleaver = dvbt_bit_inner_deinterleaver.make;

class dvbt_viterbi_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_viterbi_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_viterbi_decoder)> self) -> dvbt_viterbi_decoder_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_viterbi_decoder)> self, dvbt_viterbi_decoder p) -> dvbt_viterbi_decoder_sptr
        """
        this = _dtv_swig.new_dvbt_viterbi_decoder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_viterbi_decoder_sptr self) -> dvbt_viterbi_decoder"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_viterbi_decoder_sptr
    __del__ = lambda self: None

    def make(self, constellation, hierarchy, coderate, bsize):
        """make(dvbt_viterbi_decoder_sptr self, gr::dtv::dvb_constellation_t constellation, gr::dtv::dvbt_hierarchy_t hierarchy, gr::dtv::dvb_code_rate_t coderate, int bsize) -> dvbt_viterbi_decoder_sptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_make(self, constellation, hierarchy, coderate, bsize)


    def history(self):
        """history(dvbt_viterbi_decoder_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_viterbi_decoder_sptr self, int which, int delay)
        declare_sample_delay(dvbt_viterbi_decoder_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_viterbi_decoder_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_viterbi_decoder_sptr self) -> double"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_viterbi_decoder_sptr self) -> bool"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_start(self)


    def stop(self):
        """stop(dvbt_viterbi_decoder_sptr self) -> bool"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_viterbi_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_viterbi_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_viterbi_decoder_sptr self, int m)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_viterbi_decoder_sptr self)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_viterbi_decoder_sptr self) -> bool"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_viterbi_decoder_sptr self, int m)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_viterbi_decoder_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_viterbi_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_viterbi_decoder_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_viterbi_decoder_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_viterbi_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_viterbi_decoder_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_viterbi_decoder_sptr self) -> float"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_viterbi_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_viterbi_decoder_sptr self)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_viterbi_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_viterbi_decoder_sptr self) -> int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_viterbi_decoder_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_viterbi_decoder_sptr self) -> std::string"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_viterbi_decoder_sptr self) -> std::string"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_viterbi_decoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_viterbi_decoder_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_viterbi_decoder_sptr self) -> long"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_viterbi_decoder_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_viterbi_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_viterbi_decoder_sptr self) -> std::string"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_viterbi_decoder_sptr self, std::string name)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_viterbi_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_viterbi_decoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_viterbi_decoder_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_viterbi_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_viterbi_decoder_sptr_message_subscribers(self, which_port)

dvbt_viterbi_decoder_sptr_swigregister = _dtv_swig.dvbt_viterbi_decoder_sptr_swigregister
dvbt_viterbi_decoder_sptr_swigregister(dvbt_viterbi_decoder_sptr)


dvbt_viterbi_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_viterbi_decoder = dvbt_viterbi_decoder.make;

class dvbt_convolutional_deinterleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_convolutional_deinterleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_convolutional_deinterleaver)> self) -> dvbt_convolutional_deinterleaver_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_convolutional_deinterleaver)> self, dvbt_convolutional_deinterleaver p) -> dvbt_convolutional_deinterleaver_sptr
        """
        this = _dtv_swig.new_dvbt_convolutional_deinterleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_convolutional_deinterleaver_sptr self) -> dvbt_convolutional_deinterleaver"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_convolutional_deinterleaver_sptr
    __del__ = lambda self: None

    def make(self, nsize, I, M):
        """make(dvbt_convolutional_deinterleaver_sptr self, int nsize, int I, int M) -> dvbt_convolutional_deinterleaver_sptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_make(self, nsize, I, M)


    def history(self):
        """history(dvbt_convolutional_deinterleaver_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_convolutional_deinterleaver_sptr self, int which, int delay)
        declare_sample_delay(dvbt_convolutional_deinterleaver_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_convolutional_deinterleaver_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_convolutional_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_convolutional_deinterleaver_sptr self) -> double"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_convolutional_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_start(self)


    def stop(self):
        """stop(dvbt_convolutional_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_convolutional_deinterleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_convolutional_deinterleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_convolutional_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_convolutional_deinterleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_convolutional_deinterleaver_sptr self)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_convolutional_deinterleaver_sptr self) -> bool"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_convolutional_deinterleaver_sptr self, int m)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_convolutional_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_convolutional_deinterleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_convolutional_deinterleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_convolutional_deinterleaver_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_convolutional_deinterleaver_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_convolutional_deinterleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_convolutional_deinterleaver_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_convolutional_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_convolutional_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_convolutional_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_convolutional_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_convolutional_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_convolutional_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_convolutional_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_convolutional_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_convolutional_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_convolutional_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_convolutional_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_convolutional_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_convolutional_deinterleaver_sptr self) -> float"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_convolutional_deinterleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_convolutional_deinterleaver_sptr self)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_convolutional_deinterleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_convolutional_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_convolutional_deinterleaver_sptr self) -> int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_convolutional_deinterleaver_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_convolutional_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_convolutional_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_convolutional_deinterleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_convolutional_deinterleaver_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_convolutional_deinterleaver_sptr self) -> long"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_convolutional_deinterleaver_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_convolutional_deinterleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_convolutional_deinterleaver_sptr self) -> std::string"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_convolutional_deinterleaver_sptr self, std::string name)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_convolutional_deinterleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_convolutional_deinterleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_convolutional_deinterleaver_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_convolutional_deinterleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_convolutional_deinterleaver_sptr_message_subscribers(self, which_port)

dvbt_convolutional_deinterleaver_sptr_swigregister = _dtv_swig.dvbt_convolutional_deinterleaver_sptr_swigregister
dvbt_convolutional_deinterleaver_sptr_swigregister(dvbt_convolutional_deinterleaver_sptr)


dvbt_convolutional_deinterleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_convolutional_deinterleaver = dvbt_convolutional_deinterleaver.make;

class dvbt_reed_solomon_dec_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_reed_solomon_dec)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_reed_solomon_dec)> self) -> dvbt_reed_solomon_dec_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_reed_solomon_dec)> self, dvbt_reed_solomon_dec p) -> dvbt_reed_solomon_dec_sptr
        """
        this = _dtv_swig.new_dvbt_reed_solomon_dec_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_reed_solomon_dec_sptr self) -> dvbt_reed_solomon_dec"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_reed_solomon_dec_sptr
    __del__ = lambda self: None

    def make(self, p, m, gfpoly, n, k, t, s, blocks):
        """make(dvbt_reed_solomon_dec_sptr self, int p, int m, int gfpoly, int n, int k, int t, int s, int blocks) -> dvbt_reed_solomon_dec_sptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_make(self, p, m, gfpoly, n, k, t, s, blocks)


    def history(self):
        """history(dvbt_reed_solomon_dec_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_reed_solomon_dec_sptr self, int which, int delay)
        declare_sample_delay(dvbt_reed_solomon_dec_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_reed_solomon_dec_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_reed_solomon_dec_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_reed_solomon_dec_sptr self) -> double"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_reed_solomon_dec_sptr self) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_start(self)


    def stop(self):
        """stop(dvbt_reed_solomon_dec_sptr self) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_reed_solomon_dec_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_reed_solomon_dec_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_reed_solomon_dec_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_reed_solomon_dec_sptr self, int m)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_reed_solomon_dec_sptr self)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_reed_solomon_dec_sptr self) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_reed_solomon_dec_sptr self, int m)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_reed_solomon_dec_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_reed_solomon_dec_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_reed_solomon_dec_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_reed_solomon_dec_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_reed_solomon_dec_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_reed_solomon_dec_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_reed_solomon_dec_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_reed_solomon_dec_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_reed_solomon_dec_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_reed_solomon_dec_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_reed_solomon_dec_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_reed_solomon_dec_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_reed_solomon_dec_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_reed_solomon_dec_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_reed_solomon_dec_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_reed_solomon_dec_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_reed_solomon_dec_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_reed_solomon_dec_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_reed_solomon_dec_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_reed_solomon_dec_sptr self) -> float"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_reed_solomon_dec_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_reed_solomon_dec_sptr self)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_reed_solomon_dec_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_reed_solomon_dec_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_reed_solomon_dec_sptr self) -> int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_reed_solomon_dec_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_reed_solomon_dec_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_reed_solomon_dec_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_reed_solomon_dec_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_reed_solomon_dec_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_reed_solomon_dec_sptr self) -> long"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_reed_solomon_dec_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_reed_solomon_dec_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_reed_solomon_dec_sptr self) -> std::string"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_reed_solomon_dec_sptr self, std::string name)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_reed_solomon_dec_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_reed_solomon_dec_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_reed_solomon_dec_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_reed_solomon_dec_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_reed_solomon_dec_sptr_message_subscribers(self, which_port)

dvbt_reed_solomon_dec_sptr_swigregister = _dtv_swig.dvbt_reed_solomon_dec_sptr_swigregister
dvbt_reed_solomon_dec_sptr_swigregister(dvbt_reed_solomon_dec_sptr)


dvbt_reed_solomon_dec_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_reed_solomon_dec = dvbt_reed_solomon_dec.make;

class dvbt_energy_descramble_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::dvbt_energy_descramble)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::dvbt_energy_descramble)> self) -> dvbt_energy_descramble_sptr
        __init__(boost::shared_ptr<(gr::dtv::dvbt_energy_descramble)> self, dvbt_energy_descramble p) -> dvbt_energy_descramble_sptr
        """
        this = _dtv_swig.new_dvbt_energy_descramble_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(dvbt_energy_descramble_sptr self) -> dvbt_energy_descramble"""
        return _dtv_swig.dvbt_energy_descramble_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_dvbt_energy_descramble_sptr
    __del__ = lambda self: None

    def make(self, nblocks):
        """make(dvbt_energy_descramble_sptr self, int nblocks) -> dvbt_energy_descramble_sptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_make(self, nblocks)


    def history(self):
        """history(dvbt_energy_descramble_sptr self) -> unsigned int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(dvbt_energy_descramble_sptr self, int which, int delay)
        declare_sample_delay(dvbt_energy_descramble_sptr self, unsigned int delay)
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(dvbt_energy_descramble_sptr self, int which) -> unsigned int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(dvbt_energy_descramble_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(dvbt_energy_descramble_sptr self) -> double"""
        return _dtv_swig.dvbt_energy_descramble_sptr_relative_rate(self)


    def start(self):
        """start(dvbt_energy_descramble_sptr self) -> bool"""
        return _dtv_swig.dvbt_energy_descramble_sptr_start(self)


    def stop(self):
        """stop(dvbt_energy_descramble_sptr self) -> bool"""
        return _dtv_swig.dvbt_energy_descramble_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(dvbt_energy_descramble_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.dvbt_energy_descramble_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(dvbt_energy_descramble_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.dvbt_energy_descramble_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(dvbt_energy_descramble_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(dvbt_energy_descramble_sptr self, int m)"""
        return _dtv_swig.dvbt_energy_descramble_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(dvbt_energy_descramble_sptr self)"""
        return _dtv_swig.dvbt_energy_descramble_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(dvbt_energy_descramble_sptr self) -> bool"""
        return _dtv_swig.dvbt_energy_descramble_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(dvbt_energy_descramble_sptr self, int m)"""
        return _dtv_swig.dvbt_energy_descramble_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(dvbt_energy_descramble_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(dvbt_energy_descramble_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_energy_descramble_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(dvbt_energy_descramble_sptr self, long max_output_buffer)
        set_max_output_buffer(dvbt_energy_descramble_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(dvbt_energy_descramble_sptr self, int i) -> long"""
        return _dtv_swig.dvbt_energy_descramble_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(dvbt_energy_descramble_sptr self, long min_output_buffer)
        set_min_output_buffer(dvbt_energy_descramble_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(dvbt_energy_descramble_sptr self, int which) -> float
        pc_input_buffers_full(dvbt_energy_descramble_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(dvbt_energy_descramble_sptr self, int which) -> float
        pc_input_buffers_full_avg(dvbt_energy_descramble_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(dvbt_energy_descramble_sptr self, int which) -> float
        pc_input_buffers_full_var(dvbt_energy_descramble_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(dvbt_energy_descramble_sptr self, int which) -> float
        pc_output_buffers_full(dvbt_energy_descramble_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(dvbt_energy_descramble_sptr self, int which) -> float
        pc_output_buffers_full_avg(dvbt_energy_descramble_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(dvbt_energy_descramble_sptr self, int which) -> float
        pc_output_buffers_full_var(dvbt_energy_descramble_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(dvbt_energy_descramble_sptr self) -> float"""
        return _dtv_swig.dvbt_energy_descramble_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(dvbt_energy_descramble_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.dvbt_energy_descramble_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(dvbt_energy_descramble_sptr self)"""
        return _dtv_swig.dvbt_energy_descramble_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(dvbt_energy_descramble_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.dvbt_energy_descramble_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(dvbt_energy_descramble_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(dvbt_energy_descramble_sptr self) -> int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(dvbt_energy_descramble_sptr self, int priority) -> int"""
        return _dtv_swig.dvbt_energy_descramble_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(dvbt_energy_descramble_sptr self) -> std::string"""
        return _dtv_swig.dvbt_energy_descramble_sptr_name(self)


    def symbol_name(self):
        """symbol_name(dvbt_energy_descramble_sptr self) -> std::string"""
        return _dtv_swig.dvbt_energy_descramble_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(dvbt_energy_descramble_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(dvbt_energy_descramble_sptr self) -> io_signature_sptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(dvbt_energy_descramble_sptr self) -> long"""
        return _dtv_swig.dvbt_energy_descramble_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(dvbt_energy_descramble_sptr self) -> basic_block_sptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(dvbt_energy_descramble_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.dvbt_energy_descramble_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(dvbt_energy_descramble_sptr self) -> std::string"""
        return _dtv_swig.dvbt_energy_descramble_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(dvbt_energy_descramble_sptr self, std::string name)"""
        return _dtv_swig.dvbt_energy_descramble_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(dvbt_energy_descramble_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.dvbt_energy_descramble_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(dvbt_energy_descramble_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(dvbt_energy_descramble_sptr self) -> swig_int_ptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(dvbt_energy_descramble_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.dvbt_energy_descramble_sptr_message_subscribers(self, which_port)

dvbt_energy_descramble_sptr_swigregister = _dtv_swig.dvbt_energy_descramble_sptr_swigregister
dvbt_energy_descramble_sptr_swigregister(dvbt_energy_descramble_sptr)


dvbt_energy_descramble_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
dvbt_energy_descramble = dvbt_energy_descramble.make;

class catv_transport_framing_enc_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::catv_transport_framing_enc_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::catv_transport_framing_enc_bb)> self) -> catv_transport_framing_enc_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::catv_transport_framing_enc_bb)> self, catv_transport_framing_enc_bb p) -> catv_transport_framing_enc_bb_sptr
        """
        this = _dtv_swig.new_catv_transport_framing_enc_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(catv_transport_framing_enc_bb_sptr self) -> catv_transport_framing_enc_bb"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_catv_transport_framing_enc_bb_sptr
    __del__ = lambda self: None

    def make(self):
        """make(catv_transport_framing_enc_bb_sptr self) -> catv_transport_framing_enc_bb_sptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_make(self)


    def history(self):
        """history(catv_transport_framing_enc_bb_sptr self) -> unsigned int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(catv_transport_framing_enc_bb_sptr self, int which, int delay)
        declare_sample_delay(catv_transport_framing_enc_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(catv_transport_framing_enc_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(catv_transport_framing_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(catv_transport_framing_enc_bb_sptr self) -> double"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_relative_rate(self)


    def start(self):
        """start(catv_transport_framing_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_start(self)


    def stop(self):
        """stop(catv_transport_framing_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(catv_transport_framing_enc_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(catv_transport_framing_enc_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(catv_transport_framing_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(catv_transport_framing_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(catv_transport_framing_enc_bb_sptr self)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(catv_transport_framing_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(catv_transport_framing_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(catv_transport_framing_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(catv_transport_framing_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(catv_transport_framing_enc_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(catv_transport_framing_enc_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(catv_transport_framing_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(catv_transport_framing_enc_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(catv_transport_framing_enc_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(catv_transport_framing_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full(catv_transport_framing_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(catv_transport_framing_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(catv_transport_framing_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(catv_transport_framing_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(catv_transport_framing_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(catv_transport_framing_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full(catv_transport_framing_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(catv_transport_framing_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(catv_transport_framing_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(catv_transport_framing_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(catv_transport_framing_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(catv_transport_framing_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(catv_transport_framing_enc_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(catv_transport_framing_enc_bb_sptr self)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(catv_transport_framing_enc_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(catv_transport_framing_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(catv_transport_framing_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(catv_transport_framing_enc_bb_sptr self, int priority) -> int"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(catv_transport_framing_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(catv_transport_framing_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(catv_transport_framing_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(catv_transport_framing_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(catv_transport_framing_enc_bb_sptr self) -> long"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(catv_transport_framing_enc_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(catv_transport_framing_enc_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(catv_transport_framing_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(catv_transport_framing_enc_bb_sptr self, std::string name)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(catv_transport_framing_enc_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(catv_transport_framing_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(catv_transport_framing_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(catv_transport_framing_enc_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.catv_transport_framing_enc_bb_sptr_message_subscribers(self, which_port)

catv_transport_framing_enc_bb_sptr_swigregister = _dtv_swig.catv_transport_framing_enc_bb_sptr_swigregister
catv_transport_framing_enc_bb_sptr_swigregister(catv_transport_framing_enc_bb_sptr)


catv_transport_framing_enc_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
catv_transport_framing_enc_bb = catv_transport_framing_enc_bb.make;

class catv_reed_solomon_enc_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::catv_reed_solomon_enc_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::catv_reed_solomon_enc_bb)> self) -> catv_reed_solomon_enc_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::catv_reed_solomon_enc_bb)> self, catv_reed_solomon_enc_bb p) -> catv_reed_solomon_enc_bb_sptr
        """
        this = _dtv_swig.new_catv_reed_solomon_enc_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(catv_reed_solomon_enc_bb_sptr self) -> catv_reed_solomon_enc_bb"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_catv_reed_solomon_enc_bb_sptr
    __del__ = lambda self: None

    def make(self):
        """make(catv_reed_solomon_enc_bb_sptr self) -> catv_reed_solomon_enc_bb_sptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_make(self)


    def history(self):
        """history(catv_reed_solomon_enc_bb_sptr self) -> unsigned int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(catv_reed_solomon_enc_bb_sptr self, int which, int delay)
        declare_sample_delay(catv_reed_solomon_enc_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(catv_reed_solomon_enc_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(catv_reed_solomon_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(catv_reed_solomon_enc_bb_sptr self) -> double"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_relative_rate(self)


    def start(self):
        """start(catv_reed_solomon_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_start(self)


    def stop(self):
        """stop(catv_reed_solomon_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(catv_reed_solomon_enc_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(catv_reed_solomon_enc_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(catv_reed_solomon_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(catv_reed_solomon_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(catv_reed_solomon_enc_bb_sptr self)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(catv_reed_solomon_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(catv_reed_solomon_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(catv_reed_solomon_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(catv_reed_solomon_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(catv_reed_solomon_enc_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(catv_reed_solomon_enc_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(catv_reed_solomon_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(catv_reed_solomon_enc_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(catv_reed_solomon_enc_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(catv_reed_solomon_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full(catv_reed_solomon_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(catv_reed_solomon_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(catv_reed_solomon_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(catv_reed_solomon_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(catv_reed_solomon_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(catv_reed_solomon_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full(catv_reed_solomon_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(catv_reed_solomon_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(catv_reed_solomon_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(catv_reed_solomon_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(catv_reed_solomon_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(catv_reed_solomon_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(catv_reed_solomon_enc_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(catv_reed_solomon_enc_bb_sptr self)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(catv_reed_solomon_enc_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(catv_reed_solomon_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(catv_reed_solomon_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(catv_reed_solomon_enc_bb_sptr self, int priority) -> int"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(catv_reed_solomon_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(catv_reed_solomon_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(catv_reed_solomon_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(catv_reed_solomon_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(catv_reed_solomon_enc_bb_sptr self) -> long"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(catv_reed_solomon_enc_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(catv_reed_solomon_enc_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(catv_reed_solomon_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(catv_reed_solomon_enc_bb_sptr self, std::string name)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(catv_reed_solomon_enc_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(catv_reed_solomon_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(catv_reed_solomon_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(catv_reed_solomon_enc_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.catv_reed_solomon_enc_bb_sptr_message_subscribers(self, which_port)

catv_reed_solomon_enc_bb_sptr_swigregister = _dtv_swig.catv_reed_solomon_enc_bb_sptr_swigregister
catv_reed_solomon_enc_bb_sptr_swigregister(catv_reed_solomon_enc_bb_sptr)


catv_reed_solomon_enc_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
catv_reed_solomon_enc_bb = catv_reed_solomon_enc_bb.make;

class catv_randomizer_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::catv_randomizer_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::catv_randomizer_bb)> self) -> catv_randomizer_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::catv_randomizer_bb)> self, catv_randomizer_bb p) -> catv_randomizer_bb_sptr
        """
        this = _dtv_swig.new_catv_randomizer_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(catv_randomizer_bb_sptr self) -> catv_randomizer_bb"""
        return _dtv_swig.catv_randomizer_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_catv_randomizer_bb_sptr
    __del__ = lambda self: None

    def make(self):
        """make(catv_randomizer_bb_sptr self) -> catv_randomizer_bb_sptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_make(self)


    def history(self):
        """history(catv_randomizer_bb_sptr self) -> unsigned int"""
        return _dtv_swig.catv_randomizer_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(catv_randomizer_bb_sptr self, int which, int delay)
        declare_sample_delay(catv_randomizer_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.catv_randomizer_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(catv_randomizer_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.catv_randomizer_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(catv_randomizer_bb_sptr self) -> int"""
        return _dtv_swig.catv_randomizer_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(catv_randomizer_bb_sptr self) -> double"""
        return _dtv_swig.catv_randomizer_bb_sptr_relative_rate(self)


    def start(self):
        """start(catv_randomizer_bb_sptr self) -> bool"""
        return _dtv_swig.catv_randomizer_bb_sptr_start(self)


    def stop(self):
        """stop(catv_randomizer_bb_sptr self) -> bool"""
        return _dtv_swig.catv_randomizer_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(catv_randomizer_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.catv_randomizer_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(catv_randomizer_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.catv_randomizer_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(catv_randomizer_bb_sptr self) -> int"""
        return _dtv_swig.catv_randomizer_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(catv_randomizer_bb_sptr self, int m)"""
        return _dtv_swig.catv_randomizer_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(catv_randomizer_bb_sptr self)"""
        return _dtv_swig.catv_randomizer_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(catv_randomizer_bb_sptr self) -> bool"""
        return _dtv_swig.catv_randomizer_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(catv_randomizer_bb_sptr self, int m)"""
        return _dtv_swig.catv_randomizer_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(catv_randomizer_bb_sptr self) -> int"""
        return _dtv_swig.catv_randomizer_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(catv_randomizer_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_randomizer_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(catv_randomizer_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(catv_randomizer_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.catv_randomizer_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(catv_randomizer_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_randomizer_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(catv_randomizer_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(catv_randomizer_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.catv_randomizer_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(catv_randomizer_bb_sptr self, int which) -> float
        pc_input_buffers_full(catv_randomizer_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_randomizer_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(catv_randomizer_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(catv_randomizer_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_randomizer_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(catv_randomizer_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(catv_randomizer_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_randomizer_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(catv_randomizer_bb_sptr self, int which) -> float
        pc_output_buffers_full(catv_randomizer_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_randomizer_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(catv_randomizer_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(catv_randomizer_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_randomizer_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(catv_randomizer_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(catv_randomizer_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_randomizer_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(catv_randomizer_bb_sptr self) -> float"""
        return _dtv_swig.catv_randomizer_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(catv_randomizer_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.catv_randomizer_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(catv_randomizer_bb_sptr self)"""
        return _dtv_swig.catv_randomizer_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(catv_randomizer_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.catv_randomizer_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(catv_randomizer_bb_sptr self) -> int"""
        return _dtv_swig.catv_randomizer_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(catv_randomizer_bb_sptr self) -> int"""
        return _dtv_swig.catv_randomizer_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(catv_randomizer_bb_sptr self, int priority) -> int"""
        return _dtv_swig.catv_randomizer_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(catv_randomizer_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_randomizer_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(catv_randomizer_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_randomizer_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(catv_randomizer_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(catv_randomizer_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(catv_randomizer_bb_sptr self) -> long"""
        return _dtv_swig.catv_randomizer_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(catv_randomizer_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(catv_randomizer_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.catv_randomizer_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(catv_randomizer_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_randomizer_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(catv_randomizer_bb_sptr self, std::string name)"""
        return _dtv_swig.catv_randomizer_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(catv_randomizer_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.catv_randomizer_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(catv_randomizer_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(catv_randomizer_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(catv_randomizer_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.catv_randomizer_bb_sptr_message_subscribers(self, which_port)

catv_randomizer_bb_sptr_swigregister = _dtv_swig.catv_randomizer_bb_sptr_swigregister
catv_randomizer_bb_sptr_swigregister(catv_randomizer_bb_sptr)


catv_randomizer_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
catv_randomizer_bb = catv_randomizer_bb.make;

class catv_frame_sync_enc_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::catv_frame_sync_enc_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::catv_frame_sync_enc_bb)> self) -> catv_frame_sync_enc_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::catv_frame_sync_enc_bb)> self, catv_frame_sync_enc_bb p) -> catv_frame_sync_enc_bb_sptr
        """
        this = _dtv_swig.new_catv_frame_sync_enc_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(catv_frame_sync_enc_bb_sptr self) -> catv_frame_sync_enc_bb"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_catv_frame_sync_enc_bb_sptr
    __del__ = lambda self: None

    def make(self, ctrlword):
        """make(catv_frame_sync_enc_bb_sptr self, int ctrlword) -> catv_frame_sync_enc_bb_sptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_make(self, ctrlword)


    def history(self):
        """history(catv_frame_sync_enc_bb_sptr self) -> unsigned int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(catv_frame_sync_enc_bb_sptr self, int which, int delay)
        declare_sample_delay(catv_frame_sync_enc_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(catv_frame_sync_enc_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(catv_frame_sync_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(catv_frame_sync_enc_bb_sptr self) -> double"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_relative_rate(self)


    def start(self):
        """start(catv_frame_sync_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_start(self)


    def stop(self):
        """stop(catv_frame_sync_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(catv_frame_sync_enc_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(catv_frame_sync_enc_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(catv_frame_sync_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(catv_frame_sync_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(catv_frame_sync_enc_bb_sptr self)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(catv_frame_sync_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(catv_frame_sync_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(catv_frame_sync_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(catv_frame_sync_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(catv_frame_sync_enc_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(catv_frame_sync_enc_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(catv_frame_sync_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(catv_frame_sync_enc_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(catv_frame_sync_enc_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(catv_frame_sync_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full(catv_frame_sync_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(catv_frame_sync_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(catv_frame_sync_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(catv_frame_sync_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(catv_frame_sync_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(catv_frame_sync_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full(catv_frame_sync_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(catv_frame_sync_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(catv_frame_sync_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(catv_frame_sync_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(catv_frame_sync_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(catv_frame_sync_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(catv_frame_sync_enc_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(catv_frame_sync_enc_bb_sptr self)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(catv_frame_sync_enc_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(catv_frame_sync_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(catv_frame_sync_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(catv_frame_sync_enc_bb_sptr self, int priority) -> int"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(catv_frame_sync_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(catv_frame_sync_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(catv_frame_sync_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(catv_frame_sync_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(catv_frame_sync_enc_bb_sptr self) -> long"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(catv_frame_sync_enc_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(catv_frame_sync_enc_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(catv_frame_sync_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(catv_frame_sync_enc_bb_sptr self, std::string name)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(catv_frame_sync_enc_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(catv_frame_sync_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(catv_frame_sync_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(catv_frame_sync_enc_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.catv_frame_sync_enc_bb_sptr_message_subscribers(self, which_port)

catv_frame_sync_enc_bb_sptr_swigregister = _dtv_swig.catv_frame_sync_enc_bb_sptr_swigregister
catv_frame_sync_enc_bb_sptr_swigregister(catv_frame_sync_enc_bb_sptr)


catv_frame_sync_enc_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
catv_frame_sync_enc_bb = catv_frame_sync_enc_bb.make;

class catv_trellis_enc_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::dtv::catv_trellis_enc_bb)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::dtv::catv_trellis_enc_bb)> self) -> catv_trellis_enc_bb_sptr
        __init__(boost::shared_ptr<(gr::dtv::catv_trellis_enc_bb)> self, catv_trellis_enc_bb p) -> catv_trellis_enc_bb_sptr
        """
        this = _dtv_swig.new_catv_trellis_enc_bb_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(catv_trellis_enc_bb_sptr self) -> catv_trellis_enc_bb"""
        return _dtv_swig.catv_trellis_enc_bb_sptr___deref__(self)

    __swig_destroy__ = _dtv_swig.delete_catv_trellis_enc_bb_sptr
    __del__ = lambda self: None

    def make(self):
        """make(catv_trellis_enc_bb_sptr self) -> catv_trellis_enc_bb_sptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_make(self)


    def history(self):
        """history(catv_trellis_enc_bb_sptr self) -> unsigned int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(catv_trellis_enc_bb_sptr self, int which, int delay)
        declare_sample_delay(catv_trellis_enc_bb_sptr self, unsigned int delay)
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(catv_trellis_enc_bb_sptr self, int which) -> unsigned int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(catv_trellis_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(catv_trellis_enc_bb_sptr self) -> double"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_relative_rate(self)


    def start(self):
        """start(catv_trellis_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_start(self)


    def stop(self):
        """stop(catv_trellis_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(catv_trellis_enc_bb_sptr self, unsigned int which_input) -> uint64_t"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(catv_trellis_enc_bb_sptr self, unsigned int which_output) -> uint64_t"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(catv_trellis_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(catv_trellis_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(catv_trellis_enc_bb_sptr self)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(catv_trellis_enc_bb_sptr self) -> bool"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(catv_trellis_enc_bb_sptr self, int m)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(catv_trellis_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(catv_trellis_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(catv_trellis_enc_bb_sptr self, long max_output_buffer)
        set_max_output_buffer(catv_trellis_enc_bb_sptr self, int port, long max_output_buffer)
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(catv_trellis_enc_bb_sptr self, int i) -> long"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(catv_trellis_enc_bb_sptr self, long min_output_buffer)
        set_min_output_buffer(catv_trellis_enc_bb_sptr self, int port, long min_output_buffer)
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(catv_trellis_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full(catv_trellis_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(catv_trellis_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_avg(catv_trellis_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(catv_trellis_enc_bb_sptr self, int which) -> float
        pc_input_buffers_full_var(catv_trellis_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(catv_trellis_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full(catv_trellis_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(catv_trellis_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_avg(catv_trellis_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(catv_trellis_enc_bb_sptr self, int which) -> float
        pc_output_buffers_full_var(catv_trellis_enc_bb_sptr self) -> pmt_vector_float
        """
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(catv_trellis_enc_bb_sptr self) -> float"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(catv_trellis_enc_bb_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(catv_trellis_enc_bb_sptr self)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(catv_trellis_enc_bb_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(catv_trellis_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(catv_trellis_enc_bb_sptr self) -> int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(catv_trellis_enc_bb_sptr self, int priority) -> int"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(catv_trellis_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_name(self)


    def symbol_name(self):
        """symbol_name(catv_trellis_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(catv_trellis_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(catv_trellis_enc_bb_sptr self) -> io_signature_sptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(catv_trellis_enc_bb_sptr self) -> long"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(catv_trellis_enc_bb_sptr self) -> basic_block_sptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(catv_trellis_enc_bb_sptr self, int ninputs, int noutputs) -> bool"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(catv_trellis_enc_bb_sptr self) -> std::string"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(catv_trellis_enc_bb_sptr self, std::string name)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(catv_trellis_enc_bb_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _dtv_swig.catv_trellis_enc_bb_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(catv_trellis_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(catv_trellis_enc_bb_sptr self) -> swig_int_ptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(catv_trellis_enc_bb_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _dtv_swig.catv_trellis_enc_bb_sptr_message_subscribers(self, which_port)

catv_trellis_enc_bb_sptr_swigregister = _dtv_swig.catv_trellis_enc_bb_sptr_swigregister
catv_trellis_enc_bb_sptr_swigregister(catv_trellis_enc_bb_sptr)


catv_trellis_enc_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
catv_trellis_enc_bb = catv_trellis_enc_bb.make;



